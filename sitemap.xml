<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Didik Setiawan</title>
    <description>Didik Setiawan's Blog</description>
    <link>https://www.didiksetiawan.com/</link>
    <atom:link href="https://www.didiksetiawan.com/sitemap.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 22 Mar 2019 16:19:25 +0700</pubDate>
    <lastBuildDate>Fri, 22 Mar 2019 16:19:25 +0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>GSoC with GNU Wget2 - Part III</title>
        <description>&lt;p&gt;This is the last part of my GSoC 2017 journal trilogy. In this period, my
patches of this project must be sent so they can be reviewed. In order to pass
this final evaluations, I must submitted my work and try to merge it to
upstream codebase. As my previous period, I face with some obstacles but
mentors help me a lot to get rid of it so the project goals was achieved.&lt;/p&gt;

&lt;h3 id=&quot;9th-week&quot;&gt;9th Week&lt;/h3&gt;

&lt;p&gt;Some progress I made in this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix connection handler using chunked transfer encoding&lt;/li&gt;
  &lt;li&gt;Fix CI testing on Gitlab MingW64 and Travis OSX&lt;/li&gt;
  &lt;li&gt;Add HTTP digest authentication test&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also started working on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix CI testing on Gitlab MingW64 and Travis OSX
    &lt;ul&gt;
      &lt;li&gt;MingW64: Need a script for complete setup Libmicrohttpd with HTTPS support&lt;/li&gt;
      &lt;li&gt;OSX: Need more verbose debug since it fails to run HTTPS server&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Add HTTP digest authentication test&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;10th-week&quot;&gt;10th Week&lt;/h3&gt;

&lt;p&gt;What I have done in this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix CI testing on Travis OSX: I must install Libmicrohttpd from source to get
support for HTTPS. Maybe the Libmicrohttpd package provided by Homebrew
Package Manager not compiled with HTTPS support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tasks which still in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix CI testing on Gitlab MingW64
    &lt;ul&gt;
      &lt;li&gt;MingW64: Need a script for complete setup Libmicrohttpd&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Add HTTP digest authentication test&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11th-week&quot;&gt;11th Week&lt;/h3&gt;

&lt;p&gt;I have some problem with Wget2 build with Libmicrohttpd on MingW64. I have add
some commands to build Libmicrohttpd from source, and it was successfully built
and installed. But when it used to build Wget2, I get this problem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make[2]: Entering directory '/builds/gnuwget/wget2/tests'
  CC       libtest_la-libtest.lo
&amp;lt;command-line&amp;gt;:0:9: error: expected identifier or '(' before string constant
libtest.c: In function '_http_server_start':
libtest.c:595:4: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
    if (getnameinfo(addr, addr_len, NULL, 0, s_port, sizeof(s_port), NI_NUMERICSERV) == 0)
    ^~
libtest.c:597:5: note: ...this statement, but the latter is misleadingly indented as if it is
+guarded by the 'if'
     if (SERVER_MODE == HTTP_MODE)
     ^~
Makefile:2512: recipe for target 'libtest_la-libtest.lo' failed
make[2]: *** [libtest_la-libtest.lo] Error 1
make[2]: Leaving directory '/builds/gnuwget/wget2/tests'
Makefile:1552: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/builds/gnuwget/wget2'
Makefile:1461: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Based on my analysis, the error may caused by how I embed the Libmicrohttpd.
When I look at the examples, they mostly include “platform.h” in the header.
But, if I look at the docs:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * @file platform.h
 * @brief platform-specific includes for libmicrohttpd
 * @author Christian Grothoff
 *
 * This file is included by the libmicrohttpd code
 * before &quot;microhttpd.h&quot;; it provides the required
 * standard headers (which are platform-specific).&amp;lt;p&amp;gt;
 *
 * Note that this file depends on our configure.ac
 * build process and the generated config.h file.
 * Hence you cannot include it directly in applications
 * that use libmicrohttpd.
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, I don’t use platform.h. I follow example from Libmicrohttpd homepage, which
they just add:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;microhttpd.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evgeny Grin replied, he thinks they (as Libmicrohttpd maintainer) should
document it more explicitly. &lt;code class=&quot;highlighter-rouge&quot;&gt;platform.h &lt;/code&gt; is not installed with MHD and used
in examples only to avoid including a lot of system headers (which might be not
available on some platforms).&lt;br /&gt;
On other CI testing using Debian, Fedora, OSX using either GCC or Clang, Wget2
can build successfully, but not in Mingw64. Also I tried to compile using
Mingw64 on my local system (Ubuntu), and the result is same like on CI.&lt;br /&gt;
Evgeny said, according to quoted error, I might have some configuration problem.
He asks me to ensure me to properly set &lt;code class=&quot;highlighter-rouge&quot;&gt;--build=&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--host= &lt;/code&gt; configure
parameters. Then try to make by &lt;code class=&quot;highlighter-rouge&quot;&gt;make all V=1&lt;/code&gt; or use configure parameter
&lt;code class=&quot;highlighter-rouge&quot;&gt;--disable-silent-rules&lt;/code&gt; to get more verbose output.&lt;br /&gt;
This is my build configuration on &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get -y install gcc-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-x86-64-dev pkg-co&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;+nfig-mingw-w64-x86-64 win-iconv-mingw-w64-dev wine wget&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- cd ..&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export PREFIX=x86_64-w64-mingw32&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export CC=$PREFIX-gcc&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export CXX=$PREFIX-g++&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export CPP=$PREFIX-cpp&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export RANLIB=$PREFIX-ranlib&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export PATH=&quot;/usr/$PREFIX/bin:$PATH&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export CFLAGS=&quot;-O2 -Wall -Wno-format -lpthread&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export WINEPATH=&quot;/usr/$PREFIX/bin;/usr/$PREFIX/lib&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;# Install Libmicrohttpd from source&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- wget http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.55.tar.gz&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- tar zxf libmicrohttpd-0.9.55.tar.gz &amp;amp;&amp;amp; cd libmicrohttpd-0.9.55/&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- ./configure --build=x86_64-pc-linux-gnu --host=$PREFIX --enable-shared --enable-static --prefix=/usr/$PREFIX --disable-silent-rules&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- make clean&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- make -j$(nproc)&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- make install&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- cd - &amp;amp;&amp;amp; cd wget2&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- ./bootstrap&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export CFLAGS=&quot;-O2 -Wall -Wno-format&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- export WINEPATH=&quot;/usr/$PREFIX/bin;/usr/$PREFIX/lib;$PWD/libwget/.libs&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- ./configure --build=x86_64-pc-linux-gnu --host=$PREFIX --enable-shared --enable-static --disable-silent-rules&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- make clean&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- make -j$(nproc)&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;- make check -j$(nproc) LOG_COMPILER=wine&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Making all in tests
make[2]: Entering directory '/builds/gnuwget/wget2/tests'
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H
-DDATADIR=\&quot;/builds/gnuwget/wget2/data\&quot; -DSRCDIR=\&quot;/builds/gnuwget/wget2/tests\&quot;
-DEXEEXT=\&quot;.exe\&quot; -I. -I..  -I. -I../include/wget -I../lib -I../lib -fvisibility=hidden
-DBUILDING_LIBWGET -DWGETVER_FILE=\&quot;../include/wget/wgetver.h\&quot;
-I/usr/x86_64-w64-mingw32/include -DNDEBUG -O2 -Wall -Wno-format -Wno-attributes -fno-PIC -MT
libtest_la-libtest.lo -MD -MP -MF .deps/libtest_la-libtest.Tpo -c -o libtest_la-libtest.lo `test
-f 'libtest.c' || echo './'`libtest.c
libtool: compile:  x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H
-DDATADIR=\&quot;/builds/gnuwget/wget2/data\&quot; -DSRCDIR=\&quot;/builds/gnuwget/wget2/tests\&quot;
-DEXEEXT=\&quot;.exe\&quot; -I. -I.. -I. -I../include/wget -I../lib -I../lib -fvisibility=hidden
-DBUILDING_LIBWGET -DWGETVER_FILE=\&quot;../include/wget/wgetver.h\&quot;
-I/usr/x86_64-w64-mingw32/include -DNDEBUG -O2 -Wall -Wno-format -Wno-attributes -fno-PIC -MT
libtest_la-libtest.lo -MD -MP -MF .deps/libtest_la-libtest.Tpo -c libtest.c  -DDLL_EXPORT -DPIC
-o .libs/libtest_la-libtest.o
&amp;lt;command-line&amp;gt;:0:9: error: expected identifier or '(' before string constant
libtest.c: In function '_http_server_start':
libtest.c:595:4: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
    if (getnameinfo(addr, addr_len, NULL, 0, s_port, sizeof(s_port), NI_NUMERICSERV) == 0)
    ^~
libtest.c:597:5: note: ...this statement, but the latter is misleadingly indented as if it is
+guarded by the 'if'
     if (SERVER_MODE == HTTP_MODE)
     ^~
Makefile:2512: recipe for target 'libtest_la-libtest.lo' failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I still don’t have a clue about this build error.&lt;/p&gt;

&lt;p&gt;Evgeny gives some clues.  I can skip explicit specifications of CC, CXX (not
needed for Libmicrohttpd), CPP and RANLIB as all of them should be detected by
configure if I specify correctly &lt;code class=&quot;highlighter-rouge&quot;&gt;--build&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--host&lt;/code&gt;.&lt;br /&gt;
He asks why do I specify &lt;code class=&quot;highlighter-rouge&quot;&gt;-lpthread&lt;/code&gt; flag for Libmicrohttpd? Libmicrohttpd on
w32 uses native w32 threads by default.  Also Libmicrohttpd should not require
Wine to build. I will fix this, both &lt;code class=&quot;highlighter-rouge&quot;&gt;-lpthread&lt;/code&gt; and wine. But, I just remember
why I add &lt;code class=&quot;highlighter-rouge&quot;&gt;-lpthread&lt;/code&gt; as CFLAGS option. When I omit that option, I got this
error messages when I build Libmicrohttpd:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtool: link: x86_64-w64-mingw32-gcc -DWINDOWS -O2 -Wall -Wno-format
-fno-strict-aliasing -o .libs/authorization_example.exe authorization_example.o
../../src/microhttpd/.libs/libmicrohttpd.dll.a -lws2_32
-L/usr/x86_64-w64-mingw32/lib
libtool: link: x86_64-w64-mingw32-gcc -DWINDOWS -O2 -Wall -Wno-format
-fno-strict-aliasing -o .libs/upgrade_example.exe upgrade_example.o
../../src/microhttpd/.libs/libmicrohttpd.dll.a -lws2_32
-L/usr/x86_64-w64-mingw32/lib
upgrade_example.o:upgrade_example.c:(.text+0x74): undefined reference to
`pthread_create'
upgrade_example.o:upgrade_example.c:(.text+0x82): undefined reference to
`pthread_detach'
collect2: error: ld returned 1 exit status
Makefile:796: recipe for target 'upgrade_example.exe' failed
make[4]: *** [upgrade_example.exe] Error 1
make[4]: *** Waiting for unfinished jobs....
make[4]: Leaving directory '/builds/dstw/libmicrohttpd-0.9.55/src/examples'
Makefile:932: recipe for target 'all-recursive' failed
make[3]: *** [all-recursive] Error 1
make[3]: Leaving directory '/builds/dstw/libmicrohttpd-0.9.55/src/examples'
Makefile:414: recipe for target 'all-recursive' failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evgeny helps with fixed this error by make a change to Libmicrohttpd codebase on
git master branch. He also gives suggestions. I don’t need examples to test wget
so I can disable them by &lt;code class=&quot;highlighter-rouge&quot;&gt;--disable-examples&lt;/code&gt; configure switch. In addition, I
can disable build of documentation by &lt;code class=&quot;highlighter-rouge&quot;&gt;--disable-doc&lt;/code&gt; to speedup Libmicrohttpd
building.&lt;br /&gt;
But all of them should be not related to error. He then give me an important
point to start resolving my error result [0]. Based from his guidance, this is
what I get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Making all in tests
make[2]: Entering directory '/home/didik/wget2/tests'
/bin/bash ../libtool  --tag=CC   --mode=compile x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H
-DDATADIR=\&quot;/home/didik/wget2/data\&quot; -DSRCDIR=\&quot;/home/didik/wget2/tests\&quot; -DEXEEXT=\&quot;.exe\&quot; -I.
-I..  -I. -I../include/wget -I../lib -I../lib -fvisibility=hidden -DBUILDING_LIBWGET
-DWGETVER_FILE=\&quot;../include/wget/wgetver.h\&quot;   -O2 -Wall -Wno-format --save-temps
-Wno-attributes -fno-PIC -Wall -Wextra -Wformat=2 -fdiagnostics-color=always -Wno-format
-I/usr/x86_64-w64-mingw32/include -I/usr/x86_64-w64-mingw32/include -DNDEBUG -O2 -Wall
-Wno-format --save-temps -Wno-attributes -fno-PIC -MT libtest_la-libtest.lo -MD -MP -MF
.deps/libtest_la-libtest.Tpo -c -o libtest_la-libtest.lo `test -f 'libtest.c' || echo
'./'`libtest.c
libtool: compile:  x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H -DDATADIR=\&quot;/home/didik/wget2/data\&quot;
-DSRCDIR=\&quot;/home/didik/wget2/tests\&quot; -DEXEEXT=\&quot;.exe\&quot; -I. -I.. -I. -I../include/wget -I../lib
-I../lib -fvisibility=hidden -DBUILDING_LIBWGET -DWGETVER_FILE=\&quot;../include/wget/wgetver.h\&quot; -O2
-Wall -Wno-format --save-temps -Wno-attributes -fno-PIC -Wall -Wextra -Wformat=2
-fdiagnostics-color=always -Wno-format -I/usr/x86_64-w64-mingw32/include
-I/usr/x86_64-w64-mingw32/include -DNDEBUG -O2 -Wall -Wno-format --save-temps -Wno-attributes
-fno-PIC -MT libtest_la-libtest.lo -MD -MP -MF .deps/libtest_la-libtest.Tpo -c libtest.c
-DDLL_EXPORT -DPIC -o .libs/libtest_la-libtest.o
In file included from /usr/share/mingw-w64/include/objbase.h:66:0,
                 from /usr/share/mingw-w64/include/ole2.h:17,
                 from /usr/share/mingw-w64/include/wtypes.h:12,
                 from /usr/share/mingw-w64/include/winscard.h:10,
                 from /usr/share/mingw-w64/include/windows.h:97,
                 from /usr/share/mingw-w64/include/winsock2.h:23,
                 from /usr/share/mingw-w64/include/ws2tcpip.h:17,
                 from /usr/x86_64-w64-mingw32/include/microhttpd.h:108,
                 from libtest.c:48:
/usr/share/mingw-w64/include/objidl.h:12275:2: error: expected identifier or '(' before string
constant
 } DATADIR;
  ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This lead me to &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/mingw-64/include/objidl.h&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;line  | contents
------|------------------------------------
12271 | typedef IDataObject *LPDATAOBJECT;
12272 | typedef enum tagDATADIR {
12273 |     DATADIR_GET = 1,
12274 |     DATADIR_SET = 2
12275 | } DATADIR;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evgeny explains well to me, he thinks the real problem is: after preprocessing
source by precompiler, compiler get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;typedef enum tagDATADIR {
     DATADIR_GET = 1,
     DATADIR_SET = 2
} &quot;/usr/some/dir&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I need to either &lt;code class=&quot;highlighter-rouge&quot;&gt;undef DATADIR &lt;/code&gt; before including problematic header or find
the way how not to include problematic header. Alternatively, I can replace
macro &lt;code class=&quot;highlighter-rouge&quot;&gt;DATADIR &lt;/code&gt; by something like &lt;code class=&quot;highlighter-rouge&quot;&gt;MY_DATADIR&lt;/code&gt;, but it will require more code
changes on Wget2 side.&lt;br /&gt;
I use his last option. I tried to change &lt;code class=&quot;highlighter-rouge&quot;&gt;DATADIR &lt;/code&gt; macro on Wget2 using other
&lt;code class=&quot;highlighter-rouge&quot;&gt;DATADIR&lt;/code&gt; names so they don’t clash and it solves the problem.  Actually, there
are not so many code which need to be changed, but I will open issue first on
Wget2 about this [1]. After confirmed this was valid issue by Tim Ruehsen, I
made a merge request [2] and it was accepted.&lt;br /&gt;
Another progress I made this week is adding CI testing to simulate Wget2 build
without Libmicrohttpd installed. This is just a copy of main build process but
without &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt; part, so the Wget2 binary can be built with skipped
testing. I do it by made a branch without Libmicrohttpd installed.&lt;/p&gt;

&lt;h3 id=&quot;12th-week&quot;&gt;12th Week&lt;/h3&gt;

&lt;p&gt;This week I focused my work on task adding HTTP digest authentication test. I
found an issue regarding HTTP digest authentication not work properly. I tried
to analyzed it first because throw this issue to public. After I sure that my
issue reproducible and make sense, I create issue and merge request respectively
[3][4]. The merge request was accepted.&lt;/p&gt;

&lt;h3 id=&quot;13th-week&quot;&gt;13th Week&lt;/h3&gt;

&lt;p&gt;At this point I made a merge request regarding my work on this project [4].
After get reviewed by mentors and other contributors, it finally merged. To
complete final evaluations, I must submit final report which contains summary of
my work and patches I made. It could be link to Github Repositository, Github
Gist, Blog Post, Google Drive, etc, which can be accessed from public. I choose
to use Google Drive to save my report. Here is the link [5] to my work if you
want to check.&lt;/p&gt;

&lt;h3 id=&quot;final-evaluations&quot;&gt;Final Evaluations&lt;/h3&gt;

&lt;p&gt;After making it until 13th week of works, it was time to get announcement. I got
email that said I was passed on this final evaluations. As always mentors give
me feedback.&lt;br /&gt;
He said, I did a good job with the project this year. There are a few small
issues still lying, but they can be easily cleaned up very quick. Over the
period, I have definitely grown as a programmer, however I should be a little
more active in the community.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;GSoC give me priceless experience about how to getting involved in open source
community. I have enjoyed working with my organization over the last few months
and I will continue to work with them and make sure my code that I have worked
so hard on over these last few months is integrated into their code base. I
will try to keep active in community and contributing more while GSoC passed.
I hope my small contribution was useful for all.&lt;/p&gt;

&lt;p&gt;Reference(s):&lt;br /&gt;
[0] &lt;a href=&quot;https://sourceforge.net/p/msys2/discussion/general/thread/c1aa51f9/&quot;&gt;https://sourceforge.net/p/msys2/discussion/general/thread/c1aa51f9/&lt;/a&gt;&lt;br /&gt;
[1] &lt;a href=&quot;https://gitlab.com/gnuwget/wget2/issues/250&quot;&gt;https://gitlab.com/gnuwget/wget2/issues/250&lt;/a&gt;&lt;br /&gt;
[2] &lt;a href=&quot;https://gitlab.com/gnuwget/wget2/merge_requests/264&quot;&gt;https://gitlab.com/gnuwget/wget2/merge_requests/264&lt;/a&gt;&lt;br /&gt;
[3] &lt;a href=&quot;https://gitlab.com/gnuwget/wget2/issues/237&quot;&gt;https://gitlab.com/gnuwget/wget2/issues/237&lt;/a&gt;&lt;br /&gt;
[4] &lt;a href=&quot;https://gitlab.com/gnuwget/wget2/merge_requests/265&quot;&gt;https://gitlab.com/gnuwget/wget2/merge_requests/265&lt;/a&gt;&lt;br /&gt;
[5] &lt;a href=&quot;https://drive.google.com/drive/folders/0B4yUFvLvAUANLU10X19qckZ6UkE?usp=sharing&quot;&gt;https://drive.google.com/drive/folders/0B4yUFvLvAUANLU10X19qckZ6UkE?usp=sharing&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Mar 2018 05:21:00 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2018/03/20/gsoc-with-gnu-wget2-part-iii/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2018/03/20/gsoc-with-gnu-wget2-part-iii/</guid>
        
        
        <category>open_source</category>
        
        <category>programming</category>
        
        <category>collaboration</category>
        
        <category>gsoc</category>
        
      </item>
    
      <item>
        <title>GSoC with GNU Wget2 - Part II</title>
        <description>&lt;p&gt;This is story about my second journey in the Google Summer of Code (GSoC) 2017.
From the previous phase, I made some basic progress. I also got many unresolved
tasks to be done. Started on this week, I try to follow Darshit Shah advice to
increase my report from weekly to daily. However, in reality, it was difficult
to create daily report, there must be day that I report nothing because what I
do was actually stuck in my problem.&lt;br /&gt;
What I have got so far:&lt;/p&gt;

&lt;p&gt;Started working on &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt; to use Libmicrohttpd as HTTP
server. Workflow to resolve this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove initial process for HTTP server socket&lt;/li&gt;
  &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server_start()&lt;/code&gt; function, wrapper for Libmicrohttpd. There is
also function &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; which use to create proper HTTP
response&lt;/li&gt;
  &lt;li&gt;Use select method (&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_USE_SELECT_INTERNALLY&lt;/code&gt;) for threading model in
Libmicrohttpd to get better compatibility&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_port&lt;/code&gt; seized automatically using Libmicrohttpd function by
passing &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_LISTEN_FD&lt;/code&gt; parameter to
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Using iteration to parse urls data in &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt;. This
guarantee we can pass any variadic data to Libmicrohttpd and prevent
segmentation fault&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; function to create proper HTTP response:
    &lt;ul&gt;
      &lt;li&gt;Handle arguments (query string) on URL&lt;/li&gt;
      &lt;li&gt;Handle redirection&lt;/li&gt;
      &lt;li&gt;Handle chunked transfer encoding&lt;/li&gt;
      &lt;li&gt;Handle directory creation&lt;/li&gt;
      &lt;li&gt;Handle URL with IRI object&lt;/li&gt;
      &lt;li&gt;Handle URL with IDN hostname&lt;/li&gt;
      &lt;li&gt;Handle URL with query string which contains space&lt;/li&gt;
      &lt;li&gt;Handle If-Modified-Since header&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fix segmentation fault error when build on Fedora/Clang CI runner. This
caused by former variable &lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_tid&lt;/code&gt; that forget to removed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Things which would be done in the upcoming week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are still problem occurred when running &lt;code class=&quot;highlighter-rouge&quot;&gt;make check-valgrind&lt;/code&gt; on some
tests. This prevent me to pass the CI test&lt;/li&gt;
  &lt;li&gt;Fix all remaining unfinished test covered by Libmicrohttpd code:
    &lt;ul&gt;
      &lt;li&gt;test-wget1.c: add capability for HTTP 406 Range Not Satisfiable&lt;/li&gt;
      &lt;li&gt;test-auth-basic.c: add basic authentication test&lt;/li&gt;
      &lt;li&gt;test-metalink.c: looping&lt;/li&gt;
      &lt;li&gt;test-i-https.c: add HTTPS test&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fix Libmicrohttpd depedency on Wget2, just required when need to run test
suite&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5th-week&quot;&gt;5th Week&lt;/h3&gt;

&lt;p&gt;I started my week with ask a question into my mentors. I try to resolve the
check-valgrind problems. What I do so far, I split tests into two groups: pass
and fail. I pick one from the fail group, take one from example,
test-directory-clash. From the valgrind log it shows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;==30425== ERROR SUMMARY: 24 errors from 2 contexts (suppressed: 0 from 0)
==30425==
==30425== 4 errors in context 1 of 2:
==30425== Thread 2:
==30425== Invalid read of size 1
==30425==    at 0x556F570: __strcmp_sse2_unaligned (strcmp-sse2-unaligned.S:24)
==30425==    by 0x4E6D1C2: wget_strcmp (utils.c:82)
==30425==    by 0x40CF61: try_connection (wget.c:1088)
==30425==    by 0x40D1E6: establish_connection (wget.c:1151)
==30425==    by 0x40EA0D: downloader_thread (wget.c:1626)
==30425==    by 0x52BA6B9: start_thread (pthread_create.c:333)
==30425==    by 0x55D73DC: clone (clone.S:109)
==30425==  Address 0xa716033 is 163 bytes inside a block of size 180 free'd
==30425==    at 0x4C2EDEB: free (in
/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30425==    by 0x4E5EDD0: wget_iri_free (iri.c:178)
==30425==    by 0x408267: host_remove_job (host.c:347)
==30425==    by 0x40EC4E: downloader_thread (wget.c:1698)
==30425==    by 0x52BA6B9: start_thread (pthread_create.c:333)
==30425==    by 0x55D73DC: clone (clone.S:109)
==30425==  Block was alloc'd at
==30425==    at 0x4C2DB8F: malloc (in
/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30425==    by 0x4E6F2C2: wget_malloc (xalloc.c:85)
==30425==    by 0x4E5EE69: wget_iri_parse (iri.c:231)
==30425==    by 0x4E601AC: wget_iri_parse_base (iri.c:623)
==30425==    by 0x407FC6: host_add_robotstxt_job (host.c:288)
==30425==    by 0x40ACE0: add_url_to_queue (wget.c:438)
==30425==    by 0x40C273: main (wget.c:853)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I try to modify the test, adding option –no-robots. The result, valgrind check
exited normally. Therefore, I make a conclusion and guest that the robots.txt
processor on Wget2 and my Libmicrohttpd code in libtest.c trigger memory leak.
I have no idea about this. I can just guest that this is related to libgcrypt
error previously said by Christian Grothoff. Although I still found that
libgcrypt error in passed test.&lt;/p&gt;

&lt;p&gt;Evgeny Grin gives a review about my works, he direct pointed to the code I
attached for review purpose.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_scan_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He asks why do I use underscore as prefix for functions. Usually it is used by
libraries to avoid name conflict. First, I think that I need to remove the
underscore, then Tim Ruehsen also give comment that this is also useful in
projects where there is more than one C file. They use it to make clear that a
function/variable is static (not consequently everywhere, though). So, I leaved
the underscore as is.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_parse_hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wget_strncasecmp_ascii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

              &lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strdup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He asks me about the reason for using &lt;code class=&quot;highlighter-rouge&quot;&gt;strdup()&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;free()&lt;/code&gt;. I checked string
twice (by &lt;code class=&quot;highlighter-rouge&quot;&gt;strchr()&lt;/code&gt; and by my custom iterations). It just waste of CPU time.
He gives simpler implementation:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I applied the changes to my code.&lt;br /&gt;
Evgeny also give note that according to current HTTP specification ‘+’ must NOT
be used as replacement for ‘ ’ (space) in URLs. When I learn about this problem, it
leads me to here [0]. Then if it need to be applied, I need to modify test file:
test-base.c to not use ‘+’, and use %2B instead.&lt;br /&gt;
Tim added that the ‘+’ was always just for the query part. He asks to Evgeny
what document are you exactly referring to to. Not that he is against dropping
the ‘+’ rule, but what consortium is not accepted as normative by everyone,
while IETF is. He is unsure about what ‘spec’ to follow. So, I keep my changes
of how I treat the ‘ ’ (space).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_out_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_ValueKind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                              &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evgeny said that we are not allowed to modify any content pointed by pointer to
const. By dropping ‘const’ qualifiers are violating API. In other words: I was
modifying internal structures that are not expected to be modified and the
result is unpredictable.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I fixed them then.&lt;br /&gt;
He also gives me some questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is &lt;code class=&quot;highlighter-rouge&quot;&gt;url_arg&lt;/code&gt; a global variable?&lt;/li&gt;
  &lt;li&gt;Do I use single thread only?&lt;/li&gt;
  &lt;li&gt;Why not to pass pointer to &lt;code class=&quot;highlighter-rouge&quot;&gt;url_arg&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;cls&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;What about &lt;code class=&quot;highlighter-rouge&quot;&gt;url_it&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;url_it2&lt;/code&gt;? It is hard to guess meaning from name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I need to pass all of them, I was advised to define some structure with three
pointers and pass pointer to structure.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;answer_to_connection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_Connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_data_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;con_cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_Response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;MHD_get_connection_values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_GET_ARGUMENT_KIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_out_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;wget_buffer_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nurls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_scan_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_parse_hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;n&quot;&gt;wget_buffer_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;MHD_http_unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;302 Redirect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_create_response_from_buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;302 Redirect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;302 Redirect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_RESPMEM_PERSISTENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                              &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
                              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_strmemdup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;MHD_add_response_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_queue_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_HTTP_FOUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;wget_xfree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nurls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nurls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_create_response_from_buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_RESPMEM_PERSISTENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He asks me again to ensure that content of &lt;code class=&quot;highlighter-rouge&quot;&gt;urls[itt].body&lt;/code&gt; will be valid until
end of this connection. Otherwise I must use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_RESPMEM_MUST_COPY&lt;/code&gt; as last
parameter. I followed his advice and fix my code later.&lt;/p&gt;

&lt;p&gt;Two generic advises that very useful he gave to me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Avoid using global variables.&lt;/li&gt;
  &lt;li&gt;Use better names for variables. It it hard to understand what mean
&lt;code class=&quot;highlighter-rouge&quot;&gt;iri_url&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;itt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;itt2&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6th-week&quot;&gt;6th Week&lt;/h3&gt;

&lt;p&gt;I found some difficulties when deal with global variables. I throw a question
to mentors. Based on explanation from Evgeny before, I was given a suggestion
to avoid using global variables. Then, I modify the code to this:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// for passing URL query string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;wget_buffer_t&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_out_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_ValueKind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;answer_to_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_Connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_data_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;con_cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// get query string&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MHD_get_connection_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_GET_ARGUMENT_KIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_out_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;wget_buffer_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wget_buffer_free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I need to pass struct query into &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_connection_values&lt;/code&gt;. But, I never get
expected result, often ends with segmentation faults. Then, I changed variable
initialization to this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct query_string *query = {wget_buffer_alloc(1024), 0};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Still, the result is not what I expected.&lt;br /&gt;
Tim help me with his answers. I asked to switch on warnings (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;touch
.manywarnings&lt;/code&gt; and do &lt;code class=&quot;highlighter-rouge&quot;&gt;./configure&lt;/code&gt; again). Based on it, I will see something
like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtest.c: In function 'answer_to_connection':
libtest.c:357:13: warning: 'query' is used uninitialized in this function [-
Wuninitialized]
  query-&amp;gt;str = wget_buffer_alloc(1024);
  ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I should take such warnings for serious analysis and fix them, e.g. by removing
the pointer here:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      struct query_str query;
...
      query.str = wget_buffer_alloc(1024);
      query.it1 = 0;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I just didn’t allocate my previous &lt;code class=&quot;highlighter-rouge&quot;&gt;*query&lt;/code&gt;. I should use a stack allocation as
above. And that is what all I need. Now, I can pass the variable through the
functions. No more global variable needed.&lt;br /&gt;
Actually I already enable the manywarnings option, nonetheless I can
interpreting the messages. Now, I learned something.&lt;/p&gt;

&lt;h3 id=&quot;7th-week&quot;&gt;7th Week&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Questions about CI testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Previously I said that some CI runner still fail such as Gitlab MingW64 and
Travis OSX where other test passed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gitlab MingW64:&lt;/strong&gt; I have no idea about how to install Libmicrohttpd on
MingW64 with Debian images. Previously, I can install Libmicrohttpd on Fedora
images, but currently Wget2 use Debian. I ask if someone can give me a hint
about how to install packages on Debian MingW64.&lt;br /&gt;
Tim said he doubt there is a MinGW64 Libmicrohttpd package for Fedora (nor for
Debian). But, I always could build my own library, e.g. via &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt;
Libmicrohttpd, cd into the directory, build with MinGW64 (and optionally &lt;code class=&quot;highlighter-rouge&quot;&gt;make
install&lt;/code&gt;). Then set the right library paths for Wget2’s &lt;code class=&quot;highlighter-rouge&quot;&gt;./configure&lt;/code&gt; run as
always.&lt;br /&gt;
This might be tedious since there could be some pitfalls not easy to debug.  His
suggestion would be to leave this step out until I am ready with all the other
stuff. But when I try, I should do it locally first and note the steps I did.&lt;br /&gt;
On Travis Debian test, when I just use &lt;code class=&quot;highlighter-rouge&quot;&gt;apt install libmicrohttpd-dev&lt;/code&gt; in
travis script, it installed Libmicrohttpd &amp;lt;= 0.9.51 which causes problems. So,
I do some workaround with install Libmicrohttpd 0.9.55 from source. Here is the
output of git diff from gitlab-ci and travis.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
index e8d1946..8e77d8e 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/.gitlab-ci.yml
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/.gitlab-ci.yml
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -34,6 +34,8 @@ variables:
&lt;/span&gt; #  * ASan, UBSan, Msan
 #  * distcheck
 Debian GNU/Linux build:
&lt;span class=&quot;gi&quot;&gt;+  before_script:
+    - apt-get update -qq &amp;amp;&amp;amp; apt-get install -y -qq libmicrohttpd-dev
&lt;/span&gt;   image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$DEBIAN_BUILD
   script:
     - ./bootstrap &amp;amp;&amp;amp; touch .manywarnings
&lt;span class=&quot;gu&quot;&gt;@@ -55,6 +57,8 @@ Debian GNU/Linux build:
&lt;/span&gt;       - tests/*.log

 clang/Fedora:
&lt;span class=&quot;gi&quot;&gt;+  before_script:
+    - dnf -y install libmicrohttpd-devel
&lt;/span&gt;   image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
   script:
     - export CC=clang
&lt;span class=&quot;gh&quot;&gt;diff --git a/.travis_setup.sh b/.travis_setup.sh
index 916dbdb..6e5041b 100755
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/.travis_setup.sh
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/.travis_setup.sh
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -14,7 +14,13 @@ if [[ &quot;$TRAVIS_OS_NAME&quot; = &quot;osx&quot; ]]; then
&lt;/span&gt;      brew install xz
      brew install lbzip2
      brew install lzip
&lt;span class=&quot;gi&quot;&gt;+     brew install libgcrypt
+     brew install libmicrohttpd
&lt;/span&gt;      brew link --force gettext
 elif [[ &quot;$TRAVIS_OS_NAME&quot; = &quot;linux&quot; ]]; then
&lt;span class=&quot;gi&quot;&gt;+     sudo apt-get -y install wget
+     wget http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.55.tar.gz
+     tar zxf libmicrohttpd-0.9.55.tar.gz &amp;amp;&amp;amp; cd libmicrohttpd-0.9.55/
+     ./configure --prefix=/usr &amp;amp;&amp;amp; make -j$(nproc) &amp;amp;&amp;amp; sudo make install
&lt;/span&gt;      pip install --user cpp-coveralls
 fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then ask that my snippet above is appropriate or there is any other better
solutions, and Tim said it is fine to use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Travis OSX:&lt;/strong&gt; Failure regarding test with HTTPS support. I have checked
that even I provide all dependencies for TLS/SSL support like gnutls and
libgcrypt, it still fail. I don’t know if it fails because how my code read
certificates provided or other reasons.&lt;br /&gt;
Tim comments is the problem occurs only on the OSX VM. This looks like
Libmicrohttpd is not starting correctly. The same versions (gnutls 3.5.14 and
Libmicrohttpd 0.9.55) work fine here on Debian unstable. I should try to get
more logging output.&lt;br /&gt;
Evgeny also give comments, more output from Libmicrohttpd could give more
information.  What he noticed in the meantime is warning &lt;code class=&quot;highlighter-rouge&quot;&gt;passing const char *
to parameter of type char * discards qualifiers&lt;/code&gt; which means that could
modifying read-only memory. I should try to resolve it not by casting to &lt;code class=&quot;highlighter-rouge&quot;&gt;char
*&lt;/code&gt;.&lt;br /&gt;
Then I have a question, how could I get more verbose messages log of
Libmicrohttpd? I tried to use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_OPTION_EXTERNAL_LOGGER&lt;/code&gt; like in example
provided in &lt;code class=&quot;highlighter-rouge&quot;&gt;msgs_i18n.c&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;httpsdaemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_start_daemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MHD_USE_SELECT_INTERNALLY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_FEATURE_MESSAGES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
                               &lt;span class=&quot;n&quot;&gt;MHD_USE_TLS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_USE_ERROR_LOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;port_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_answer_to_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;MHD_OPTION_EXTERNAL_LOGGER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;MHD_OPTION_HTTPS_MEM_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key_pem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But, it doesn’t generated any useful messages. It Just tell me that the HTTPS
server failed in the runtime.&lt;br /&gt;
Evgeny replied, most probably I was trying to use Libmicrohttpd build without
HTTPS support. I should check original package. Alternatively, I could try
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_is_feature_supported(MHD_FEATURE_SSL)&lt;/code&gt; and skip HTTPS tests if HTTPS is not
supported by Libmicrohttpd. I can also display warning about it during
configure.  Before implementing such check, find first Libmicrohttpd version
where &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_is_feature_supported()&lt;/code&gt; was added.&lt;br /&gt;
I asked about which kind of problems I have with Libmicrohttpd 0.9.51. Evgeny
said most recent versions of Libmicrohttpd are stable, there are only a few
“problematic” versions. I replied with show the build log:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The following NEW packages will be installed:
  libmicrohttpd-dev libmicrohttpd10
0 upgraded, 2 newly installed, 0 to remove and 25 not upgraded.
Need to get 190 kB of archives.
After this operation, 499 kB of additional disk space will be used.

0% [Working]

Get:1 http://us-central1.gce.archive.ubuntu.com/ubuntu trusty/universe amd64 libmicrohttpd10
+amd64 0.9.33-1 [41.0 kB]

======

libtest.c: In function '_http_server_start':
libtest.c:547:3: error: unknown type name 'MHD_socket'
   MHD_socket sock_fd;
   ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It seems the version of Libmicrohttpd installed is 0.9.33-1. For quick
workaround I installed v0.9.55 from source and it works. He also said, indeed
v0.9.33 is too old. But it’s not too hard to handle it:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;microhttpd.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#if MHD_VERSION &amp;lt;= 0x93302
#define MHD_socket int
#endif
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nice pointer. Maybe I can apply this solution later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Questions about many warnings on libtest.c and Libmicrohttpd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here some warning I get when I build &lt;code class=&quot;highlighter-rouge&quot;&gt;libtest.c&lt;/code&gt; on my system. I mentioned my
system that I use Ubuntu 16.04 64 bit with configure command &lt;code class=&quot;highlighter-rouge&quot;&gt;./configure
--enable-manywarnings&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtest.c: In function ‘_load_file’:
libtest.c:166:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  if (size != fread(buffer, 1, size, fp)) {
          ^
libtest.c:227:29: warning: passing argument 1 of ‘_replace_space_with_plus’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
    _replace_space_with_plus(value);

libtest.c:194:14: note: expected ‘char *’ but argument is of type ‘const char *’
 static char *_replace_space_with_plus(char *data)
              ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once I tried to use &lt;code class=&quot;highlighter-rouge&quot;&gt;char *&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;_replace_space_with_plus()&lt;/code&gt; so it becomes
&lt;code class=&quot;highlighter-rouge&quot;&gt;_replace_space_with_plus((char *) key)&lt;/code&gt; but it not allowed (API violation).
Tim suggests me to give &lt;code class=&quot;highlighter-rouge&quot;&gt;query-params&lt;/code&gt; to my “replace function” and iterate through
all chars and add these to the buffer. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;_replace_space_with_plus(query-&amp;gt;params, key);

static void _replace_space_with_plus(wget_buffer_t *buf, const char *data)
{
        for (; *data; data++)
                wget_buffer_memcat(buf, *data == ' ' ? &quot;+&quot; : data, 1);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He said no need to do any optimization at this point.&lt;br /&gt;
However, Evgeny tells that using implicit conversion from &lt;code class=&quot;highlighter-rouge&quot;&gt;const char*&lt;/code&gt; to
&lt;code class=&quot;highlighter-rouge&quot;&gt;char*&lt;/code&gt; is the same API violation. But there is a better solution. If I not
allowed to modify original string (as this this is used for other proposes as
well) and I can read original string, just make my own copy of string and
modify it. And I should free my copy when I don’t need it anymore.&lt;br /&gt;
Here is another warning messages:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtest.c: In function ‘_print_authorization’:
libtest.c:252:63: warning: unused parameter ‘kind’ [-Wunused-parameter]
 static int _print_authorization(void *cls, enum MHD_ValueKind kind,
                                                               ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It used by Libmicrohttpd API but it treated as warning by the compiler.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtest.c:272:64: warning: unused parameter ‘con_cls’ [-Wunused-parameter]
      const char *upload_data, size_t *upload_data_size, void **con_cls)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Same as above, it treated as warning by the compiler, but actually it required.&lt;br /&gt;
Solution from Tim, if I found error regarding &lt;code class=&quot;highlighter-rouge&quot;&gt;-Wunused-parameter&lt;/code&gt; is by adding
the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;G_GNUC_WGET_UNUSED&lt;/code&gt; to the param.&lt;br /&gt;
Another warning messages:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtest.c:429:13: warning: Value MHD_HTTP_REQUESTED_RANGE_NOT_SATISFIABLE is deprecated, use MHD_HTTP_RANGE_NOT_SATISFIABLE
      ret = MHD_queue_response(connection, MHD_HTTP_REQUESTED_RANGE_NOT_SATISFIABLE, response);
             ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It seems about Libmicrohttpd incompatibility. I will provide version checker
(ifdef MHD version) to fix this.&lt;br /&gt;
Tim directs me to the solution:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#ifdef MHD_HTTP_RANGE_NOT_SATISFIABLE
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_queue_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_HTTP_RANGE_NOT_SATISFIABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#else
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_queue_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MHD_HTTP_REQUESTED_RANGE_NOT_SATISFIABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Very clear explanation from him.&lt;br /&gt;
Some warnings regarding unmatching data type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libtest.c: In function ‘_answer_to_connection’:
libtest.c:365:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (int it2 = 0; it2 &amp;lt; countof(urls[it1].headers); it2++) {
                           ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tim said it just as simple as add &lt;code class=&quot;highlighter-rouge&quot;&gt;unsigned&lt;/code&gt; keyword in front of data type,
like below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for (unsigned it2 = 0; it2 &amp;lt; countof(urls[it1].headers); it2++) {
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tim said, in general, I should stick with the Wget2 coding style for
consistency. For example, instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;if (' ' == *data)&lt;/code&gt; use &lt;code class=&quot;highlighter-rouge&quot;&gt;(*data == ' ')&lt;/code&gt;.
He comments about function I write: &lt;code class=&quot;highlighter-rouge&quot;&gt;_get_file_size()&lt;/code&gt;. He suggests to use
&lt;code class=&quot;highlighter-rouge&quot;&gt;stat()&lt;/code&gt;. It’s just single system call. Other function, &lt;code class=&quot;highlighter-rouge&quot;&gt;_load_file()&lt;/code&gt;. He
recommends to use wget built in function, &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_read_file()&lt;/code&gt; as replacement.
Actually I get those functions from Libmicrohttpd implementation example of
HTTPS. Tim suggestions made all of this shorter and simpler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem with HTTP Persistent Connection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of my report said, I need to solve problem of &lt;code class=&quot;highlighter-rouge&quot;&gt;check-valgrind&lt;/code&gt;. I figure out
that the problem come out from connection state of the response which need to
be “closed” after created. The solution is just to add HTTP header “Connection:
Close” in all response without exception.&lt;br /&gt;
Evgeny gives me some clarifications about this. This way I am actually hiding
the problem, not fixing. Both Libmicrohttpd and wget must work perfectly nice
with keep-alive. Moreover, in Libmicrohttpd test suite we run many tests in
two modes: with “keep-alive” and “close” connections to ensure testing of all
sides. He suggest me to fix modification of read-only memory before trying to
resolve valgrind as this modification could easily trigger valgrind errors. If
I run any test in multi-thread mode, he suggests to check thread
synchronisation and concurrent access to modifiable variable.&lt;br /&gt;
After learned that I should leave persistent connection to be exist between
client and server, I try to make a change, just by add HTTP header “Connection:
Close” on request that returned 404, 401 and 416 status code, just like in the
old http server code. Even more, I actually don’t have to close connection
after those response codes. Otherwise, I leave the connection as is
(keep-alive). But, I still found other issues from the result.&lt;br /&gt;
The test case fail if they found robots.txt in server, in other words,
robots.txt returned status 200 OK. Here the error log from running the test
with address sanitizer enabled:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Connection: Keep-Alive
Content-Length: 85
Content-Type: text/plain
Date: Thu, 20 Jul 2017 19:17:43 GMT

21.021743.773 method 2
21.021743.773 nbytes 85 total 85/85
21.021743.773 keep_alive=1
21.021743.773 Scanning robots.txt ...
21.021743.773 host_remove_job: 0x60c00000b980
21.021743.773 host_remove_job: qsize=1 host-&amp;gt;qsize=1
21.021743.774 [0] action=1 pending=0 host=0x60700000df40
21.021743.774 qsize=1 blocked=0
21.021743.774 pause=-1500578263774
21.021743.774 dequeue job http://localhost:41929/index.html
21.021743.774 main: wake up
=================================================================
==14544==ERROR: AddressSanitizer: heap-use-after-free on address 0x610000007de3 at pc
+0x7f16594162d5 bp 0x7f16504fec60 sp 0x7f16504fe408
READ of size 6 at 0x610000007de3 thread T1
    #0 0x7f16594162d4  (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x472d4)
    #1 0x7f1659070c91 in wget_strcmp /home/didik/wget2/libwget/utils.c:82
    #2 0x41b6d4 in try_connection /home/didik/wget2/src/wget.c:1088
    #3 0x41c081 in establish_connection /home/didik/wget2/src/wget.c:1151
    #4 0x422f06 in downloader_thread /home/didik/wget2/src/wget.c:1643
    #5 0x7f1657e176b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #6 0x7f1657b4d3dc in clone (/lib/x86_64-linux-gnu/libc.so.6+0x1073dc)

0x610000007de3 is located 163 bytes inside of 180-byte region [0x610000007d40,0x610000007df4)
freed by thread T1 here:
    #0 0x7f16594672ca in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x982ca)
    #1 0x7f165904840b in wget_iri_free /home/didik/wget2/libwget/iri.c:287
    #2 0x40d5b0 in host_remove_job /home/didik/wget2/src/host.c:347
    #3 0x423800 in downloader_thread /home/didik/wget2/src/wget.c:1715
    #4 0x7f1657e176b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)

previously allocated by thread T0 here:
    #0 0x7f1659467602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
    #1 0x7f16590784da in wget_malloc /home/didik/wget2/libwget/xalloc.c:85
    #2 0x7f1659048648 in wget_iri_parse /home/didik/wget2/libwget/iri.c:350
    #3 0x7f165904da08 in wget_iri_parse_base /home/didik/wget2/libwget/iri.c:818
    #4 0x40c9cf in host_add_robotstxt_job /home/didik/wget2/src/host.c:288
    #5 0x414bba in add_url_to_queue /home/didik/wget2/src/wget.c:438
    #6 0x4192ae in main /home/didik/wget2/src/wget.c:853
    #7 0x7f1657a6682f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

Thread T1 created by T0 here:
    #0 0x7f1659405253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
    #1 0x7f165906d933 in wget_thread_start /home/didik/wget2/libwget/thread.c:48
    #2 0x41a3bf in main /home/didik/wget2/src/wget.c:963
    #3 0x7f1657a6682f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-use-after-free ??:0 ??
Shadow bytes around the buggy address:
  0x0c207fff8f60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8f70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8f80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8f90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8fa0: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
=&amp;gt;0x0c207fff8fb0: fd fd fd fd fd fd fd fd fd fd fd fd[fd]fd fd fa
  0x0c207fff8fc0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c207fff8fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 fa
  0x0c207fff8fe0: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c207fff8ff0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c207fff9000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==14544==ABORTING
Unexpected error code 1, expected 0 [-r -nH]
Removed test directory '.test_14531'
FAIL test-robots (exit status: 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I can see is the process want to use an allocated memory that has been
freed before. But, I still don’t know what exact variable/pointer that trigger
the problem.&lt;br /&gt;
Evgeny give comments about this. It should be pretty straightforward. I should
check what is allocated at &lt;code class=&quot;highlighter-rouge&quot;&gt;host_add_robotstxt_job()-&amp;gt;wget_iri_parse&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;iri.c:350&lt;/code&gt; in main thread. Find out how it’s passed to &lt;code class=&quot;highlighter-rouge&quot;&gt;downloader_thread()&lt;/code&gt;.
Find out how it’s freed by &lt;code class=&quot;highlighter-rouge&quot;&gt;host_remove_job()-&amp;gt;wget_iri_free()&lt;/code&gt;. Find out why
it’s still used in
&lt;code class=&quot;highlighter-rouge&quot;&gt;downloader_thread()-&amp;gt;establish_connection()-&amp;gt;try_connection()&lt;/code&gt; at
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget.c:1088&lt;/code&gt;.&lt;br /&gt;
Tim give me a clue, this is definitely a bug in Wget2 itself. No matter what
the test server is doing, this should not happen. He will try to reproduce this
issue to investigate later.&lt;br /&gt;
Because I feel a little bit rush, I have create a merge request regarding this
[1]. I thought I was doing the right thing, until I realize, I made a mistake.
Instead of posting issue, I made a merge request, which actually I try to
modify code I quite not understand. Hence, I get some cautions about this. But,
because of this, now I know the right procedure how to handle problem in
community. Mentioning an issue itself is good way to contribute to community,
because valid issue will lead our community to find the solution early.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Questions about chunked tranfer encoding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In test case that involving chunked transfer encoding, I found that they just
freeze without another reaction, holding up until I send interrupt signal.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Connection: Keep-Alive
Content-Length: 15
Transfer-Encoding: chunked
Content-Type: text/plain
Date: Thu, 20 Jul 2017 19:30:55 GMT

21.023055.800 method 1 0 0:
21.023055.800 a nbytes 15 body_len 15
21.023055.800 chunk size is 3
21.023055.800 write full chunk, 3 bytes
21.023055.801 chunk size is 2
21.023055.801 write full chunk, 2 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don’t know why in the old http server code, they just can close the connection
implicitly after generate the response.&lt;br /&gt;
Evgeny replied I should check with debugger first step-by-step chunked download
process.&lt;br /&gt;
I was looking in to the manual and examples that we should use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_create_response_from_callback()&lt;/code&gt; to handle chunked transfer encoding
connection.  My question, how do we generate a data using
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_ContentReaderCallback&lt;/code&gt;? In the examples there just an empty data
(&lt;code class=&quot;highlighter-rouge&quot;&gt;chunked_example.c&lt;/code&gt;) and infinite data (&lt;code class=&quot;highlighter-rouge&quot;&gt;minimal_example_comet.c&lt;/code&gt;)? Say we
have a string as the buffer, something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;static ssize_t
data_generator (void *cls, uint64_t pos, char *buf, size_t max)
{
  if (max &amp;lt; 80)
    return 0;

  strcpy(buf, &quot;3\r\nan\r\n2\r\example\r\n&quot;);

  return 80;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also asks, how do I arrange it properly? So the result is like expected
chunked transfer encoding file. I have tried using that example and the
result is infinite streaming file. I try using return value
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_CONTENT_READER_END_OF_STREAM&lt;/code&gt; and it give me nothing, just debug
information showing chunked transfer encoding.&lt;br /&gt;
Evgeny said, it was indeed not clear from example how to use chunked transfer.
He give a hand by updated chunked_example.c in official git repository.  I’d
tried &lt;code class=&quot;highlighter-rouge&quot;&gt;chunked_example.c&lt;/code&gt; again and it was successfully run. But, when I modify
using encoded data like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;static const char response_data[] = &quot;3\r\nan\r\n2\r\example\r\n&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result was:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
an
2
example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was expected a result something like plain: “an example” as the output.&lt;br /&gt;
Evgeny explained, I don’t need to handle chunked encoding in application.
Libmicrohttpd automatically wrap supplied data into chunks with local header and
footer.  If I want to generate more chunks - simply provide smaller amount of
data with each call of callback. Each part of data will be send as separate
chunk.&lt;br /&gt;
I’m actually stuck in this. I asked how do we present a connection with multiple
chunks combined into one complete data? Like what he said, I want to generate
more chunks. I ask if the code below related:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* Pseudo code.        *
if (data_not_ready)
  {
    // Callback will be called again on next loop.
    // Consider suspending connection until data will be ready.
    return 0;
  }
* End of pseudo code. */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I wonder what should I do with “data_not_ready”? My goal is to simulate chunked
transfer encoding between client and server using Wget2 and Libmicrohttpd
respectively. Currently, in the Wget2 test suite, it uses encoded data like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;3\r\nabc\r\n2\r\nde\r\n&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With Libmicrohttpd, I don’t need to provide encoded data like above. It
automatically handled by Libmicrohttpd. So I need to change data provided in
&lt;code class=&quot;highlighter-rouge&quot;&gt;test-chunked.c&lt;/code&gt;.&lt;br /&gt;
Evgeny said, I don’t need to change data provided by callback.
I need to change amount of data provided by each call of callback. For example:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;size_to_copy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;size_to_copy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size_to_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;size_to_copy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;memcpy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size_to_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or use more complex algorithm with variable size depending on position.
In this case chunks may have different size.&lt;br /&gt;
It’s now clear. I just need to divide data into two smaller chunks.&lt;/p&gt;

&lt;p&gt;Another case is, there is a garbage data like &lt;code class=&quot;highlighter-rouge&quot;&gt;FFFFFFF4\nGarbage&lt;/code&gt; need to
produced. I need to simulate it with Libmicrohttpd.&lt;br /&gt;
Evgeny answered, depending on where I want to put this data. If I want to put it
in reply body - just use &lt;code class=&quot;highlighter-rouge&quot;&gt;FFFFFFF4\nGarbage&lt;/code&gt; as reply.&lt;br /&gt;
But, I still don’t get it. Where is the reply body?&lt;br /&gt;
He said reply body is in response data sent by Libmicrohttpd.&lt;br /&gt;
If I wrote it in response text, it just literally send me same text as before
processed. Instead, I want to create response with chunk size &lt;code class=&quot;highlighter-rouge&quot;&gt;FFFFFFF4&lt;/code&gt;, like I
wrote in the provided response text (before data encoded).&lt;br /&gt;
He then said, if I want to have chunk size &lt;code class=&quot;highlighter-rouge&quot;&gt;FFFFFFF4&lt;/code&gt;, I have to provide data
with size &lt;code class=&quot;highlighter-rouge&quot;&gt;FFFFFFF4&lt;/code&gt;. Libmicrohttpd do not generate invalid HTTP data. For any
test with invalid reply he suggests me to use custom simple hard coded
pseudo-server instead of Libmicrohttpd.&lt;/p&gt;

&lt;p&gt;Another question is how can I passed a variable through callback.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget_buffer_t *chunked_data = wget_buffer_alloc(1024);
wget_buffer_strcpy(chunked_data, &quot;some char&quot;);
response = MHD_create_response_from_callback(MHD_SIZE_UNKNOWN,
                                            1024,
                                            &amp;amp;_callback,
                                            chunked_data,
                                            NULL);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My goal is to pass “chunked_data” as response_data for the callback.
Evgeny updated chunked example once more.
From his point of view, it is pretty simple and clear.&lt;/p&gt;

&lt;p&gt;Another question, and maybe just it is my misunderstanding, about how the
response text provided. It requires to use char array, while I just have char
pointer.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;char *body = &quot;abcde&quot;;
static char simple_response_text[6];
strcpy(simple_response_text, body);
simple_response_text[sizeof(simple_response_text) - 1] = '\0';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I copy the char pointer into char array using &lt;code class=&quot;highlighter-rouge&quot;&gt;strcpy&lt;/code&gt;. Though I still need
to provide the length of the char. As a workaround, I just hard coded the char
length. I ask if there is any better solution.&lt;br /&gt;
Evgeny give some explanations, char size is always one byte (it could have
different size, but almost all real platforms use one byte). I should not
assign pointer to static string (which is &lt;code class=&quot;highlighter-rouge&quot;&gt;const char *&lt;/code&gt;) to non-const pointer.
&lt;code class=&quot;highlighter-rouge&quot;&gt;strcpy() &lt;/code&gt; copies termination null as well, no need to terminate it again.
Libmicrohttpd response do not need null-terminated strings, as HTTP could send
any data, not only strings. I can use array variable as pointer to first array
member.&lt;br /&gt;
Hence I need to read more about C basics, including static strings, arrays,
pointers, pointers manipulations, pointers arithmetics, strings manipulations
and memory management.&lt;/p&gt;

&lt;h3 id=&quot;8th-week&quot;&gt;8th Week&lt;/h3&gt;

&lt;p&gt;I have work on &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt; to use Libmicrohttpd as HTTP server.
To resolve this, I fix &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; function to create proper HTTP
response to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Handle arguments (query string) on URL&lt;/li&gt;
  &lt;li&gt;Handle redirection&lt;/li&gt;
  &lt;li&gt;Handle directory creation&lt;/li&gt;
  &lt;li&gt;Handle URL with IRI object&lt;/li&gt;
  &lt;li&gt;Handle URL with IDN hostname&lt;/li&gt;
  &lt;li&gt;Handle URL with query string which contains space&lt;/li&gt;
  &lt;li&gt;Handle If-Modified-Since header&lt;/li&gt;
  &lt;li&gt;Handle Byte Range request&lt;/li&gt;
  &lt;li&gt;Handle HTTP basic authentication&lt;/li&gt;
  &lt;li&gt;Handle HTTPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pass CI test on some system like Debian/GCC and Fedora/Clang.
Fix compiler warning &lt;code class=&quot;highlighter-rouge&quot;&gt;-Wunused-param&lt;/code&gt; caused by Libmicrohttpd API.
Use persistent connection (Connection: keep-alive) instead multiple.
connection (Connection: close). This prevent hiding several problems of the
connection between HTTP server and client.&lt;br /&gt;
At this point I think that the new HTTP server with Libmicrohttpd for test suite
has already covered all existing test. Later, I can add non existing test that
ready on Wget2 and Libmicrohttpd. Such as add HTTP digest authentication test.
Another unresolved tasks are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix connection handler using chunked tranfer encoding&lt;/li&gt;
  &lt;li&gt;Fix CI testing on Gitlab MingW64 and Travis OSX&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;second-period-evaluations&quot;&gt;Second Period Evaluations&lt;/h3&gt;

&lt;p&gt;Just like previous time, we as student are required to submit evaluations. The
evaluations itself was just like the one before, it asks us to fill feedback
form to the organization.&lt;br /&gt;
The results then announced. Mentors give me chance to pass this period
evaluations. They send me messages that my communication has definitely
improved over time. They think this project is now again moving on the right
track towards completion.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;In this period I faced again with many challenges that test my technical
skills. My communication abilities are also tested a lot. I must be good in
conveying problems to my mentor so there is no miscommunication. Mentors also
helped me a lot in solving the problems I have encountered. They give me a trust
to finish this project. I should be able to take advantage of this chance to
give the best of me in contributing to this project.&lt;/p&gt;

&lt;p&gt;Reference(s):&lt;br /&gt;
[0] &lt;a href=&quot;https://stackoverflow.com/questions/1005676/urls-and-plus-signs&quot;&gt;https://stackoverflow.com/questions/1005676/urls-and-plus-signs&lt;/a&gt;&lt;br /&gt;
[1] &lt;a href=&quot;https://gitlab.com/gnuwget/wget2/merge_requests/250&quot;&gt;https://gitlab.com/gnuwget/wget2/merge_requests/250&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Mar 2018 03:21:00 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2018/03/17/gsoc-with-gnu-wget2-part-ii/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2018/03/17/gsoc-with-gnu-wget2-part-ii/</guid>
        
        
        <category>open_source</category>
        
        <category>programming</category>
        
        <category>collaboration</category>
        
        <category>gsoc</category>
        
      </item>
    
      <item>
        <title>GSoC with GNU Wget2 - Part I</title>
        <description>&lt;p&gt;This series of writing summing up of what I did in Google Summer of Code (GSoC)
2017. GSoC 2017 be held in three period of time. In this part I will tell you
about the first period.&lt;/p&gt;

&lt;h3 id=&quot;community-approaching&quot;&gt;Community Approaching&lt;/h3&gt;

&lt;p&gt;After looking for organizations to work on, I decide to choose GNU Wget2 (part
of GNU Project). Why I choose this organization? Some reason I can say:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The codebase is small (but not the scope, for me), it gives me advantage
that it is easy to deploy on my local machine.&lt;/li&gt;
  &lt;li&gt;It use C as its primary programming language. At this time, I would like to
learn about C (Linux was influenced me) on real world application. I was
starting to learn C but just on the theory. So, working on Wget2 could help me
to learn C with practice.&lt;/li&gt;
  &lt;li&gt;The GNU Project reputation is well recognized in Open Source community so
working on their project will give me excellent opportunity to learn.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I immediately take a look on their repository. I try to clone their repository
and build on my machine. GNU Wget2 use mailing list as their primary
communication channel, so I sent greeting to them about what project I
interesting at.&lt;br /&gt;
The contributor of the project is so friendly. They give me some clues about
what should I do. I should do some &lt;em&gt;microproject&lt;/em&gt; work to show effort from me to
understand their workflow and also their codebase. That means, I have to send a
patch (there was Github pull request at this time) to the project.  I choose to
work on adding new unit test to function &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_robots_parse()&lt;/code&gt; [0].  Just like
most of open source contribution, it took some process of revision of patch so
it can be merged to upstream. I respect the reviewing process, it help me learn
a lot. Also from now I learn a lot to use &lt;em&gt;GDB (GNU Debugger)&lt;/em&gt; to debug
application.&lt;br /&gt;
At first I choose to use subject “Design and Implementation of a Framework for
Plugins”. But I rethink again because what I do in micro project is about
Testing. Finally I change my subject so I take “Design and Implementation of
Test Suite Using Libmicrohttpd” as my project. I send my proposal to project’s
mailing list [1]. After some reviewing and revision process, I officially sent
my proposal to GSoC homepage and my proposal was accepted.&lt;br /&gt;
The project aim to use Libmicrohttpd as test suite for Wget2. I planned to
complete this by change on function &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt; also
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_stop_server()&lt;/code&gt; from src/libtest.c of Wget2. With this
approach, I don’t need to change existing test suite which call the internal
server code through functions mentioned above.&lt;br /&gt;
I’ve count there are 36 test file which use
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;. I must ensure all the test passed.  And
for installation prerequisite, I must ensure that Libmicrohttpd are included
when building Wget2 binary. Then I need to modify configure.ac. I will give
proper warning about this requirement. There is a section in README.md where I
must explain to user to provide Libmicrohttpd to make all test running
correctly.  With Libmicrohttpd I can add new test using feature that not yet
implemented in old server code, but ready on Libmicrohttpd, such as HTTP
authentication and concurrent request checking.&lt;/p&gt;

&lt;h3 id=&quot;community-bonding-period&quot;&gt;Community Bonding Period&lt;/h3&gt;

&lt;p&gt;During this period, I spend my time to learn codebase about Wget2 and
Libmicrohttpd. I was busy to learning them, that I forget to stay active in
community. To prevent mentors give me minus points, I try to work on an issue. I
try an easy one, adding enhancement for capabilities of file extended
attributes. In short words, Wget2 could save target file’s extended attributes
if filesystem support it. It is like the feature on Wget 1.x. To solve this
issue, I have to dive a little bit on Wget2 codebase. That’s give me a view
about how Wget2 works.&lt;/p&gt;

&lt;h3 id=&quot;1st-week&quot;&gt;1st Week&lt;/h3&gt;

&lt;p&gt;There comes the first week of my official coding period. I was work on some
basic tasks for this projects, such as modify the build tools. I have modifed
configure.ac to include Libmicrohttpd into Wget2. I just include the package,
and not adding, modifying or removing anything else yet.&lt;br /&gt;
With Libmicrohttpd becomes mandatory package to install before building Wget2
binary, there must be proper warning about this requirement, otherwise the
building process will fail. I have add oneliner information into README.md.
Actually, I was misunderstood about this. Christian Grothoff then give me
suggestion to correct it. Dependency to Libmicrohttpd should not become
mandatory. The solution it to make conditionally-compile and run the tests only
if Libmicrohttpd is present while build Wget2. Libmicrohttpd does the same for
Libcurl. Making the dependency optional also avoids the obvious possibility of
circular dependencies if we ever were to add Libwget2-based tests to
Libmicrohttpd.&lt;br /&gt;
Tim Ruhsen also reminds that I should to skip the appropriate tests if
Libmicrohttpd is not installed/ available. I should definitely avoid to use
Wget2 legacy server code in Libwget and focus on client functionality instead.
Because after we successfully integrating Libmicrohttpd, we should remove the
legacy server code. I finally understood what they mean and will fix this the
next week.&lt;br /&gt;
On the CI/CD section, I have ensured that all make check passed on several
testing machine including: Debian/GCC, Fedora/Clang, MingW64 and OSX.
Fortunately, most of those OS have provided Libmicrohttpd package on their
respective repository, except MingW64 (the representation of Windows build).
Especially for MingW64 build, because I haven’t found the correct package for
Libmicrohttpd, I include Libmicrohttpd by download the source and compile
manually. What I’ve done is add the following lines on .gitlab-ci.yml:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;before_script:
- dnf &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wget
- wget http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.55.tar.gz
- &lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf libmicrohttpd-0.9.55.tar.gz &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;libmicrohttpd-0.9.55/
- mingw64-configure &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/x86_64-w64-mingw32/sys-root/mingw/
- mingw64-make &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
- mingw64-make &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LOG_COMPILER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wine &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
- &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I asking if my step was right. Tim give me advice on that MingW64 issue, that I
should provide a script (e.g. in contrib/ folder) that will
downloads/builds/installs Libmicrohttpd. That script then added to the CI runner
YAML file(s) so we can test on MinGW64 as well. This will keep us to stay run as
many tests as possible. He suggest that I should move my MinGW64 build script to
contrib in the end of GSOC as a cleanup.&lt;br /&gt;
On the other hand, Evgeny Grin tell me there is a package for Libmicrohttpd on
MinGW64, it provided on Msys2 project and has HTTPS support. Another solution,
is to use W32 binary build provided on GNU mirrors, but it has not HTTPS
support. I keep this information for later decision. For now, I should focus on
the test code first.&lt;/p&gt;

&lt;h3 id=&quot;2nd-week&quot;&gt;2nd Week&lt;/h3&gt;

&lt;p&gt;Things get more interesting. Because in this period, I will starting to work on
Wget2 main testing function. I started on &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;.
I must change that function in order to call Libmicrohttpd as service for
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test()&lt;/code&gt;. Workflow to resolve this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Disable initial process for HTTP server socket.&lt;/li&gt;
  &lt;li&gt;Disable &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server_thread&lt;/code&gt;, instead call new function which call
Libmicrohttpd.&lt;/li&gt;
  &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server()&lt;/code&gt; function, wrapper for Libmicrohttpd. There
is also function &lt;code class=&quot;highlighter-rouge&quot;&gt;ahc_eco()&lt;/code&gt; which use to create proper HTTP
response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some issues I found in this period:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Decide what the best threading model for Libmicrohttpd. I currently using
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_USE_INTERNALLY_POLLING_THREAD&lt;/code&gt; which use external select. I still check
the comparison with legacy code that use Wget2 API &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_thread_start&lt;/code&gt;.
Darshit Shah give me a clue, that I should choose any mechanism that uses
&lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt;. Then we can change the threading model at a later stage if it
turns out to be a bottleneck. &lt;code class=&quot;highlighter-rouge&quot;&gt;epoll&lt;/code&gt; is Linux-only and even &lt;code class=&quot;highlighter-rouge&quot;&gt;poll&lt;/code&gt; isn’t
always available, so as long as I choose a &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; based implementation, it
should be fine. Evgeny said that I can use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_is_feature_supported()&lt;/code&gt; with
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_FEATURE_POLL&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_FEATURE_EPOLL&lt;/code&gt; to check for supported polling
functions.  Alternatively, with latest versions of Libmicrohttpd I can use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_USE_AUTO&lt;/code&gt; and Libmicrohttpd will choose &lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;poll()&lt;/code&gt; or
epoll-based polling automatically.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I make the &lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_port&lt;/code&gt; still hardcoded. Darshit tell me that this
becomes important note. The port should be a random number. Usually, passing 0
in the port number makes the kernel choose an open one for it. Having a
randomised port is important to ensure that multiple runs don’t step on each
other.&lt;br /&gt;
I think still don’t know how to accomplish this. Maybe, it just my
understanding that when I pass 0 in MHD port number, the result is still 0.
Another approach, when I look into the old code, it generate port number by
calling &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port()&lt;/code&gt;. But, I need to call &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_init()&lt;/code&gt; and
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_listen()&lt;/code&gt; respectively in order to get proper result.  Conclusion,
do I need to use existing &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port()&lt;/code&gt; to get the port, or
maybe there is a function in Libmicrohttpd to do that.&lt;br /&gt;
Tim added that all I need is the socket descriptor. How to call
&lt;code class=&quot;highlighter-rouge&quot;&gt;getsockname()&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;getnameinfo()&lt;/code&gt; to retrieve the port number I see in
&lt;code class=&quot;highlighter-rouge&quot;&gt;libwget/net.c&lt;/code&gt;/ &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port()&lt;/code&gt;. If Libmicrohttpd doesn’t have
such a function, either try to get the socket descriptor or extend
Libmicrohttpd with a small function (similar code as in
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port&lt;/code&gt;).&lt;br /&gt;
Evgeny give more detailed explanations. There are several ways to resolve it:&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Initialise socket externally and start &lt;code class=&quot;highlighter-rouge&quot;&gt;listen()&lt;/code&gt; on it. I can use any bind
and port detection function. Pass socket &lt;code class=&quot;highlighter-rouge&quot;&gt;FD&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_start_daemon()&lt;/code&gt; by
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_OPTION_LISTEN_SOCKET&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_start_daemon()&lt;/code&gt; with “0” as port number then use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_LISTEN_FD&lt;/code&gt; to get listen
socket FD. Use any port detection.&lt;/li&gt;
      &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_start_daemon()&lt;/code&gt; with “0” as port number then use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/code&gt; to get port
number.  Works with &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_VERSION &amp;gt;= 0x00095501&lt;/code&gt; and on platforms that
support &lt;code class=&quot;highlighter-rouge&quot;&gt;getsockname()&lt;/code&gt;.&lt;br /&gt;
I can combine second and third methods.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#if MHD_VERSION &amp;gt;= 0x00095501
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MHD_NO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;MHD_is_feature_supported&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MHD_FEATURE_AUTODETECT_BIND_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_DaemonInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_get_daemon_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/* Insert code to handle error. */&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* MHD_VERSION &amp;gt;= 0x00095501 */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_DaemonInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MHD_socket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sock_fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_get_daemon_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_OPTION_LISTEN_FD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/* Insert code to handle error. */&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sock_fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listen_fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Insert code to use port detection on provided socket. */&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;He add note that socket type used by MHD functions is &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_socket&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_socket&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; on POSIX platforms (Linux, *BSD, Unix, Darwin) and
&lt;code class=&quot;highlighter-rouge&quot;&gt;SOCKET&lt;/code&gt; on Windows platform (excluding Cygwin, where &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_socket&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;ahc_eco()&lt;/code&gt; of Libmicrohttpd, urls data still using static checking for
matching with requested urls. In other word, it’s hardcoded. It needs to be
changed to dynamic method to accomodate variadic data.&lt;/li&gt;
  &lt;li&gt;I still not touched HTTPS yet.&lt;/li&gt;
  &lt;li&gt;I ask about what to do with FTP and FTPS functions. Since Libmicrohttpd just
provide service for HTTP. I was asking, do we need keep the function for
FTP{s}, or removing it. Darshit told me that we keep the FTP code intact for
now. Then we should look into different libraries that provide a FTP server in
C and try to integrate that into your test suite as well. But for this period,
it is out of scope.&lt;/li&gt;
  &lt;li&gt;The test was failed when I try to resolve URL with question mark. For example:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/subdir1/subpage1.html?query&amp;amp;param&lt;/code&gt;, when I debug, it return just
&lt;code class=&quot;highlighter-rouge&quot;&gt;/subdir1/subpage1.html&lt;/code&gt; so the result is 404 not found. I also check using
logging example source code provided in Libmicrohttpd tutorial. When I access
using http client such as Wget2 and Firefox, the result is still the same. The
URL result omit the query part. I confirm to Libmicrohttpd side about
this, whether it is intended behaviour or not. Christian said it that’s
intended, for URL parameters/arguments I need to use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_connection_values()&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;kind=MHD_GET_ARGUMENT_KIND&lt;/code&gt; to inspect
them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3rd-week&quot;&gt;3rd Week&lt;/h3&gt;

&lt;p&gt;Based on feedback from mentors on the previous week, I made some fixes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove initial process for HTTP server socket.&lt;/li&gt;
  &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server_start()&lt;/code&gt; function, wrapper for Libmicrohttpd. There is
also function &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; which use to create proper HTTP
response.&lt;/li&gt;
  &lt;li&gt;Use select method &lt;code class=&quot;highlighter-rouge&quot;&gt;(MHD_USE_SELECT_INTERNALLY)&lt;/code&gt; for threading model in
Libmicrohttpd to get better compatibility.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_port&lt;/code&gt; seized automatically using Libmicrohttpd function by
passing &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_LISTEN_FD&lt;/code&gt; parameter
to &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Using iteration to parse urls data in &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt;. This
guarantee we can pass any variadic data to Libmicrohttpd and prevent
segmentation fault.&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; function to create proper HTTP response (to deal
with parameters and arguments on url, to add proper HTTP headers).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4th-week&quot;&gt;4th Week&lt;/h3&gt;

&lt;p&gt;Finally it comes to the end of the first period. I report to mentors what I’ve
done in this week.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I have finished modify configure.ac to include Libmicrohttpd into Wget2.&lt;/li&gt;
  &lt;li&gt;I have ensured that all make check passed on several testing machine
including: Debian/GCC, Fedora/Clang, MingW64 and OSX.&lt;/li&gt;
  &lt;li&gt;Started working on &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;I must ensure that all test suite running correctly. To give better
visualization, I’ve created spreadsheet about summary of test file which use
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;. Currently, as far as I know, it reaches 87.5% (28
of 32). I need to complete all test suite reach 100%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After I send it to the mailing list, I have got many feedback from my mentors
for this report.&lt;/p&gt;

&lt;p&gt;When Darshit trying to check my code, he has noticed that I was working only
on a single branch and have only one commit until the date. This much work is
not enough for the mid semester evaluation. He asks me to split my work into
smaller commits which are discrete units of work. I follow up this with breaking
down my previous one big commit into smaller ones so it could represent my work
in period of time.&lt;br /&gt;
About the commit style, he gave me a clear clue. My commit messages are pretty
hard to read. Also, he asks to maintain the standard style of commit messages.
At Wget, the commit messages are converted into a ChangeLog, hence my message
should be written in that format.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit

Commit Message title (60 chars)
[Blank Line]
* file_changed(function_name): Description of change
* file_changed(function_name): Description of change

Any other details I want to write
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The commit messages I have written are actually fine, but when it exceeds 60
chars in the first line, I should convert my message to the longer format he
just described.&lt;br /&gt;
Another thing, he asks to not force push to my (&lt;em&gt;master&lt;/em&gt;) branches. There are
other people that pull from these branches to check in on the code. If I force
push, it messes the repository up for all. Force pushing should only be reserved
as a last resort. However, in this case, when I rewrite the commit messages, I
should force push to my own current branch. That will allow me to maintain that
branch later.&lt;br /&gt;
I realize that my commit messages are bad practice indeed. I check it through
&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --pretty=oneline&lt;/code&gt;. I have made some changes about that.
But, when I want to push my changes online, it rejected by git. That’s why I
usually force push. I make sure I just make a changes to my own current branch,
not the master one.&lt;br /&gt;
The CI system states failures. He asks whether this is an expected failures. I
said that it not intended to be failure. On my machine which use Ubuntu/GCC, I
can run &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt;, and some test could pass. Same like on Gitlab CI that use
Debian/GCC. Based on CI artifacts, most of them failed on &lt;code class=&quot;highlighter-rouge&quot;&gt;make check-valgrind&lt;/code&gt;
that I miss to check before. I still find out how to deal with this memory leak
error. Actually, I still stuck in this. Then I ask, how to debug using Valgrind.
I read the error logs and it still it pointed me out of nowhere. He said that I
really should discuss these issues with them more. That is exactly why they are
here to mentor me. Valgrind’s memcheck tool which is what is being used in the
&lt;code class=&quot;highlighter-rouge&quot;&gt;make check-valgrind&lt;/code&gt; is a memory leak checker. He will look a little into it
once he can get the basic tests running on his machine. I asked to be focus on
that first. He said we will look into the memory leaks in a while. Most probably
the leaks happen because either I lost the pointer to some allocated memory or
are using the libmicrohttpd API wrong and forgot to &lt;code class=&quot;highlighter-rouge&quot;&gt;free()&lt;/code&gt; some data structure
returned by it.&lt;br /&gt;
I analyze how the Valgrind check was failed. On my system which using
Ubuntu/gcc, some tests are failed, while some not. Through this, I will analyze
based some available pattern.  Before I found that Valgrind check error, my work
with test suite stopped at how I must deal with timestamp/modified properties in
&lt;code class=&quot;highlighter-rouge&quot;&gt;test-wget-1&lt;/code&gt;. Another test waiting to finish: &lt;code class=&quot;highlighter-rouge&quot;&gt;test-metalink&lt;/code&gt; (looping
undefinitely), &lt;code class=&quot;highlighter-rouge&quot;&gt;test-i-https&lt;/code&gt; (https implementation) and &lt;code class=&quot;highlighter-rouge&quot;&gt;test-auth-basic&lt;/code&gt;(basic
authentication implementation).&lt;br /&gt;
He also sees that ./configure always tries to link Libmicrohttpd. But Wget2
should not depend on that. It should try to add the linker flags &lt;em&gt;only&lt;/em&gt; when
trying to compile the test suite. The Wget2 binary should not use that flag. I
realize that was there are flaws in my code. I will figure out after some work
against other test files.&lt;br /&gt;
On his local system, not a single test passes. &lt;code class=&quot;highlighter-rouge&quot;&gt;make check -j$(nproc)&lt;/code&gt; causes a
segmentation fault and a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt; gets stuck on test-wget-1 and never
progresses ahead. He asks me to fix the branch and/or provide them with
information on how to make the tests work. I look at CI system with Fedora/Clang
and indeed the result is all segmentation faults. I still have no clue about
that. With this case, I cannot claim that I have almost 85% tests passing
already. From his perspective, it is still 0%.&lt;br /&gt;
In fact, all the tests that my spread sheet marks are passes, end up causing a
segfault on his system. This seems to stem from the fact that the
&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_tid&lt;/code&gt; is stored as “0” and I try to call &lt;code class=&quot;highlighter-rouge&quot;&gt;pthread_cancel&lt;/code&gt; on that
value. I asks for more detail information about this. I have use some advice
from Evgeny Grin how to deal with dynamic port. Even when I use hard coded port,
the result is still the same. He explains that he don’t think this is connected
to the port number at all. If it is, then my variable naming scheme requires a
serious change. This issue is happening because I have never stored the tid of
the server in the variable, but I still try to cancel that thread id. After I
take a look on my code again, I realize something wrong. Darshit was right. That
segmentation fault error happened because I forgot to remove
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_thread_cancel&lt;/code&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_tid&lt;/code&gt;) which is used by the old code at server
termination time. After I remove that line, the CI runner of Fedora/Clang
passes some tests, not all test were resulted segmentation fault (14 of 32
pass, while 4 skipped). The other fail because likely Valgrind check error.&lt;br /&gt;
Darshit asks me to make sure that my code works as I have mentioned at least one
day before the deadline for the evaluations. On my Week 3 report I planned to
get 100% of passing all of the test suite. But, until Week 4, my job still not
yet all done (even excluding other error generated outside &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt; on
Debian/GCC system). I realized I have missed my (personal) target. Hence, he
asks me where do I think I missed out which caused me to fall behind. In
hindsight, he asks what according to me could have been done better. So, I and
they should be look into this together to see where it can be improved. He asks
what topics were I most stuck on, and why did it take me so much time. Also, if
I stuck on any single point for more than a day, he asks to send they a message.
There is a very good chance that they might be able to help me out and fix it
much faster.&lt;br /&gt;
Darshit sends a message to both Libmicrohttpd maintainers, Christian and Evgeny:
that the issues in Valgrind seem to come from within Libmicrohttpd. One of the
blocks reported by Valgrind is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=26290== 72 bytes in 3 blocks are still reachable in loss record 6 of 6
==26290==    at 0x4C2BEEF: malloc (in
/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26290==    by 0x7E06608: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7E077FB: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7EBEFB1: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7EBF02F: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7E0655F: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7E06764: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x6634CF8: ??? (in /usr/lib/libmicrohttpd.so.12.43.0)
==26290==    by 0x400F339: call_init.part.0 (in /usr/lib/[1]ld-2.25.so)
==26290==    by 0x400F445: _dl_init (in /usr/lib/[2]ld-2.25.so)
==26290==    by 0x4000D39: ??? (in /usr/lib/[3]ld-2.25.so)
==26290==    by 0x9: ???
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, he guess is that this is some memory that is being allocated by
Libmicrohttpd.  The test code does indeed seem to call &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_stop_daemon()&lt;/code&gt; which
should ideally ensure a clean exit. He asks, where did the implementation go
wrong.&lt;br /&gt;
Christian said this is a bit hard to evaluate without the debug symbols. Most
likely it would be a false-positive from a globally allocated buffer of
Libgcrypt’s initialization sequence. He asks to download and install debug
symbols for Libgcrypt and ideally Libmicrohttpd. It is unlikely to be
Libmicrohttpd fault, as except for responses there are no Libmicrohttpd buffers
my code would have to free.&lt;br /&gt;
He also asks me to ensure that I have followed the Libmicrohttpd API and
documentation correctly. I have followed Libmicrohttpd API documentation and
tutorial for implementation carefully.&lt;/p&gt;

&lt;h3 id=&quot;first-period-evaluations&quot;&gt;First Period Evaluations&lt;/h3&gt;

&lt;p&gt;After finish my 4th period report, and discuss with mentors about my
difficulties I found, I also must complete first evaluation report via GSoC web
app. For what I can just remember, it just a dashboard which asks my feedback
about the organization I working with. The real report is actually done via
email.&lt;br /&gt;
The other day, GSoC announce the evaluations. The result, I passed the
evaluations, but with warning. Mentors give me an important messages about what
happened and what should I improve. The project is indeed behind schedule. The
mentors still give me a chance by passing me in the hopes that I and they will
be able to improve the communication and get the project back on track. One
major suggestion is that I increase the frequency of my project reports from
weekly to daily. Just a single line at the end of each day stating what I have
done and what are my plans for the next day.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That was though days with my first time period of GSoC. There was many jobs left
to be finished in the next period. Mistakes happen, but I was learn a lot from
them. Thanks to my mentors who patiently guide me through this process.&lt;/p&gt;

&lt;p&gt;Reference(s):&lt;br /&gt;
[0] &lt;a href=&quot;https://github.com/rockdaboot/wget2/pull/155&quot;&gt;https://github.com/rockdaboot/wget2/pull/155&lt;/a&gt;&lt;br /&gt;
[1] &lt;a href=&quot;https://lists.gnu.org/archive/html/bug-wget/2017-03/msg00156.html&quot;&gt;https://lists.gnu.org/archive/html/bug-wget/2017-03/msg00156.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Mar 2018 03:21:00 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2018/03/07/gsoc-with-gnu-wget2-part-i/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2018/03/07/gsoc-with-gnu-wget2-part-i/</guid>
        
        
        <category>open_source</category>
        
        <category>programming</category>
        
        <category>collaboration</category>
        
        <category>gsoc</category>
        
      </item>
    
      <item>
        <title>Workflow on Contributing to Open Source Project</title>
        <description>&lt;p&gt;In the open source world, different project comes with different workflow, using
different medium. For instance, Linux Kernel development, use mailing list to
gather patches for many developer around the world. The maintainer pick
patches from developer with careful supervision. Then, they maintain release of
the stable version, while Linus Torvalds himself maintain the mainline stream.&lt;br /&gt;
Other project, Git – a revision control system. It use same model as Linux
Kernel, patches and conversations go to mailing list. With additional part, for
the Continuous Integration system, it is recommended to use Github and Travis
CI. Although they will reject all pull request from there.&lt;br /&gt;
Another example, Wget2 used Github mainly to perform collaboration (Because GNU
not allowed their project to use Github, their move it to Gitlab [0]). Issues are
discussed here. Pull request also getting merged here. Although, it also have
mailing list to discuss issues and problems.&lt;br /&gt;
Here I share my experience how I contribute to open source, so my code could be
merged in the project upstream. For an example, I will write several steps of
my way doing Wget2 project for my GSoC 2017 application. Below are some points I
follow:&lt;/p&gt;

&lt;h3 id=&quot;obtain-source-code&quot;&gt;Obtain Source Code&lt;/h3&gt;

&lt;p&gt;Startup procedures:&lt;/p&gt;

&lt;p&gt;Fork project so you can modify yourself via Gitlab interface.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://gitlab.com/dstw/wget2
git remote add upstream https://dstw@gitlab.com/gnuwget/wget2.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create an own branch for each ‘task’ you are working on and make your commits
within it. When done, sync with upstream, rebase/merge and create your patches
via format-patch.&lt;/p&gt;

&lt;p&gt;Do not make changes to your branch ‘master’ - this should always reflect the
original repo. This makes it easy for you to update your ‘master’ branch with
changes from the ‘original/upstream’ master branch on Savannah.&lt;/p&gt;

&lt;p&gt;Sync your Gitlab repo with upstream:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout master
git fetch upstream
git merge upstream/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sync your ‘new-feature’ branch before generating patches:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout new-feature
git rebase master
git push &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# pushing updated tree to your Gitlab new-feature branch)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assume ‘new-feature’ is a private branch where you can do all the dirty things
that you shouldn’t on public/shared branches. As soon as your patch has been
accepted, remove the branch ‘new-feature’ locally and from Gitlab.&lt;/p&gt;

&lt;h3 id=&quot;build-the-executables&quot;&gt;Build the Executables&lt;/h3&gt;

&lt;p&gt;As prerequisite, install all mandatory software as listed in README.md.&lt;/p&gt;

&lt;h3 id=&quot;find-the-problems&quot;&gt;Find the Problems&lt;/h3&gt;

&lt;p&gt;I usually look at Wget2 Gitlab issues pages to find issues and problems which
appropriate to newcomer like me.&lt;/p&gt;

&lt;h3 id=&quot;make-changes-to-the-code&quot;&gt;Make Changes to the Code&lt;/h3&gt;

&lt;p&gt;In this part, my knowledge in coding skill are truly challenged. Wget2 use C as
its programming language. In my case, I just add some test based on requirements
and of course with help from other contributors.&lt;/p&gt;

&lt;h3 id=&quot;create-pullmerge-request&quot;&gt;Create Pull/Merge Request&lt;/h3&gt;

&lt;p&gt;After I feel my code ready to merge, I push my commit to upstream and make a
pull request from Gitlab interface.&lt;/p&gt;

&lt;h3 id=&quot;wait-for-review&quot;&gt;Wait for Review&lt;/h3&gt;

&lt;p&gt;After create a merge request, I wait for feedback, criticism, suggestions, etc.
from other developer.&lt;br /&gt;
Respond to it! and follow up with improved versions of your change. Even for a
trivial patch you shouldn’t be surprised if it takes two or more iterations
before your patch is accepted. This is the best part of participating in the Git
community; it is your chance to get personalized instruction from very
experienced peers!&lt;/p&gt;

&lt;h3 id=&quot;propose-new-change&quot;&gt;Propose New Change&lt;/h3&gt;

&lt;p&gt;After getting a review, do some improvement. After all, make a new commit. Here,
there is option to overwrite my existing commits or create new merge commits to
keep history.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin new-feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If there is a conflict, Git will ask me to resolve the problem this. Then, try
to push and merge commits. This won’t remove any existing commits. And if I
don’t want to keep any commits history, I usually force to push:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; origin new-feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;del&gt;This is considered a little bit harmful. Before I do this, I will make sure
that I know what I do. Also, forcing commits is should only do if it believed to
final commits or at least near final, I should not do any more change to it.&lt;/del&gt; 
Just make sure that I don’t force push to the &lt;strong&gt;master&lt;/strong&gt; branch of the project,
otherwise, is safe.&lt;/p&gt;

&lt;p&gt;Finally, after some iteration, if project maintainer agree with my changes, then
they will merge it into their repository. If not, I should be take a look on my
proposed changes more carefully, what could be wrong and what should be fixed.
And the best of it all, I could learn a lot from the process.&lt;/p&gt;

&lt;p&gt;References:&lt;br /&gt;
[0] (http://lists.gnu.org/archive/html/bug-wget/2017-04/msg00052.html)&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Apr 2017 13:43:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2017/04/08/workflow-on-contributing-to-open-source/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2017/04/08/workflow-on-contributing-to-open-source/</guid>
        
        
        <category>open_source</category>
        
        <category>collaboration</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Google Summer of Code Preparation</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;GSoC (Google Summer of Code), a program where university students spend their
3 month summer break coding on an open source project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That time finally comes. After almost one year I have been lurking, observing,
it’s time to decide whether I will participate or not. It’s not easy
to find organization who fit with who I am. But anyway, this year, I will try.&lt;br /&gt;
Despite administrative prerequisite, such as proof of enrollment, there are some
technical stuff involving coding activities we need to do, which is fun.
This is a list of what I’ve done so far in order to be considered as good
candidate:&lt;/p&gt;

&lt;h3 id=&quot;pick-a-project-with-programming-language-that-i-passionate-about&quot;&gt;Pick a project with programming language that I passionate about&lt;/h3&gt;

&lt;p&gt;There is a word “code” in Google Summer of Code, meaning programming will be my main
activity in this program. So, I must find which project that has programming
language, that I familiar with. This is to avoid, I will stuck about the tasks
that will assigned to me as a program applicant.&lt;br /&gt;
Actually, it can be done even long ago before the program being announced. I can
look at the GSoC archive. But, sometimes term will change as the organization
announced. Some organization will participate again, while others not. So, for
me it better to prepare after the program announced officially.&lt;br /&gt;
From there, I can see which project fit with my programming language, one that I
love. So, after some effort of filtering and analyzing, then I choose an
appropriate project, I will not find a big technical barrier to pass this program.&lt;/p&gt;

&lt;h3 id=&quot;pick-a-project-that-fit-with-my-knowledge&quot;&gt;Pick a project that fit with my knowledge&lt;/h3&gt;

&lt;p&gt;This means, I must look at the project task. With given time frame, which about
just 3 month, does it sound realistic that I will finish my task? That it’s, be
realistic is the key. Measure the difficulty of the task. When I face something
very unfamiliar and need more time to learn, I prefer to skip this. Because I
don’t want to spend my time in things that I less understand.&lt;br /&gt;
For example, this year, I choose project from GNU Wget that use C as their
programming language base, which currently I am familiar with. And for the task,
I pick idea of “Improvement of test suite using Libmicrohttpd”.&lt;/p&gt;

&lt;h3 id=&quot;get-enganged-with-community&quot;&gt;Get enganged with community&lt;/h3&gt;

&lt;p&gt;After I found the project that I want to apply, I must introduce myself to the
community. This is important step I must do. Because without it, mentor cannot
help me when I face difficulty.&lt;br /&gt;
Find the place where they collaborate. There are some choice like mailing list,
slack, gitter, irc, etc. GNU Wget use mailing list as they medium to
communicate between developer. I send welcome message there, and replied kindly
by other members.
Follow their rules. Basically, there are some rules to be obeyed:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Use plain English. GSoC is global program and use English as it language for
communication. So, I need to use English in my conversation.&lt;/li&gt;
  &lt;li&gt;Not to send message directly to the mentor or other person in the community.
This is considered to be rude. Instead, I will use mailing list if I need to
send a message.&lt;/li&gt;
  &lt;li&gt;Avoid top post when I reply an email.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;learn-their-environment-workflow-and-code-base&quot;&gt;Learn their environment, workflow and code base&lt;/h3&gt;

&lt;p&gt;After I “Say Hi!” to the organization, now it’s time to dive into their code.
Find the repository. In Wget, their main repositories are hosted in Savannah,
Github and Gitlab. So, I clone the repo and then build the software from source.&lt;br /&gt;
I have successfully built Wget from source. Then I try to trace what the program
do using gdb, to take a look what is going on inside its process.&lt;br /&gt;
I familiarize my self with git, because Wget use git as its version control
system. Also the project uses Github to consolidate patches, open issue, write
wiki, etc. I try to hanging around on there. It fancy design keep me comfort
with environment and workflow of the project.&lt;/p&gt;

&lt;h3 id=&quot;submit-a-patch-event-with-a-trivial-one&quot;&gt;Submit a patch, event with a trivial one&lt;/h3&gt;

&lt;p&gt;This patching section required quite technical skill. For newcomer like me, I
feel a bit confuse about what patch I can submit. Then, with guide from my
mentor, I was given an idea what simple task can be submitted. I pick an easy
one. A testing unit. Because, he mention, that Wget unit testing is still far
from perfect. I will take it for my chance. I try to add a function to reach
more coverage in the project unit test.&lt;br /&gt;
In order to merged into upstream, I need to make pull request on that project.
To be honest, it is my first time pull request in a real open source project.
Of course my patch will not merged automatically to the upstream. Mentor and the
community members will review first before it can be accepted. And after several
step, edit code, re-push commit with guide from my mentor and other contributors
that help me, finally my patch get merged on the upstream. It’s a nice feeling
for a rookie developer can have.&lt;/p&gt;

&lt;h3 id=&quot;write-a-good-proposal&quot;&gt;Write a good proposal&lt;/h3&gt;

&lt;p&gt;After all, to be accepted in the GSoC program itself, I need to upload a
proposal. The proposal must be good enough to be considered accepted as GSoC
candidate. I pick the idea from list project that mentioned in project website.
I create a draft from this and share to other members. I receive a lot of
feedback. Thanks for who was concerned, so I can make improvements to my
proposal. After I feel it ready, I upload my final proposal to GSoC official.
And because the time between the date of proposal submit and the announcement of
accepted applicant is a month long, I will use it to get more familiar with
project code base.&lt;/p&gt;

&lt;p&gt;That was my short list for what I do in order to be accepted to GSoC 2017. I
hope this article will help provide an overview of what preparations need to be
done so you can participate in GSoC. Good luck!&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Apr 2017 12:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2017/04/05/google-summer-of-code-preparation/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2017/04/05/google-summer-of-code-preparation/</guid>
        
        
        <category>open_source</category>
        
        <category>collaboration</category>
        
        <category>programming</category>
        
        <category>gsoc</category>
        
      </item>
    
      <item>
        <title>Convert Text to Pdf on Linux</title>
        <description>&lt;p&gt;Background: failed to build linux kernel documentation (still too lazy to solve
problems).&lt;br /&gt;
Goal: generate pdf files of linux documentation, because I have reading problem
when using text files. Text files look ugly when I open using my reader
(Android).&lt;/p&gt;

&lt;p&gt;Install needed packages.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;enscript ps2pdf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Do this simple tricks.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Documentation/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enscript &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;.ps &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ps&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ps2pdf &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now I have pdf files of all the text files.&lt;br /&gt;
It still have a problem, it just convert files on the same directory. So other
files under this directory must be processed separately, which mean I must move
to each directory.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Sep 2016 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/09/02/convert-text-to-pdf-on-linux/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/09/02/convert-text-to-pdf-on-linux/</guid>
        
        
        <category>linux</category>
        
        <category>documentation</category>
        
        <category>text</category>
        
      </item>
    
      <item>
        <title>My Vim Configuration</title>
        <description>&lt;p&gt;This is my Vim configuration a.k.a .vimrc. You can download the file from
&lt;a href=&quot;https://github.com/dstw/dotfiles/raw/master/.vimrc&quot;&gt;here&lt;/a&gt;.
Feel free to use and customize.&lt;/p&gt;

&lt;p&gt;Below are some description of its contents:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Use vim settings instead of vi&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nocompatible &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;No backup or swap&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nobackup nowritebackup &lt;span class=&quot;k&quot;&gt;noswapfile&lt;/span&gt; autoread          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Enable per-directory .vimrc files&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; exrc                                                &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Don’t unload buffer when switching away&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; hidden                                              &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Allow per-file settings via modeline&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; modeline                                            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Disable unsafe commands in local .vimrc files&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; secure                                              &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Saving and encoding&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; encoding&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt; fileencoding&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt; termencoding&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Command completion&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; wildmenu                                            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Allow backspacing over everything in insert mode&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; backspace&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;indent&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;eol&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;start&lt;/span&gt;                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Display status line which contains current mode, file name, file status,
ruler, etc.&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; laststatus&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Always set autoindenting on&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; autoindent                                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Display incomplete commands&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; showcmd                                             &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Keep upto 50 lines of command line history&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;                                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show a vertical line at the 79th character&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; textwidth&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Highlight column after ‘textwidth’&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; colorcolumn&lt;span class=&quot;p&quot;&gt;=+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;                                      &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Switch syntax highlighting on&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;syntax &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;                                               &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Switch highlighting on the last used search pattern&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; hlsearch incsearch ignorecase smartcase             &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Don’t hide the mouse cursor while typing&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nomousehide                                         &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Right-click pops up contect menu&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; mousemodel&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;popup&lt;/span&gt;                                    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show cursor position in status bar&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; ruler                                               &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show line numbers on left&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;number&lt;/span&gt;                                              &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Disable code folding&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nofoldenable                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Scroll the window so we can always see 10 lines around the cursor&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; scrolloff&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Kernel coding style&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; tabstop&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;                                           
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; softtabstop&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;                                       
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; shiftwidth&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;                                        
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; noexpandtab                                         &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Enable file type detection&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;filetype&lt;/span&gt; plugin indent &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;                               &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Shortcut to search visually selected text&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;vnoremap &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;y&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&quot;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Check if running on gvim&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; has&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gui_running&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Set terminal color to 256&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; t_Co&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;256&lt;/span&gt;                                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Check if using Windows&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; has&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;win32&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; has&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;win16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                       &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Set Ubuntu Mono font with size 11&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; guifont&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;Ubuntu\ Mono&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;h11                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Use solarized colorscheme&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;colorscheme&lt;/span&gt; solarized                                 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Set the background to dark color&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; background&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dark&lt;/span&gt;                                   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Highlight the current line&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; cursorline                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Use letter as the print output format&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; printoptions&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;paper&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;letter                         &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I use Ubuntu font which can be download from
&lt;a href=&quot;http://font.ubuntu.com/&quot;&gt;font.ubuntu.com&lt;/a&gt;.
To enable solarized colorscheme, download file solarized.vim from
https://github.com/altercation/vim-colors-solarized/.
If you want to look my personal vim configuration, you can find it
&lt;a href=&quot;https://github.com/dstw/dotfiles&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I use this configuration in my Linux workstation and server.
I use exclusively for editing
linux kernel and other open source projects. For daily programming use, you can
change the value of tabstop, softtabstop and shiftwidth.&lt;br /&gt;
Happy Vimming!&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jun 2016 15:08:57 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/03/my-vim-configuration/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/03/my-vim-configuration/</guid>
        
        
        <category>text_editor</category>
        
        <category>vim</category>
        
      </item>
    
      <item>
        <title>Vim Quick Reference</title>
        <description>&lt;p&gt;For unfimiliar user, vim is a little bit confusing at first. But,
after you try it several times and configure properly, you will found this text
editor is very powerful.&lt;br /&gt;
Here I will note several subject how to use vim, because sometimes navigate to
vim help is quite difficult.&lt;/p&gt;

&lt;p&gt;Vim is modal editor which means you use different mode to edit text. Some
important mode you will use very often are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Normal Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can enter any command using &lt;code&gt;:&lt;/code&gt; or search using &lt;code&gt;/&lt;/code&gt;
and &lt;code&gt;?&lt;/code&gt;. Press &lt;code&gt;Esc&lt;/code&gt; to enter this mode.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Insert Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Text you type is inserted into the buffer. Press &lt;code&gt;i&lt;/code&gt; to enter this
mode.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this mode, you can select the text we want in order to copy, cut or delete.
Press &lt;code&gt;v&lt;/code&gt; to enter this mode. The cursor position will be starting
point to your selection.&lt;/p&gt;

&lt;h3 id=&quot;navigation&quot;&gt;Navigation&lt;/h3&gt;

&lt;p&gt;You can move through the buffer with the following key:&lt;/p&gt;

&lt;p&gt;Move left &lt;code&gt;h&lt;/code&gt; &lt;br /&gt;
Move right &lt;code&gt;l&lt;/code&gt; &lt;br /&gt;
Move up &lt;code&gt;k&lt;/code&gt; &lt;br /&gt;
Move down &lt;code&gt;j&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Using this key will make your navigation faster than using arrow keys or mouse.&lt;/p&gt;

&lt;p&gt;Move one word &lt;code&gt;w&lt;/code&gt;&lt;br /&gt;
Move one word backwards &lt;code&gt;b&lt;/code&gt;&lt;br /&gt;
Move to end of line &lt;code&gt;$&lt;/code&gt;&lt;br /&gt;
Move to beginning of line &lt;code&gt;0&lt;/code&gt;&lt;br /&gt;
Insert text &lt;code&gt;i&lt;/code&gt;&lt;br /&gt;
Insert text at the end of line &lt;code&gt;A&lt;/code&gt;&lt;br /&gt;
Insert text at the beginning of line &lt;code&gt;I&lt;/code&gt;&lt;br /&gt;
Insert text above line &lt;code&gt;O&lt;/code&gt;&lt;br /&gt;
Insert text below line &lt;code&gt;o&lt;/code&gt;&lt;br /&gt;
Replace one character &lt;code&gt;r&lt;/code&gt;&lt;br /&gt;
Replace character consecutively &lt;code&gt;R&lt;/code&gt; (enter “replace mode”)&lt;/p&gt;

&lt;p&gt;Page navigation:&lt;/p&gt;

&lt;p&gt;Move page down &lt;code&gt;ctrl + f&lt;/code&gt;&lt;br /&gt;
Move page up &lt;code&gt;ctrl + b&lt;/code&gt;&lt;br /&gt;
Move page half down &lt;code&gt;ctrl + d&lt;/code&gt;&lt;br /&gt;
Move page half up &lt;code&gt;ctrl + u&lt;/code&gt;&lt;br /&gt;
Move top &lt;code&gt;gg&lt;/code&gt;&lt;br /&gt;
Move bottom &lt;code&gt;G&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Navigate through command history &lt;code&gt;q:&lt;/code&gt;
Navigate through search history &lt;code&gt;q/&lt;/code&gt;
Then you can select command or search result with navigation key. To execute
command, press &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;open-and-save-file&quot;&gt;Open and Save File&lt;/h3&gt;

&lt;p&gt;Open file &lt;code&gt;:e filename&lt;/code&gt;&lt;br /&gt;
Save file &lt;code&gt;:w&lt;/code&gt;&lt;br /&gt;
Saveas file &lt;code&gt;:w filename&lt;/code&gt;&lt;br /&gt;
Quit &lt;code&gt;:q&lt;/code&gt;&lt;br /&gt;
Quit without save&lt;code&gt;:q!&lt;/code&gt;&lt;br /&gt;
Save file and quit&lt;code&gt;:wq&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;undo-and-redo&quot;&gt;Undo and Redo&lt;/h3&gt;

&lt;p&gt;Undo &lt;code&gt;u&lt;/code&gt;&lt;br /&gt;
Redo &lt;code&gt;ctrl + r&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;visual-selection&quot;&gt;Visual Selection&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;v&lt;/code&gt; on text you want to select. You will enter visual mode.
Navigate using &lt;code&gt;hjkl&lt;/code&gt; key. Then we can do other action such as copy,
cut or delete.&lt;/p&gt;

&lt;h3 id=&quot;copy-and-paste-text&quot;&gt;Copy and Paste Text&lt;/h3&gt;

&lt;p&gt;After you select a text, you can do following action:&lt;/p&gt;

&lt;p&gt;Copy &lt;code&gt;y&lt;/code&gt;&lt;br /&gt;
Cut/Delete &lt;code&gt;d&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt;&lt;br /&gt;
Copy entire line &lt;code&gt;yy&lt;/code&gt;&lt;br /&gt;
Cut entire line &lt;code&gt;dd&lt;/code&gt;&lt;br /&gt;
Paste &lt;code&gt;p&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;search-and-replace-text&quot;&gt;Search and Replace Text&lt;/h3&gt;

&lt;p&gt;Find text &lt;code&gt;/query&lt;/code&gt;&lt;br /&gt;
Find text upwards &lt;code&gt;?query&lt;/code&gt;&lt;br /&gt;
Navigate between search results &lt;code&gt;n&lt;/code&gt; to move forward and
&lt;code&gt;N&lt;/code&gt; to move backwards&lt;/p&gt;

&lt;p&gt;Find text using visually selected text, firstly add this line to vimrc file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vnoremap // y/&amp;lt;C-R&amp;gt;&quot;&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then select text in visual mode and press &lt;code&gt;//&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Replace text &lt;code&gt;:%s/old/new/g&lt;/code&gt;&lt;br /&gt;
Replace all &lt;code&gt;:%s/old/new/gc&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;word-completion&quot;&gt;Word Completion&lt;/h3&gt;

&lt;p&gt;You can autocomplete text with several method to get different result:&lt;/p&gt;

&lt;p&gt;Search text before cursor &lt;code&gt;ctrl + p&lt;/code&gt;&lt;br /&gt;
Search text after cursor &lt;code&gt;ctrl + n&lt;/code&gt;&lt;br /&gt;
Search for filename complete with its path &lt;code&gt;ctrl + x&lt;/code&gt;
&lt;code&gt;ctrl + f&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;multi-window-editing&quot;&gt;Multi Window Editing&lt;/h3&gt;

&lt;p&gt;Open new window &lt;code&gt;:new&lt;/code&gt;&lt;br /&gt;
Open new vertical window &lt;code&gt;:vnew&lt;/code&gt;&lt;br /&gt;
Move through window &lt;code&gt;ctrl + w&lt;/code&gt;&lt;code&gt;w&lt;/code&gt;&lt;br /&gt;
Swap window position &lt;code&gt;ctrl + w&lt;/code&gt;&lt;code&gt;r&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;compare-buffer&quot;&gt;Compare Buffer&lt;/h3&gt;

&lt;p&gt;If you have two split windows containing buffers that you want to compare, then
you can diff them by running &lt;code&gt;:windo diffthis&lt;/code&gt;&lt;br /&gt;
You can turn diff mode off just as easily, by running &lt;code&gt;:windo diffoff
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s how I use vim in daily life.
For my personal preference, I have modified my vimrc which you can find 
&lt;a href=&quot;/blog/2016/06/03/my-vim-configuration&quot;&gt;here&lt;/a&gt;.
Thanks for reading.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/02/vim-quick-reference/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/02/vim-quick-reference/</guid>
        
        
        <category>text_editor</category>
        
        <category>vim</category>
        
      </item>
    
      <item>
        <title>Octopress Setup and Deployment</title>
        <description>&lt;p&gt;I will explain how to setup a new blog using octopress, deploy it on github and
contribute from other place. Let’s check this out.&lt;/p&gt;

&lt;h3 id=&quot;first-time-setup&quot;&gt;First Time Setup&lt;/h3&gt;

&lt;p&gt;Prerequisite:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install Git and Node.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On debian system, use apt-get.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nodejs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Install Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We must use version 1.9.3 or higher. To ensure we fulfill this requirement, I
prefer to install ruby from source. Download from
&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby official site&lt;/a&gt;. The installation
process is quite common.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf ruby-2.3.1.tar.gz 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ruby-2.3.1/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./configure
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Install ExecJS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To run JavaScript code from Ruby.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;execjs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Configure bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another octopress dependency.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After all needed requirements fulfilled, then grab the octopress source code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/imathis/octopress.git octopress
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;octopress&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;One more dependency:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then install octopress default theme.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setup process is finished. We can now start to blog using rake newpost[“title”], 
customize _config.yml, add some pages, customize 404 not found page, using
custom domain name and so on.&lt;/p&gt;

&lt;h3 id=&quot;deploy-on-github&quot;&gt;Deploy on Github&lt;/h3&gt;

&lt;p&gt;There are some way to deploy octopress, either using rsync or git. In this
post, I will explain how to deploy octopress on Github.
Create a new Github repository and name the repository with the format
username.github.io, where username is your GitHub username or organization name.&lt;/p&gt;

&lt;p&gt;Github Pages for users and organizations uses the master branch like the public 
directory on a web server, serving up the files at your Pages url 
http://username.github.io. As a result, we will to work on the source for 
our blog in the source branch and commit the generated content to the master 
branch. Octopress has a configuration task that helps us set all this up.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake setup_github_pages&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The rake task will ask for a URL of the Github repo. Copy the SSH or HTTPS URL 
from our newly created repository
(e.g. git@github.com:username/username.github.io.git)
and paste it in as a response.&lt;/p&gt;

&lt;p&gt;This will:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ask for and store our Github Pages repository url&lt;/li&gt;
  &lt;li&gt;Rename the remote pointing to imathis/octopress from ‘origin’ to ‘octopress’&lt;/li&gt;
  &lt;li&gt;Add our Github Pages repository as the default origin remote&lt;/li&gt;
  &lt;li&gt;Switch the active branch from master to source&lt;/li&gt;
  &lt;li&gt;Configure our blog’s url according to your repository&lt;/li&gt;
  &lt;li&gt;Setup a master branch in the _deploy directory for deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake generate
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake deploy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will generate our blog, copy the generated files into _deploy/, add them 
to git, commit and push them up to the master branch.&lt;/p&gt;

&lt;p&gt;Don’t forget to commit the source of our blog.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'our message'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With new repositories, Github sets the default branch based on the branch we 
push first, and it looks there for the generated site content. If we’re having 
trouble getting Github to publish our site, go to the admin panel for our 
repository and make sure that the master branch is the default branch.&lt;/p&gt;

&lt;h3 id=&quot;contribute-from-other-place&quot;&gt;Contribute from Other Place&lt;/h3&gt;

&lt;p&gt;Sometimes we need to develop our octopress site in other place than we currently
in. To do that, we will use the benefit of git.&lt;br /&gt;
First, we need to get our site copy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git@github.com:username/username.github.io.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;username.github.io&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Switch to source branch&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then do all change on our source, after that run “rake generate” or “rake
preview” to compile our source onto public directory. Everything seems to be
okay until we need to upload to github.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake deploy
&lt;span class=&quot;c&quot;&gt;## Deploying branch to Github Pages &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## Pulling any updates from Github Pages &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_deploy
rake aborted!
Errno::ENOENT: No such file or directory @ dir_chdir - _deploy
/home/didik/octopress/Rakefile:255:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;block &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;top &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;required&lt;span class=&quot;o&quot;&gt;)&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
/home/didik/octopress/Rakefile:227:in `block in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;
Tasks: TOP &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; deploy
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;See full trace by running task with &lt;span class=&quot;nt&quot;&gt;--trace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Oops, it’s look like we miss something. We have to make a new _deploy directory 
and add git initialization to it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;_deploy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_deploy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin git@github.com:username/username.github.io.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull origin master
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s all. Now, we can upload using rake deploy as usual.&lt;br /&gt;
Until next time.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 15:06:57 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/02/octopress-setup-and-deployment/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/02/octopress-setup-and-deployment/</guid>
        
        
        <category>web</category>
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>My Blog</title>
        <description>&lt;p&gt;As a person who use internet in daily basis, I think something
personal like a domain name is essential to have. But, there is no good
personal domain name available for free. Fortunately, the price to “borrow” a
domain name from the registrar is fairly affordable. So, without even thinking
more about price to pay, I decided that what I invested in this thing will
someday get useful for everyone, in anyway.&lt;br /&gt;
After I “reserved” one domain name, I need to associate it with other service.
The two things that important to be setting up immediately are blog and email. &lt;br /&gt;
Blog is like my “broadcasting center”. I store my notes, my journals there.
Everyone is welcome to visit there, and I hope it can help someone to answer
their question someday. Email become my virtual identity. I use it to register
to many service on the internet. Especially with my own custom domain name,
I can make my blog and email look more personally.
Here I explain how I build my blog step by step.&lt;/p&gt;

&lt;h3 id=&quot;domain-name&quot;&gt;Domain Name&lt;/h3&gt;

&lt;p&gt;I register my domain from a web hosting provider. I just pay for the domain
name, not the hosting service.&lt;br /&gt;
About what provider I currently use, it can be found using a domain tool easily.&lt;/p&gt;

&lt;h3 id=&quot;blog&quot;&gt;Blog&lt;/h3&gt;

&lt;p&gt;In order to build my infrastructure, I need to have a server, dedicated internet
or static IP address to run the software up. But I don’t have any of them, so I
just use free service from external providers. There is a lot of providers who
can give us some space to host our web and email.&lt;br /&gt;
In early time I touch with internet, I did use some blogging framework to run my
blog. I ever use Blogger, Joomla, Drupal and Wordpress. I spend a long time with 
Wordpress. But, due to personal favor, finally I switch to Octopress.&lt;/p&gt;

&lt;p&gt;Why Octopress? Because that is simple. It has beautiful design, while easy to 
use. I can create post directly from Vim on my Linux console. 
It can be updated using git, so I can feel the sysadmin way to write a post. 
It use a simplify html-like syntax, markdown. 
I can host my blog together with my application repository in 
&lt;a href=&quot;https://www.github.com&quot;&gt;Github&lt;/a&gt;. You can check this
&lt;a href=&quot;/blog/2016/06/02/octopress-setup-and-deployment/&quot;&gt;article&lt;/a&gt; 
for more details. 
With this Octopress take control my way to blog,
I can focus on contents that I want to share rather than 
have to be confused to setup and design my blog.&lt;/p&gt;

&lt;h3 id=&quot;ssl&quot;&gt;SSL&lt;/h3&gt;

&lt;p&gt;For security purpose, I use free ssl service from 
&lt;a href=&quot;http://www.cloudflare.com&quot;&gt;CloudFlare&lt;/a&gt;. The setup process is fairly easy.
The requirements for its service is just a domain name with top level domain.
I just need to set my DNS configuration to point CloudFlare DNS. Additionally, 
there is a feature so I can force my blog visitor to use https in order to see
the ssl sign.&lt;/p&gt;

&lt;h3 id=&quot;email&quot;&gt;Email&lt;/h3&gt;

&lt;p&gt;Rather than using well-known free email service, I need to host my own email
because I want to use my own domain name. Fortunately, there is email provider 
that provide free email service using custom domain, thanks to
&lt;a href=&quot;http://www.zoho.com&quot;&gt;Zoho Mail&lt;/a&gt;.
Even with free service, I can use my own domain name.&lt;/p&gt;

&lt;p&gt;That’s all about my blog. I hope it all will be useful. Thanks for reading.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 15:06:57 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/02/my-blog/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/02/my-blog/</guid>
        
        
        <category>web</category>
        
        <category>blog</category>
        
        <category>email</category>
        
      </item>
    
      <item>
        <title>Insert USB Module in Linux Kernel</title>
        <description>&lt;p&gt;After I re-compile my kernel using a vanilla one, I found that my usb flashdrive 
can not be detected by my operating system. I check on dmesg, there are entry
about my usb flashdrive on the log:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dmesg
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.616624] usb 1-1.2: new high-speed USB device number 3 using ehci-pci
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710606] usb 1-1.2: New USB device found, &lt;span class=&quot;nv&quot;&gt;idVendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0951, &lt;span class=&quot;nv&quot;&gt;idProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1666
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710617] usb 1-1.2: New USB device strings: &lt;span class=&quot;nv&quot;&gt;Mfr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, &lt;span class=&quot;nv&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;SerialNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710631] usb 1-1.2: Product: DataTraveler 3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710634] usb 1-1.2: Manufacturer: Kingston
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710637] usb 1-1.2: SerialNumber: 60A44C3FACDBBDB1796E36C9
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But, after a moment I wait, there is no notification about new flashdrive
inserted. I check using blkid, still there is no sign of the thing.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;blkid
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;didik: 
/dev/sda1: &lt;span class=&quot;nv&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SYSTEM&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;70E80099E8005FA8&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ntfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-01&quot;&lt;/span&gt;
/dev/sda2: &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;92521783-0211-4b1d-8f66-b9a62c16fc89&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID_SUB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fdb1cb3e-1a44-4e53-864e-b29f6fdfb153&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btrfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-02&quot;&lt;/span&gt;
/dev/sda3: &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4723c4f7-9624-4b8d-9b41-3079442641b4&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;swap&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-03&quot;&lt;/span&gt;
/dev/sda5: &lt;span class=&quot;nv&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DATA&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;01CD0094E26EBB80&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ntfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-05&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Apparently, I forget to insert usb-storage module in my kernel, after I
recompile it. So, I try to modprobe the needed module.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;modprobe usb-storage
modprobe: FATAL: Module usb-storage not found &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;directory /lib/modules/4.6.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Okay, it seems that the file I need is not available from the kernel tree. So, I
need to insert the module manually.&lt;br /&gt;
Time to go to kernel tree.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;linux-4.6.2/
didik@thinkpad:~/linux-4.6.2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make menuconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From this menu, I will include the module that I need for usb-storage. Press /
to search module name. It is called USB_STORAGE.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/usb-module0.png&quot; alt=&quot;usb-module0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After I found its location, I insert it with “M” become my choice between the
tri-state mode.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/usb-module1.png&quot; alt=&quot;usb-module1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I exit and save this configuration.&lt;br /&gt;
Then I make it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~/linux-4.6.2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make &lt;span class=&quot;nt&quot;&gt;-j4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that the “4” value is changeable depends on processor specs.&lt;br /&gt;
I use “4” because my processor 
Install old and new compiled module, as root of course.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~/linux-4.6.2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make modules_install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;My new module finally installed. Now I can plug the usb drive on my computer.&lt;br /&gt;
Just in case you are curious about system message of the inserted device, you 
can use dmesg.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dmesg
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3231.314581] usb 1-1.2: USB disconnect, device number 3
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.198257] usb 1-1.2: new high-speed USB device number 4 using ehci-pci
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292379] usb 1-1.2: New USB device found, &lt;span class=&quot;nv&quot;&gt;idVendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0951, &lt;span class=&quot;nv&quot;&gt;idProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1666
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292390] usb 1-1.2: New USB device strings: &lt;span class=&quot;nv&quot;&gt;Mfr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, &lt;span class=&quot;nv&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;SerialNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292395] usb 1-1.2: Product: DataTraveler 3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292399] usb 1-1.2: Manufacturer: Kingston
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292403] usb 1-1.2: SerialNumber: 60A44C3FACDBBDB1796E36C9
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.990697] usb-storage 1-1.2:1.0: USB Mass Storage device detected
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.990994] scsi host6: usb-storage 1-1.2:1.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.991196] usbcore: registered new interface driver usb-storage
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.995392] scsi 6:0:0:0: Direct-Access     Kingston DataTraveler 3.0 PMAP PQ: 0 ANSI: 6
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.996242] sd 6:0:0:0: Attached scsi generic sg2 &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.996655] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] 31293440 512-byte logical blocks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16.0 GB/14.9 GiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.998693] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] Write Protect is off
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.998705] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] Mode Sense: 2b 80 00 08
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3235.000537] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] Write cache: disabled, &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;cache: enabled, doesn&lt;span class=&quot;s1&quot;&gt;'t support DPO or FUA
[ 3236.101997]  sdb: sdb1
[ 3236.108153] sd 6:0:0:0: [sdb] Attached SCSI removable disk
--- output omitted ---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And modinfo to view module details.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;modinfo usb-storage
filename:       /lib/modules/4.6.2/kernel/drivers/usb/storage/usb-storage.ko
license:        GPL
description:    USB Mass Storage driver &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Linux
author:         Matthew Dharm &amp;lt;mdharm-usb@one-eyed-alien.net&amp;gt;
srcversion:     D0235102D9160CC35A9A1C4
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;p&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;d&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic08isc06ip50in&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;p&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;d&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic08isc05ip50in&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v03EEp6906d0003dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;isc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ip&lt;span class=&quot;k&quot;&gt;*in*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v03EBp2002d0100dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;isc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ip&lt;span class=&quot;k&quot;&gt;*in*&lt;/span&gt;
depends:        
intree:         Y
vermagic:       4.6.2 SMP mod_unload modversions 
parm:           option_zero_cd:ZeroCD mode &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Force Modem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Allow CD-Rom &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uint&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
parm:           swi_tru_install:TRU-Install mode &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Full Logic &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;def&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Force CD-Rom, &lt;span class=&quot;nv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Force Modem&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uint&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
parm:           delay_use:seconds to delay before using a new device &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uint&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
parm:           quirks:supplemental list of device IDs and their quirks &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Until next time.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 May 2016 21:13:21 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/05/03/insert-usb-module-linux-kernel/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/05/03/insert-usb-module-linux-kernel/</guid>
        
        
        <category>linux</category>
        
        <category>kernel</category>
        
      </item>
    
      <item>
        <title>Build Linux Kernel from Source</title>
        <description>&lt;p&gt;In order to doing some research in operating system, I need to build Linux
kernel from source. Although my GNU/Linux distro provide Linux kernel package
which ready to use, I can not use it for Linux Kernel development. It is
recommended to be able build my own Linux kernel in order to customize my build.&lt;/p&gt;

&lt;h2 id=&quot;build--install&quot;&gt;Build &amp;amp; Install&lt;/h2&gt;

&lt;p&gt;To build the Linux kernel from source, I need several tools: &lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;libssl-dev&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; and (optionally) &lt;code class=&quot;highlighter-rouge&quot;&gt;ctags&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cscope&lt;/code&gt;, and/or &lt;code class=&quot;highlighter-rouge&quot;&gt;ncurses-dev&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;/code&gt; is essential tools to build binaries from source. &lt;code class=&quot;highlighter-rouge&quot;&gt;libssl-dev&lt;/code&gt; is
for cryptography purpose. &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; is used for control the revision of the source
code, it is recommended if I want to submit patch regarding Linux Kernel. The
&lt;code class=&quot;highlighter-rouge&quot;&gt;ncurses-dev&lt;/code&gt; tools are used if I &lt;code class=&quot;highlighter-rouge&quot;&gt;make menuconfig&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;make nconfig&lt;/code&gt;. The tool
packages may be called something else in some Linux distribution, so I may need
to determine the package first.&lt;/p&gt;

&lt;p&gt;I use Ubuntu, so I can get these tools by running:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;make gcc libssl-dev bc git exuberant-ctags libncurses5-dev&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you using different Linux distro, on Red Hat based systems like Fedora,
CentOS you can run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gcc make git ctags ncurses-devel openssl-devel&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And on SUSE based systems (like SLES, Leap or Tumbleweed), you can run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;zypper &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;git gcc ncurses-devel libopenssl-devel ctags cscope&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you develop using git, there are different development tree of Linux Kernel
available. Different tree serve different purpose. Some of them I often use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rc: The latest version out from Linus Torvald tree. It serves main purpose to
include some new feature or fix which ready for testing. Not recommended for
production use.&lt;/li&gt;
  &lt;li&gt;stable: Kernel marked stable are come from the stable maintainer which
currently done by Greg-Kroah Hartman. This version good for production use.&lt;/li&gt;
  &lt;li&gt;staging: The staging tree is collection of new driver which not yet ready to
be included in Linus rc tree. This one highly recommended for new and aspiring
Linux Kernel developer who want to contribute.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I need to change configuration parameters to determine which settings and
modules which need to build. Several options available:&lt;/p&gt;

&lt;h4 id=&quot;1-use-default-kernel-configuration&quot;&gt;1. Use default kernel configuration.&lt;/h4&gt;
&lt;p&gt;This settings comes from the kernel maintainer. Remember, a default config may
not have the options you are currently using.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make defconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;2-use-existing-configuration&quot;&gt;2. Use existing configuration.&lt;/h4&gt;
&lt;p&gt;Just press “Enter” when asked for configuration options.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make localmodconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;3-manual-selection-with-graphical-menu&quot;&gt;3. Manual selection with graphical menu.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make menuconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compiling a kernel from scratch from a distribution configuration can take
“forever” because the distros turn on every hardware configuration possible. For
people wanting to do kernel development fast, you want to make a minimal
configuration. Steve Rostedt uses ktest.pl make_min_config to get a truely
minimum config, but it will take a day or two to build. Warning: make sure you
have all your USB devices plugged into the system, or you won’t get the drivers
for them!&lt;/p&gt;

&lt;h4 id=&quot;4--duplicate-current-config&quot;&gt;4.  Duplicate current config.&lt;/h4&gt;

&lt;p&gt;When I want to see if a bug is fixed, I can duplicate the configuration on my
running kernel. That config file is stored somewhere in /boot/. There might be
several files that start with config, so I can use the one associated with your
running kernel. I can find it by running &lt;code class=&quot;highlighter-rouge&quot;&gt;uname -a&lt;/code&gt; and finding the config file
that ends with my kernel version number. I copy that file into the source
directory as .config. Or just run this command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /boot/config-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; .config&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Among these options, I tend to use latest option because it use config from
distro developer and cause it recognizes most of my hardware.&lt;/p&gt;

&lt;p&gt;Then, compile source, this process can take a while.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make &lt;span class=&quot;nt&quot;&gt;-jX&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Where X is a number like 2 or 4. If you have a dual core, 2 or 3 might be good.
Quad core, 4 or 6. Do not run with really big numbers unless you want your
machine to be slow. You can check the number with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /proc/cpuinfo&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On my machine, there are 0-3 processor available. I want to use all of these
resources to perform the compiling process. So I can use &lt;code class=&quot;highlighter-rouge&quot;&gt;make -j4&lt;/code&gt;.&lt;br /&gt;
This compiling process can take a lot of time. So you can make the time to do
some other interesting tasks such as read books of Linux Kernel development,
read LWN, lurking on LKML, etc.&lt;/p&gt;

&lt;p&gt;Install modules.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make modules_install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bootloader setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Double check bootloader setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-grub2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reboot the system.
I can check my new installed kernel with this command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Enjoy the new kernel.&lt;/p&gt;

&lt;h2 id=&quot;remove&quot;&gt;Remove&lt;/h2&gt;

&lt;p&gt;When there is such as installation process, then there should be the
unintallation process too.&lt;br /&gt;
Fist I need to find out the version of custom kernel. I can look at &lt;code class=&quot;highlighter-rouge&quot;&gt;/boot&lt;/code&gt;
directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /boot/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are several files. I can refer to the vmlinuz files to determine which
version I need to process.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/boot/vmlinuz-4.15.0-23-generic
/boot/vmlinuz-4.15.0-29-generic
/boot/vmlinuz-4.18.0-rc5
/boot/vmlinuz-4.18.0-rc6&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example, I want to remove kernel version 4.18.0-rc5.&lt;br /&gt;
But, before doing this, I must ensure that my system has other kernel installed
beside $CUSTOM_KERNEL_VERSION. Also I must ensure that I not removing kernel
which I currently running on, because it can lead to unexpected behaviour of my
system. When everything is okay, I can delete all files and folders which
contain $CUSTOM_KERNEL_VERSION name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ CUSTOM_KERNEL_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4.18.0-rc5&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/vmlinuz-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/initrd.img-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/System.map-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/config-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /lib/modules/&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /var/lib/initramfs-tools/&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lastly, I do some cleaning.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-initramfs &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; all &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-grub2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finish. My kernel has been successfully uninstalled.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 10:35:18 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/02/02/build-linux-kernel-from-source/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/02/02/build-linux-kernel-from-source/</guid>
        
        
        <category>linux</category>
        
        <category>kernel</category>
        
      </item>
    
  </channel>
</rss>
