<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Didik Setiawan</title>
    <description>Didik Setiawan's Blog</description>
    <link>https://www.didiksetiawan.com/</link>
    <atom:link href="https://www.didiksetiawan.com/sitemap.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 09 Mar 2018 03:48:42 +0700</pubDate>
    <lastBuildDate>Fri, 09 Mar 2018 03:48:42 +0700</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>GSoC with GNU Wget2 - Part I</title>
        <description>&lt;p&gt;This series of writing summing up of what I did in Google Summer of Code (GSoC) 2017.
GSoC 2017 be held in three period of time. In this part I will tell you
about the first period.&lt;/p&gt;

&lt;h3 id=&quot;community-approaching&quot;&gt;Community Approaching&lt;/h3&gt;

&lt;p&gt;After looking for organizations to work on, I decide to choose GNU Wget2 (part
of GNU Project). Why I choose this organization? Some reason I can say:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The codebase is small (but not the scope, for me), it give me advantage
that it’s easy to deploy on my local machine.&lt;/li&gt;
  &lt;li&gt;It use C as its primary programming language. At this time, I would like to
learn about C (Linux was influenced me) on real world application. I was
starting to learn C but just on the theory. So, working on Wget2 could help me
to learn C with practice.&lt;/li&gt;
  &lt;li&gt;The GNU Project reputation is well recognized in Open Source community so
working on their project make me proud.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I immediately take a look on their repository. I try to clone their repository
and build on my machine. GNU Wget2 use mailing list as their primary
communication channel, so I sent greeting to them about what project I
interesting at.&lt;br /&gt;
The contributor of the project is so friendly. They give me some clues about
what should I do. I should do some &lt;em&gt;microproject&lt;/em&gt; work to show effort from me to
understand their workflow and also their codebase. That means, I have to send a
patch (there was Github pull request at this time) to the project.  I choose to
work on adding new unit test to function &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_robots_parse()&lt;/code&gt; [0].  Just like
most of open source contribution, it took some process of revision of patch so
it can be merged to upstream. I respect the reviewing process, it help me learn
a lot. Also from now I learn a lot to use &lt;em&gt;GDB (GNU Debugger)&lt;/em&gt; to debug
application.&lt;br /&gt;
At first I choose to use subject “Design and Implementation of a Framework for
Plugins”. But I rethink again because what I do in microproject is about
Testing. Finally I change my subject so I take “Design and Implementation of
Test Suite Using Libmicrohttpd” as my project. I send my proposal to project’s
mailing list [1]. After some reviewing and revision process, I officially sent
my proposal to GSoC homepage and my proposal was accepted.&lt;br /&gt;
The project aim to use Libmicrohttpd as test suite for Wget2. I planned to
complete this by change on function &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt; also
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_stop_server()&lt;/code&gt; from src/libtest.c of Wget2. With this
approach, I don’t need to change existing test suite which call the internal
server code through functions mentioned above.&lt;br /&gt;
I’ve count there are 36 test file which use
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;. I must ensure all the test passed.  And
for installation prerequisite, I must ensure that Libmicrohttpd are included
when building Wget2 binary. Then I need to modify configure.ac. I will give
proper warning about this requirement. There is a section in README.md where I
must explain to user to provide Libmicrohttpd to make all test running
correctly.  With Libmicrohttpd I can add new test using feature that not yet
implemented in old server code, but ready on Libmicrohttpd, such as HTTP
authentication and concurrent request checking.&lt;/p&gt;

&lt;h3 id=&quot;community-bonding-period&quot;&gt;Community Bonding Period&lt;/h3&gt;

&lt;p&gt;During this period, I spend my time to learn codebase about Wget2 and
Libmicrohttpd. I was busy to learning them, that I forget to stay active in
community. To prevent mentors give me minus points, I try to work on an issue. I
try an easy one, adding enhancement for capabilities of file extended
attributes. In short words, Wget2 could save target file’s extended attributes
if filesystem support it. It is like the feature on Wget 1.x. To solve this
issue, I have to dive a little bit on Wget2 codebase. That’s give me a view
about how Wget2 works.&lt;/p&gt;

&lt;h3 id=&quot;1st-week&quot;&gt;1st Week&lt;/h3&gt;

&lt;p&gt;There comes the first week of my official coding period. I was work on some
basic tasks for this projects, such as modify the build tools. I have modifed
configure.ac to include Libmicrohttpd into Wget2. I just include the package,
and not adding, modifying or removing anything else yet.&lt;br /&gt;
With Libmicrohttpd becomes mandatory package to install before building Wget2
binary, there must be proper warning about this requirement, otherwise the
building process will fail. I have add oneliner information into README.md.
Actually, I was misunderstood about this. Christian Grothoff then give me
suggestion to correct it. Dependency to Libmicrohttpd should not become
mandatory. The solution it to make conditionally-compile and run the tests only
if Libmicrohttpd is present while build Wget2. Libmicrohttpd does the same for
Libcurl. Making the dependency optional also avoids the obvious possibility of
circular dependencies if we ever were to add Libwget2-based tests to
Libmicrohttpd.&lt;br /&gt;
Tim Ruhsen also reminds that I should to skip the appropriate tests if
Libmicrohttpd is not installed/ available. I should definitely avoid to use
Wget2 legacy server code in Libwget and focus on client functionality instead.
Because after we successfully integrating Libmicrohttpd, we should remove the
legacy server code. I finally understood what they mean and will fix this the
next week.&lt;br /&gt;
On the CI/CD section, I have ensured that all make check passed on several
testing machine including: Debian/GCC, Fedora/Clang, MingW64 and OSX.
Fortunately, most of those OS have provided Libmicrohttpd package on their
respective repository, except MingW64 (the representation of Windows build).
Especially for MingW64 build, because I haven’t found the correct package for
Libmicrohttpd, I include Libmicrohttpd by download the source and compile
manually. What I’ve done is add the following lines on .gitlab-ci.yml:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;before_script:
- dnf &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wget
- wget http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.55.tar.gz
- &lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf libmicrohttpd-0.9.55.tar.gz &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;libmicrohttpd-0.9.55/
- mingw64-configure &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/x86_64-w64-mingw32/sys-root/mingw/
- mingw64-make &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
- mingw64-make &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LOG_COMPILER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wine &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
- &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I asking if my step was right. Tim give me advice on that MingW64 issue, that I
should provide a script (e.g. in contrib/ folder) that will
downloads/builds/installs Libmicrohttpd. That script then added to the CI runner
YAML file(s) so we can test on MinGW64 as well. This will keep us to stay run as
many tests as possible. He suggest that I should move my MinGW64 build script to
contrib in the end of GSOC as a cleanup.&lt;br /&gt;
On the other hand, Evgeny Grin tell me there is a package for Libmicrohttpd on
MinGW64, it provided on Msys2 project and has HTTPS support. Another solution,
is to use W32 binary build provided on GNU mirrors, but it has not HTTPS
support. I keep this information for later decision. For now, I should focus on
the test code first.&lt;/p&gt;

&lt;h3 id=&quot;2nd-week&quot;&gt;2nd Week&lt;/h3&gt;

&lt;p&gt;Things get more interesting. Because in this period, I will starting to work on
Wget2 main testing function. I started on &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;.
I must change that function in order to call Libmicrohttpd as service for
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test()&lt;/code&gt;. Workflow to resolve this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Disable initial process for HTTP server socket.&lt;/li&gt;
  &lt;li&gt;Disable &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server_thread&lt;/code&gt;, instead call new function which call
Libmicrohttpd.&lt;/li&gt;
  &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server()&lt;/code&gt; function, wrapper for Libmicrohttpd. There
is also function &lt;code class=&quot;highlighter-rouge&quot;&gt;ahc_eco()&lt;/code&gt; which use to create proper HTTP
response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some issues I found in this period:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Decide what the best threading model for Libmicrohttpd. I currently using
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_USE_INTERNALLY_POLLING_THREAD&lt;/code&gt; which use external select. I still check
the comparison with legacy code that use Wget2 API &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_thread_start&lt;/code&gt;.
Darshit Shah give me a clue, that I should choose any mechanism that uses
&lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt;. Then we can change the threading model at a later stage if it
turns out to be a bottleneck. &lt;code class=&quot;highlighter-rouge&quot;&gt;epoll&lt;/code&gt; is Linux-only and even &lt;code class=&quot;highlighter-rouge&quot;&gt;poll&lt;/code&gt; isn’t
always available, so as long as I choose a &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; based implementation, it
should be fine. Evgeny said that I can use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_is_feature_supported()&lt;/code&gt; with
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_FEATURE_POLL&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_FEATURE_EPOLL&lt;/code&gt; to check for supported polling
functions.  Alternatively, with latest versions of Libmicrohttpd I can use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_USE_AUTO&lt;/code&gt; and Libmicrohttpd will choose &lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;poll()&lt;/code&gt; or
epoll-based polling automatically.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I make the &lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_port&lt;/code&gt; still hardcoded. Darshit tell me that this
becomes important note. The port should be a random number. Usually, passing 0
in the port number makes the kernel choose an open one for it. Having a
randomised port is important to ensure that multiple runs don’t step on each
other.&lt;br /&gt;
I think still don’t know how to accomplish this. Maybe, it just my understanding
that when I pass 0 in MHD port number, the result is still 0.  Another
approach, when I look into the old code, it generate port number by calling
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port()&lt;/code&gt;. But, I need to call &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_init()&lt;/code&gt; and
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_listen()&lt;/code&gt; respectively in order to get proper result.  Conclusion, do
I need to use existing &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port()&lt;/code&gt; to get the port, or maybe
there is a function in Libmicrohttpd to do that.&lt;br /&gt;
Tim added that all I need is the socket descriptor. How to call
&lt;code class=&quot;highlighter-rouge&quot;&gt;getsockname()&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;getnameinfo()&lt;/code&gt; to retrieve the port number I see in
&lt;code class=&quot;highlighter-rouge&quot;&gt;libwget/net.c&lt;/code&gt;/ &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port()&lt;/code&gt;. If Libmicrohttpd doesn’t have
such a function, either try to get the socket descriptor or extend
Libmicrohttpd with a small function (similar code as in
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_tcp_get_local_port&lt;/code&gt;).&lt;br /&gt;
Evgeny give more detailed explanations. There are several ways to resolve it:&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Initialise socket externally and start &lt;code class=&quot;highlighter-rouge&quot;&gt;listen()&lt;/code&gt; on it. I can use any bind
and port detection function. Pass socket &lt;code class=&quot;highlighter-rouge&quot;&gt;FD&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_start_daemon()&lt;/code&gt; by
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_OPTION_LISTEN_SOCKET&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_start_daemon()&lt;/code&gt; with “0” as port number then use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_LISTEN_FD&lt;/code&gt; to get listen
socket FD. Use any port detection.&lt;/li&gt;
      &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_start_daemon()&lt;/code&gt; with “0” as port number then use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/code&gt; to get port
number.  Works with &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_VERSION &amp;gt;= 0x00095501&lt;/code&gt; and on platforms that
support &lt;code class=&quot;highlighter-rouge&quot;&gt;getsockname()&lt;/code&gt;.&lt;br /&gt;
I can combine second and third methods.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#if MHD_VERSION &amp;gt;= 0x00095501
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MHD_NO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;MHD_is_feature_supported&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MHD_FEATURE_AUTODETECT_BIND_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_DaemonInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_get_daemon_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/* Insert code to handle error. */&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* MHD_VERSION &amp;gt;= 0x00095501 */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_DaemonInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MHD_socket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sock_fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_get_daemon_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_OPTION_LISTEN_FD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/* Insert code to handle error. */&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sock_fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listen_fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Insert code to use port detection on provided socket. */&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;He add note that socket type used by MHD functions is &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_socket&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_socket&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; on POSIX platforms (Linux, *BSD, Unix, Darwin) and
&lt;code class=&quot;highlighter-rouge&quot;&gt;SOCKET&lt;/code&gt; on Windows platform (excluding Cygwin, where &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_socket&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;ahc_eco()&lt;/code&gt; of Libmicrohttpd, urls data still using static checking for
matching with requested urls. In other word, it’s hardcoded. It needs to be
changed to dynamic method to accomodate variadic data.&lt;/li&gt;
  &lt;li&gt;I still not touched HTTPS yet.&lt;/li&gt;
  &lt;li&gt;I ask about what to do with FTP and FTPS functions. Since Libmicrohttpd just
provide service for HTTP. I was asking, do we need keep the function for
FTP{s}, or removing it. Darshit told me that we keep the FTP code intact for
now. Then we should look into different libraries that provide a FTP server in
C and try to integrate that into your test suite as well. But for this period,
it is out of scope.&lt;/li&gt;
  &lt;li&gt;The test was failed when I try to resolve URL with question mark. For example:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/subdir1/subpage1.html?query&amp;amp;param&lt;/code&gt;, when I debug, it return just
&lt;code class=&quot;highlighter-rouge&quot;&gt;/subdir1/subpage1.html&lt;/code&gt; so the result is 404 not found. I also check using
logging example source code provided in Libmicrohttpd tutorial. When I access
using http client such as Wget2 and Firefox, the result is still the same. The
URL result omit the query part. I confirm to Libmicrohttpd side about
this, whether it is intended behaviour or not. Christian said it that’s
intended, for URL parameters/arguments I need to use
&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_connection_values()&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;kind=MHD_GET_ARGUMENT_KIND&lt;/code&gt; to inspect
them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3rd-week&quot;&gt;3rd Week&lt;/h3&gt;

&lt;p&gt;Based on feedback from mentors on the previous week, I made some fixes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove initial process for HTTP server socket.&lt;/li&gt;
  &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server_start()&lt;/code&gt; function, wrapper for Libmicrohttpd. There is
also function &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; which use to create proper HTTP
response.&lt;/li&gt;
  &lt;li&gt;Use select method &lt;code class=&quot;highlighter-rouge&quot;&gt;(MHD_USE_SELECT_INTERNALLY)&lt;/code&gt; for threading model in
Libmicrohttpd to get better compatibility.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_port&lt;/code&gt; seized automatically using Libmicrohttpd function by
passing &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_LISTEN_FD&lt;/code&gt; parameter
to &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Using iteration to parse urls data in &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt;. This
guarantee we can pass any variadic data to Libmicrohttpd and prevent
segmentation fault.&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; function to create proper HTTP response (to deal
with parameters and arguments on url, to add proper HTTP headers).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4th-week&quot;&gt;4th Week&lt;/h3&gt;

&lt;p&gt;Finally it comes to the end of the first period. I report to mentors what I’ve
done in this week.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I have finished modify configure.ac to include Libmicrohttpd into Wget2.&lt;/li&gt;
  &lt;li&gt;I have ensured that all make check passed on several testing machine
including: Debian/GCC, Fedora/Clang, MingW64 and OSX.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Started working on &lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;. Workflow to resolve this:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Remove initial process for HTTP server socket.&lt;/li&gt;
      &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;_http_server_start()&lt;/code&gt; function, wrapper for Libmicrohttpd. There is
also function &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; which use to create proper HTTP
response.&lt;/li&gt;
      &lt;li&gt;Use select method (&lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_USE_SELECT_INTERNALLY&lt;/code&gt;) for threading model in
Libmicrohttpd to get better compatibility.&lt;/li&gt;
      &lt;li&gt;http_server_port seized automatically using Libmicrohttpd function by
passing &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_BIND_PORT&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_DAEMON_INFO_LISTEN_FD&lt;/code&gt; parameter
to &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_get_daemon_info()&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Using iteration to parse urls data in &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt;. This
guarantee we can pass any variadic data to Libmicrohttpd and prevent
segmentation fault.&lt;/li&gt;
      &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;answer_to_connection()&lt;/code&gt; function to create proper HTTP response (to deal
with parameters and arguments on url, to add proper HTTP headers).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I must ensure that all test suite running correctly. To give better
visualization, I’ve created spreadsheet about summary of test file which use
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_test_start_server()&lt;/code&gt;. Currently, as far as I know, it reaches 87.5% (28
of 32). I need to complete all test suite reach 100%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After I send it to the mailing list, I have got many feedback from my mentors
for this report.&lt;/p&gt;

&lt;p&gt;When Darshit trying to check my code, he has noticed that I was working only
on a single branch and have only one commit until the date. This much work is
not enough for the mid semester evaluation. He asks me to split my work into
smaller commits which are discrete units of work. I follow up this with breaking
down my previous one big commit into smaller ones so it could represent my work
in period of time.&lt;br /&gt;
About the commit style, he gave me a clear clue. My commit messages are pretty
hard to read. Also, he asks to maintain the standard style of commit messages.
At Wget, the commit messages are converted into a ChangeLog, hence my message
should be written in that format.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit

Commit Message title (60 chars)
[Blank Line]
* file_changed(function_name): Description of change
* file_changed(function_name): Description of change

Any other details I want to write
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The commit messages I have written are actually fine, but when it exceeds 60 chars in
the first line, I should convert my message to the longer format he just
described.&lt;br /&gt;
Another thing, he asks to not force push to my (&lt;em&gt;master&lt;/em&gt;) branches. There are
other people that pull from these branches to check in on the code. If I force
push, it messes the repository up for all. Force pushing should only be reserved
as a last resort. However, in this case, when I rewrite the commit messages, I
should force push to my own current branch. That will allow me to maintain that
branch later.&lt;br /&gt;
The CI system states failures. He asks whether this is an expected failures. I
said that it not intended to be failure. On my machine which use Ubuntu/GCC, I
can run &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt;, and some test could pass. Same like on Gitlab CI that use
Debian/GCC. Based on CI artifacts, most of them failed on &lt;code class=&quot;highlighter-rouge&quot;&gt;make check-valgrind&lt;/code&gt;
that I miss to check before. I still find out how to deal with this memory leak
error. Actually, I still stuck in this. Then I ask, how to debug using Valgrind.
I read the error logs and it still it pointed me out of nowhere. He said that I
really should discuss these issues with them more. That is exactly why they are
here to mentor me. Valgrind’s memcheck tool which is what is being used in the
&lt;code class=&quot;highlighter-rouge&quot;&gt;make check-valgrind&lt;/code&gt; is a memory leak checker. He will look a little into it
once he can get the basic tests running on his machine. I asked to be focus on
that first. He said we will look into the memory leaks in a while. Most probably
the leaks happen because either I lost the pointer to some allocated memory or
are using the libmicrohttpd API wrong and forgot to &lt;code class=&quot;highlighter-rouge&quot;&gt;free()&lt;/code&gt; some data structure
returned by it.&lt;br /&gt;
He also sees that ./configure always tries to link Libmicrohttpd. But Wget2
should not depend on that. It should try to add the linker flags &lt;em&gt;only&lt;/em&gt; when
trying to compile the test suite. The Wget2 binary should not use that flag. I
realize that was there are flaws in my code. I will figure out after some work
against other test files.&lt;br /&gt;
On his local system, not a single test passes. &lt;code class=&quot;highlighter-rouge&quot;&gt;make check -j$(nproc)&lt;/code&gt; causes a
segmentation fault and a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt; gets stuck on test-wget-1 and never
progresses ahead. He asks me to fix the branch and/or provide them with
information on how to make the tests work. I look at CI system with Fedora/Clang
and indeed the result is all segmentation faults. I still have no clue about
that. With this case, I cannot claim that I have almost 85% tests passing
already. From his perspective, it is still 0%.&lt;br /&gt;
In fact, all the tests that my spread sheet marks are passes, end up causing a
segfault on his system. This seems to stem from the fact that the
&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_tid&lt;/code&gt; is stored as “0” and I try to call &lt;code class=&quot;highlighter-rouge&quot;&gt;pthread_cancel&lt;/code&gt; on that
value. I asks for more detail information about this. I have use some advice
from Evgeny Grin how to deal with dynamic port. Even when I use hard coded port,
the result is still the same. He explains that he don’t think this is connected
to the port number at all. If it is, then my variable naming scheme requires a
serious change. This issue is happening because I have never stored the tid of
the server in the variable, but I still try to cancel that thread id. After I
take a look on my code again, I realize something wrong. Darshit was right. That
segmentation fault error happened because I forgot to remove
&lt;code class=&quot;highlighter-rouge&quot;&gt;wget_thread_cancel&lt;/code&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;http_server_tid&lt;/code&gt;) which is used by the old code at server
termination time. After I remove that line, the CI runner of Fedora/Clang
passes some tests, not all test were resulted segmentation fault (14 of 32
pass, while 4 skipped). The other fail because likely Valgrind check error.&lt;br /&gt;
Darshit asks me to make sure that my code works as I have mentioned at least one day
before the deadline for the evaluations. On my Week 3 report I planned to get
100% of passing all of the test suite. But, until Week 4, my job still not yet
all done (even excluding other error generated outside &lt;code class=&quot;highlighter-rouge&quot;&gt;make check&lt;/code&gt; on
Debian/GCC system). I realized I have missed my (personal) target. Hence, he
asks me where do I think I missed out which caused me to fall behind. In
hindsight, he asks what according to me could have been done better. So, I and
they should be look into this together to see where it can be improved. He asks
what topics were I most stuck on, and why did it take me so much time. Also, if
I stuck on any single point for more than a day, he asks to send they a message.
There is a very good chance that they might be able to help me out and fix it
much faster.&lt;br /&gt;
Darshit sends a message to both Libmicrohttpd maintainers, Christian and Evgeny:
that the issues in Valgrind seem to come from within Libmicrohttpd. One of the
blocks reported by Valgrind is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=26290== 72 bytes in 3 blocks are still reachable in loss record 6 of 6
==26290==    at 0x4C2BEEF: malloc (in
/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26290==    by 0x7E06608: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7E077FB: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7EBEFB1: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7EBF02F: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7E0655F: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x7E06764: ??? (in /usr/lib/libgcrypt.so.20.1.7)
==26290==    by 0x6634CF8: ??? (in /usr/lib/libmicrohttpd.so.12.43.0)
==26290==    by 0x400F339: call_init.part.0 (in /usr/lib/[1]ld-2.25.so)
==26290==    by 0x400F445: _dl_init (in /usr/lib/[2]ld-2.25.so)
==26290==    by 0x4000D39: ??? (in /usr/lib/[3]ld-2.25.so)
==26290==    by 0x9: ???
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, he guess is that this is some memory that is being allocated by Libmicrohttpd.
The test code does indeed seem to call &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_stop_daemon()&lt;/code&gt; which should
ideally ensure a clean exit. He asks, where did the implementation go wrong.&lt;br /&gt;
Christian said this is a bit hard to evaluate without the debug symbols. Most
likely it would be a false-positive from a globally allocated buffer of
Libgcrypt’s initialization sequence. He asks to download and install debug
symbols for Libgcrypt and ideally Libmicrohttpd. It is unlikely to be
Libmicrohttpd fault, as except for responses there are no Libmicrohttpd buffers
my code would have to free.&lt;br /&gt;
Evgeny gives a review about my works, direct pointed to the code.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_scan_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He asks why do I use underscore as prefix for functions. Usually it is used by
libraries to avoid name conflict. First, I think that I need to remove the
underscore, then Tim also give comment that this is also useful in projects
where there is more than one C file. They use it to make clear that a
function/variable is static (not consequently everywhere, though). So, I
still keep the underscore.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_parse_hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wget_strncasecmp_ascii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

              &lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strdup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He asks me about the reason for using &lt;code class=&quot;highlighter-rouge&quot;&gt;strdup()&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;free()&lt;/code&gt;. I checked string
twice (by &lt;code class=&quot;highlighter-rouge&quot;&gt;strchr()&lt;/code&gt; and by my custom iterations). It just waste of CPU time.
He gives simpler implementation:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I applied the changes to my code.&lt;br /&gt;
Evgeny also give note that according to current HTTP specification ‘+’ must NOT be
used as replacement for ‘ ’ in URLs. When I learn about this problem, it
leads me to here [2]. Then if it need to be applied, I need to modify test
file: test-base.c to not use ‘+’, and use %2B instead.&lt;br /&gt;
Tim added that the ‘+’ was always just for the query part. He asks to Evgeny
what document are you exactly referring to to. Not that he is against dropping
the ‘+’ rule, but what consortium is not accepted as normative by everyone,
while IETF is. He is unsure about what ‘spec’ to follow. So, I keep my changes
of ‘+’.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_out_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_ValueKind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                              &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evgeny said that we are not allowed to modify any content pointed by pointer to
const. By dropping ‘const’ qualifiers are violating API. In other words: I was
modifying internal structures that are not expected to be modified and the
result is unpredictable. I fixed them then.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;_replace_space_with_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He also gives me some questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is &lt;code class=&quot;highlighter-rouge&quot;&gt;url_arg&lt;/code&gt; a global variable?&lt;/li&gt;
  &lt;li&gt;Do I use single thread only?&lt;/li&gt;
  &lt;li&gt;Why not to pass pointer to &lt;code class=&quot;highlighter-rouge&quot;&gt;url_arg&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;cls&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;What about &lt;code class=&quot;highlighter-rouge&quot;&gt;url_it&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;url_it2&lt;/code&gt;? It is hard to guess meaning from name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I need to pass all of them, I was advised to define some structure with three
pointers and pass pointer to structure.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;answer_to_connection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_Connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_data_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;con_cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_Response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;MHD_get_connection_values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_GET_ARGUMENT_KIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_out_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;wget_buffer_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;url_it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_it2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nurls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_scan_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_parse_hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;wget_buffer_strcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;n&quot;&gt;wget_buffer_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_buffer_alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;wget_buffer_strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;MHD_http_unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;302 Redirect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_create_response_from_buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;302 Redirect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;302 Redirect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_RESPMEM_PERSISTENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                              &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
                              &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wget_strmemdup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;MHD_add_response_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_queue_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_HTTP_FOUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;wget_xfree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nurls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nurls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iri_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_create_response_from_buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MHD_RESPMEM_PERSISTENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;He asks me again to ensure that content of &lt;code class=&quot;highlighter-rouge&quot;&gt;urls[itt].body&lt;/code&gt; will be valid until
end of this connection. Otherwise you must use &lt;code class=&quot;highlighter-rouge&quot;&gt;MHD_RESPMEM_MUST_COPY&lt;/code&gt; as last
parameter. I followed his advice and fix my code.&lt;/p&gt;

&lt;p&gt;Two generic advises he gave to me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Avoid using global variables.&lt;/li&gt;
  &lt;li&gt;Use better names for variables. It it hard to understand what mean
&lt;code class=&quot;highlighter-rouge&quot;&gt;iri_url&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;itt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;itt2&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;first-period-evaluations&quot;&gt;First Period Evaluations&lt;/h3&gt;

&lt;p&gt;After finish my 4th period report, I also must complete first evaluation report
via GSoC web app. I passed the evaluations, but with warning. Mentors give me an
important messages about what happened and what should I improve.&lt;br /&gt;
The project is indeed behind schedule. The mentors still give me a chance by passing
me in the hopes that I and they will be able to improve the communication and
get the project back on track. One major suggestion is that I increase the
frequency of my project reports from weekly to daily. Just a single line at the
end of each day stating what I have done and what are my plans for the next
day.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That was though days with my first time period of GSoC. There was many jobs left
to be finished in the next period. Mistakes happen, but I was learn a lot from
them.&lt;/p&gt;

&lt;p&gt;Reference(s):&lt;br /&gt;
[0] &lt;a href=&quot;https://github.com/rockdaboot/wget2/pull/155&quot;&gt;https://github.com/rockdaboot/wget2/pull/155&lt;/a&gt;&lt;br /&gt;
[1] &lt;a href=&quot;https://lists.gnu.org/archive/html/bug-wget/2017-03/msg00156.html&quot;&gt;https://lists.gnu.org/archive/html/bug-wget/2017-03/msg00156.html&lt;/a&gt;&lt;br /&gt;
[2] &lt;a href=&quot;https://stackoverflow.com/questions/1005676/urls-and-plus-signs&quot;&gt;https://stackoverflow.com/questions/1005676/urls-and-plus-signs&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Mar 2018 03:21:00 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2018/03/07/gsoc-with-gnu-wget2-part-i/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2018/03/07/gsoc-with-gnu-wget2-part-i/</guid>
        
        
        <category>open_source</category>
        
        <category>programming</category>
        
        <category>collaboration</category>
        
        <category>gsoc</category>
        
      </item>
    
      <item>
        <title>Workflow on Contributing to Open Source Project</title>
        <description>&lt;p&gt;In the open source world, different project comes with different workflow, using
different medium. For instance, Linux Kernel development, use mailing list to
gather patches for many developer around the world. The maintainer pick
patches from developer with careful supervision. Then, they maintain release of
the stable version, while Linus Torvalds himself maintain the mainline stream.&lt;br /&gt;
Other project, Git – a revision control system. It use same model as Linux
Kernel, patches and conversations go to mailing list. With additional part, for
the Continuous Integration system, it is recommended to use Github and Travis
CI. Although they will reject all pull request from there.&lt;br /&gt;
Another example, Wget2 used Github mainly to perform collaboration (Because GNU
not allowed their project to use Github, their move it to Gitlab [0]). Issues are
discussed here. Pull request also getting merged here. Although, it also have
mailing list to discuss issues and problems.&lt;br /&gt;
Here I share my experience how I contribute to open source, so my code could be
merged in the project upstream. For an example, I will write several steps of
my way doing Wget2 project for my GSoC 2017 application. Below are some points I
follow:&lt;/p&gt;

&lt;h3 id=&quot;obtain-source-code&quot;&gt;Obtain Source Code&lt;/h3&gt;

&lt;p&gt;Startup procedures:&lt;/p&gt;

&lt;p&gt;Fork project so you can modify yourself via Gitlab interface.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://gitlab.com/dstw/wget2
git remote add upstream https://dstw@gitlab.com/gnuwget/wget2.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create an own branch for each ‘task’ you are working on and make your commits
within it. When done, sync with upstream, rebase/merge and create your patches
via format-patch.&lt;/p&gt;

&lt;p&gt;Do not make changes to your branch ‘master’ - this should always reflect the
original repo. This makes it easy for you to update your ‘master’ branch with
changes from the ‘original/upstream’ master branch on Savannah.&lt;/p&gt;

&lt;p&gt;Sync your Gitlab repo with upstream:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout master
git fetch upstream
git merge upstream/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sync your ‘new-feature’ branch before generating patches:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout new-feature
git rebase master
git push -f  # pushing updated tree to your Gitlab new-feature branch)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assume ‘new-feature’ is a private branch where you can do all the dirty things
that you shouldn’t on public/shared branches. As soon as your patch has been
accepted, remove the branch ‘new-feature’ locally and from Gitlab.&lt;/p&gt;

&lt;h3 id=&quot;build-the-executables&quot;&gt;Build the Executables&lt;/h3&gt;

&lt;p&gt;As prerequisite, install all mandatory software as listed in README.md.&lt;/p&gt;

&lt;h3 id=&quot;find-the-problems&quot;&gt;Find the Problems&lt;/h3&gt;

&lt;p&gt;I usually look at Wget2 Gitlab issues pages to find issues and problems which
appropriate to newcomer like me.&lt;/p&gt;

&lt;h3 id=&quot;make-changes-to-the-code&quot;&gt;Make Changes to the Code&lt;/h3&gt;

&lt;p&gt;In this part, my knowledge in coding skill are truly challenged. Wget2 use C as
its programming language. In my case, I just add some test based on requirements
and of course with help from other contributors.&lt;/p&gt;

&lt;h3 id=&quot;create-pullmerge-request&quot;&gt;Create Pull/Merge Request&lt;/h3&gt;

&lt;p&gt;After I feel my code ready to merge, I push my commit to upstream and make a
pull request from Gitlab interface.&lt;/p&gt;

&lt;h3 id=&quot;wait-for-review&quot;&gt;Wait for Review&lt;/h3&gt;

&lt;p&gt;After create a merge request, I wait for feedback, criticism, suggestions, etc.
from other developer.&lt;br /&gt;
Respond to it! and follow up with improved versions of your change. Even for a
trivial patch you shouldn’t be surprised if it takes two or more iterations
before your patch is accepted. This is the best part of participating in the Git
community; it is your chance to get personalized instruction from very
experienced peers!&lt;/p&gt;

&lt;h3 id=&quot;propose-new-change&quot;&gt;Propose New Change&lt;/h3&gt;

&lt;p&gt;After getting a review, do some improvement. After all, make a new commit. Here,
there is option to overwrite my existing commits or create new merge commits to
keep history.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin new-feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If there is a conflict, Git will ask me to resolve the problem this. Then, try
to push and merge commits. This won’t remove any existing commits. And if I
don’t want to keep any commits history, I usually force to push:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push -f origin new-feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;del&gt;This is considered a little bit harmful. Before I do this, I will make sure
that I know what I do. Also, forcing commits is should only do if it believed to
final commits or at least near final, I should not do any more change to it.&lt;/del&gt; 
Just make sure that I don’t force push to the &lt;strong&gt;master&lt;/strong&gt; branch of the project,
otherwise, is safe.&lt;/p&gt;

&lt;p&gt;Finally, after some iteration, if project maintainer agree with my changes, then
they will merge it into their repository. If not, I should be take a look on my
proposed changes more carefully, what could be wrong and what should be fixed.
And the best of it all, I could learn a lot from the process.&lt;/p&gt;

&lt;p&gt;References:&lt;br /&gt;
[0] (http://lists.gnu.org/archive/html/bug-wget/2017-04/msg00052.html)&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Apr 2017 13:43:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2017/04/08/workflow-on-contributing-to-open-source/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2017/04/08/workflow-on-contributing-to-open-source/</guid>
        
        
        <category>open_source</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Google Summer of Code Preparation</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;GSoC (Google Summer of Code), a program where university students spend their
3 month summer break coding on an open source project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That time finally comes. After almost one year I have been lurking, observing,
it’s time to decide whether I will participate or not. It’s not easy
to find organization who fit with who I am. But anyway, this year, I will try.&lt;br /&gt;
Despite administrative prerequisite, such as proof of enrollment, there are some
technical stuff involving coding activities we need to do, which is fun.
This is a list of what I’ve done so far in order to be considered as good
candidate:&lt;/p&gt;

&lt;h3 id=&quot;pick-a-project-with-programming-language-that-i-passionate-about&quot;&gt;Pick a project with programming language that I passionate about&lt;/h3&gt;

&lt;p&gt;There is a word “code” in Google Summer of Code, meaning programming will be my main
activity in this program. So, I must find which project that has programming
language, that I familiar with. This is to avoid, I will stuck about the tasks
that will assigned to me as a program applicant.&lt;br /&gt;
Actually, it can be done even long ago before the program being announced. I can
look at the GSoC archive. But, sometimes term will change as the organization
announced. Some organization will participate again, while others not. So, for
me it better to prepare after the program announced officially.&lt;br /&gt;
From there, I can see which project fit with my programming language, one that I
love. So, after some effort of filtering and analyzing, then I choose an
appropriate project, I will not find a big technical barrier to pass this program.&lt;/p&gt;

&lt;h3 id=&quot;pick-a-project-that-fit-with-my-knowledge&quot;&gt;Pick a project that fit with my knowledge&lt;/h3&gt;

&lt;p&gt;This means, I must look at the project task. With given time frame, which about
just 3 month, does it sound realistic that I will finish my task? That it’s, be
realistic is the key. Measure the difficulty of the task. When I face something
very unfamiliar and need more time to learn, I prefer to skip this. Because I
don’t want to spend my time in things that I less understand.&lt;br /&gt;
For example, this year, I choose project from GNU Wget that use C as their
programming language base, which currently I am familiar with. And for the task,
I pick idea of “Improvement of test suite using Libmicrohttpd”.&lt;/p&gt;

&lt;h3 id=&quot;get-enganged-with-community&quot;&gt;Get enganged with community&lt;/h3&gt;

&lt;p&gt;After I found the project that I want to apply, I must introduce myself to the
community. This is important step I must do. Because without it, mentor cannot
help me when I face difficulty.&lt;br /&gt;
Find the place where they collaborate. There are some choice like mailing list,
slack, gitter, irc, etc. GNU Wget use mailing list as they medium to
communicate between developer. I send welcome message there, and replied kindly
by other members.
Follow their rules. Basically, there are some rules to be obeyed:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Use plain English. GSoC is global program and use English as it language for
communication. So, I need to use English in my conversation.&lt;/li&gt;
  &lt;li&gt;Not to send message directly to the mentor or other person in the community.
This is considered to be rude. Instead, I will use mailing list if I need to
send a message.&lt;/li&gt;
  &lt;li&gt;Avoid top post when I reply an email.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;learn-their-environment-workflow-and-code-base&quot;&gt;Learn their environment, workflow and code base&lt;/h3&gt;

&lt;p&gt;After I “Say Hi!” to the organization, now it’s time to dive into their code.
Find the repository. In Wget, their main repositories are hosted in Savannah,
Github and Gitlab. So, I clone the repo and then build the software from source.&lt;br /&gt;
I have successfully built Wget from source. Then I try to trace what the program
do using gdb, to take a look what is going on inside its process.&lt;br /&gt;
I familiarize my self with git, because Wget use git as its version control
system. Also the project uses Github to consolidate patches, open issue, write
wiki, etc. I try to hanging around on there. It fancy design keep me comfort
with environment and workflow of the project.&lt;/p&gt;

&lt;h3 id=&quot;submit-a-patch-event-with-a-trivial-one&quot;&gt;Submit a patch, event with a trivial one&lt;/h3&gt;

&lt;p&gt;This patching section required quite technical skill. For newcomer like me, I
feel a bit confuse about what patch I can submit. Then, with guide from my
mentor, I was given an idea what simple task can be submitted. I pick an easy
one. A testing unit. Because, he mention, that Wget unit testing is still far
from perfect. I will take it for my chance. I try to add a function to reach
more coverage in the project unit test.&lt;br /&gt;
In order to merged into upstream, I need to make pull request on that project.
To be honest, it is my first time pull request in a real open source project.
Of course my patch will not merged automatically to the upstream. Mentor and the
community members will review first before it can be accepted. And after several
step, edit code, re-push commit with guide from my mentor and other contributors
that help me, finally my patch get merged on the upstream. It’s a nice feeling
for a rookie developer can have.&lt;/p&gt;

&lt;h3 id=&quot;write-a-good-proposal&quot;&gt;Write a good proposal&lt;/h3&gt;

&lt;p&gt;After all, to be accepted in the GSoC program itself, I need to upload a
proposal. The proposal must be good enough to be considered accepted as GSoC
candidate. I pick the idea from list project that mentioned in project website.
I create a draft from this and share to other members. I receive a lot of
feedback. Thanks for who was concerned, so I can make improvements to my
proposal. After I feel it ready, I upload my final proposal to GSoC official.
And because the time between the date of proposal submit and the announcement of
accepted applicant is a month long, I will use it to get more familiar with
project code base.&lt;/p&gt;

&lt;p&gt;That was my short list for what I do in order to be accepted to GSoC 2017. I
hope this article will help provide an overview of what preparations need to be
done so you can participate in GSoC. Good luck!&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Apr 2017 12:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2017/04/05/google-summer-of-code-preparation/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2017/04/05/google-summer-of-code-preparation/</guid>
        
        
        <category>open_source</category>
        
        <category>collaboration</category>
        
        <category>programming</category>
        
        <category>gsoc</category>
        
      </item>
    
      <item>
        <title>Convert Text to Pdf on Linux</title>
        <description>&lt;p&gt;Background: failed to build linux kernel documentation (still too lazy to solve
problems).&lt;br /&gt;
Goal: generate pdf files of linux documentation, because I have reading problem
when using text files. Text files look ugly when I open using my reader
(Android).&lt;/p&gt;

&lt;p&gt;Install needed packages.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;enscript ps2pdf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Do this simple tricks.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Documentation/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enscript &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;.ps &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ps&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ps2pdf &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now I have pdf files of all the text files.&lt;br /&gt;
It still have a problem, it just convert files on the same directory. So other
files under this directory must be processed separately, which mean I must move
to each directory.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Sep 2016 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/09/02/convert-text-to-pdf-on-linux/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/09/02/convert-text-to-pdf-on-linux/</guid>
        
        
        <category>linux</category>
        
        <category>documentation</category>
        
        <category>text</category>
        
      </item>
    
      <item>
        <title>My Vim Configuration</title>
        <description>&lt;p&gt;This is my Vim configuration a.k.a .vimrc. You can download the file from
&lt;a href=&quot;https://github.com/dstw/dotfiles/raw/master/.vimrc&quot;&gt;here&lt;/a&gt;.
Feel free to use and customize.&lt;/p&gt;

&lt;p&gt;Below are some description of its contents:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Use vim settings instead of vi&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nocompatible &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;No backup or swap&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nobackup nowritebackup &lt;span class=&quot;k&quot;&gt;noswapfile&lt;/span&gt; autoread          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Enable per-directory .vimrc files&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; exrc                                                &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Don’t unload buffer when switching away&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; hidden                                              &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Allow per-file settings via modeline&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; modeline                                            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Disable unsafe commands in local .vimrc files&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; secure                                              &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Saving and encoding&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; encoding&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt; fileencoding&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt; termencoding&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Command completion&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; wildmenu                                            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Allow backspacing over everything in insert mode&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; backspace&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;indent&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;eol&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;start&lt;/span&gt;                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Display status line which contains current mode, file name, file status,
ruler, etc.&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; laststatus&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Always set autoindenting on&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; autoindent                                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Display incomplete commands&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; showcmd                                             &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Keep upto 50 lines of command line history&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;                                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show a vertical line at the 79th character&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; textwidth&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Highlight column after ‘textwidth’&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; colorcolumn&lt;span class=&quot;p&quot;&gt;=+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;                                      &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Switch syntax highlighting on&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;syntax &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;                                               &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Switch highlighting on the last used search pattern&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; hlsearch incsearch ignorecase smartcase             &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Don’t hide the mouse cursor while typing&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nomousehide                                         &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Right-click pops up contect menu&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; mousemodel&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;popup&lt;/span&gt;                                    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show cursor position in status bar&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; ruler                                               &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show line numbers on left&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;number&lt;/span&gt;                                              &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Disable code folding&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; nofoldenable                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Scroll the window so we can always see 10 lines around the cursor&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; scrolloff&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Kernel coding style&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; tabstop&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;                                           
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; softtabstop&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;                                       
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; shiftwidth&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;                                        
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; noexpandtab                                         &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Enable file type detection&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;filetype&lt;/span&gt; plugin indent &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;                               &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Shortcut to search visually selected text&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;vnoremap &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;y&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;R&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&quot;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Check if running on gvim&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; has&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gui_running&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Set terminal color to 256&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; t_Co&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;256&lt;/span&gt;                                          &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Check if using Windows&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; has&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;win32&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; has&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;win16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                       &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Set Ubuntu Mono font with size 11&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; guifont&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;Ubuntu\ Mono&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;h11                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Use solarized colorscheme&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;colorscheme&lt;/span&gt; solarized                                 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Set the background to dark color&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; background&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dark&lt;/span&gt;                                   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Highlight the current line&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; cursorline                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Use letter as the print output format&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; printoptions&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;paper&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;letter                         &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I use Ubuntu font which can be download from
&lt;a href=&quot;http://font.ubuntu.com/&quot;&gt;font.ubuntu.com&lt;/a&gt;.
To enable solarized colorscheme, download file solarized.vim from
https://github.com/altercation/vim-colors-solarized/.
If you want to look my personal vim configuration, you can find it
&lt;a href=&quot;https://github.com/dstw/dotfiles&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I use this configuration in my Linux workstation and server.
I use exclusively for editing
linux kernel and other open source projects. For daily programming use, you can
change the value of tabstop, softtabstop and shiftwidth.&lt;br /&gt;
Happy Vimming!&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jun 2016 15:08:57 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/03/my-vim-configuration/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/03/my-vim-configuration/</guid>
        
        
        <category>text_editor</category>
        
        <category>vim</category>
        
      </item>
    
      <item>
        <title>Vim Quick Reference</title>
        <description>&lt;p&gt;For unfimiliar user, vim is a little bit confusing at first. But,
after you try it several times and configure properly, you will found this text
editor is very powerful.&lt;br /&gt;
Here I will note several subject how to use vim, because sometimes navigate to
vim help is quite difficult.&lt;/p&gt;

&lt;p&gt;Vim is modal editor which means you use different mode to edit text. Some
important mode you will use very often are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Normal Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can enter any command using &lt;code&gt;:&lt;/code&gt; or search using &lt;code&gt;/&lt;/code&gt;
and &lt;code&gt;?&lt;/code&gt;. Press &lt;code&gt;Esc&lt;/code&gt; to enter this mode.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Insert Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Text you type is inserted into the buffer. Press &lt;code&gt;i&lt;/code&gt; to enter this
mode.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this mode, you can select the text we want in order to copy, cut or delete.
Press &lt;code&gt;v&lt;/code&gt; to enter this mode. The cursor position will be starting
point to your selection.&lt;/p&gt;

&lt;h3 id=&quot;navigation&quot;&gt;Navigation&lt;/h3&gt;

&lt;p&gt;You can move through the buffer with the following key:&lt;/p&gt;

&lt;p&gt;Move left &lt;code&gt;h&lt;/code&gt; &lt;br /&gt;
Move right &lt;code&gt;l&lt;/code&gt; &lt;br /&gt;
Move up &lt;code&gt;k&lt;/code&gt; &lt;br /&gt;
Move down &lt;code&gt;j&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Using this key will make your navigation faster than using arrow keys or mouse.&lt;/p&gt;

&lt;p&gt;Move one word &lt;code&gt;w&lt;/code&gt;&lt;br /&gt;
Move one word backwards &lt;code&gt;b&lt;/code&gt;&lt;br /&gt;
Move to end of line &lt;code&gt;$&lt;/code&gt;&lt;br /&gt;
Move to beginning of line &lt;code&gt;0&lt;/code&gt;&lt;br /&gt;
Insert text &lt;code&gt;i&lt;/code&gt;&lt;br /&gt;
Insert text at the end of line &lt;code&gt;A&lt;/code&gt;&lt;br /&gt;
Insert text at the beginning of line &lt;code&gt;I&lt;/code&gt;&lt;br /&gt;
Insert text above line &lt;code&gt;O&lt;/code&gt;&lt;br /&gt;
Insert text below line &lt;code&gt;o&lt;/code&gt;&lt;br /&gt;
Replace one character &lt;code&gt;r&lt;/code&gt;&lt;br /&gt;
Replace character consecutively &lt;code&gt;R&lt;/code&gt; (enter “replace mode”)&lt;/p&gt;

&lt;p&gt;Page navigation:&lt;/p&gt;

&lt;p&gt;Move page down &lt;code&gt;ctrl + f&lt;/code&gt;&lt;br /&gt;
Move page up &lt;code&gt;ctrl + b&lt;/code&gt;&lt;br /&gt;
Move page half down &lt;code&gt;ctrl + d&lt;/code&gt;&lt;br /&gt;
Move page half up &lt;code&gt;ctrl + u&lt;/code&gt;&lt;br /&gt;
Move top &lt;code&gt;gg&lt;/code&gt;&lt;br /&gt;
Move bottom &lt;code&gt;G&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Navigate through command history &lt;code&gt;q:&lt;/code&gt;
Navigate through search history &lt;code&gt;q/&lt;/code&gt;
Then you can select command or search result with navigation key. To execute
command, press &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;open-and-save-file&quot;&gt;Open and Save File&lt;/h3&gt;

&lt;p&gt;Open file &lt;code&gt;:e filename&lt;/code&gt;&lt;br /&gt;
Save file &lt;code&gt;:w&lt;/code&gt;&lt;br /&gt;
Saveas file &lt;code&gt;:w filename&lt;/code&gt;&lt;br /&gt;
Quit &lt;code&gt;:q&lt;/code&gt;&lt;br /&gt;
Quit without save&lt;code&gt;:q!&lt;/code&gt;&lt;br /&gt;
Save file and quit&lt;code&gt;:wq&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;undo-and-redo&quot;&gt;Undo and Redo&lt;/h3&gt;

&lt;p&gt;Undo &lt;code&gt;u&lt;/code&gt;&lt;br /&gt;
Redo &lt;code&gt;ctrl + r&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;visual-selection&quot;&gt;Visual Selection&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;v&lt;/code&gt; on text you want to select. You will enter visual mode.
Navigate using &lt;code&gt;hjkl&lt;/code&gt; key. Then we can do other action such as copy,
cut or delete.&lt;/p&gt;

&lt;h3 id=&quot;copy-and-paste-text&quot;&gt;Copy and Paste Text&lt;/h3&gt;

&lt;p&gt;After you select a text, you can do following action:&lt;/p&gt;

&lt;p&gt;Copy &lt;code&gt;y&lt;/code&gt;&lt;br /&gt;
Cut/Delete &lt;code&gt;d&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt;&lt;br /&gt;
Copy entire line &lt;code&gt;yy&lt;/code&gt;&lt;br /&gt;
Cut entire line &lt;code&gt;dd&lt;/code&gt;&lt;br /&gt;
Paste &lt;code&gt;p&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;search-and-replace-text&quot;&gt;Search and Replace Text&lt;/h3&gt;

&lt;p&gt;Find text &lt;code&gt;/query&lt;/code&gt;&lt;br /&gt;
Find text upwards &lt;code&gt;?query&lt;/code&gt;&lt;br /&gt;
Navigate between search results &lt;code&gt;n&lt;/code&gt; to move forward and
&lt;code&gt;N&lt;/code&gt; to move backwards&lt;/p&gt;

&lt;p&gt;Find text using visually selected text, firstly add this line to vimrc file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vnoremap // y/&amp;lt;C-R&amp;gt;&quot;&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then select text in visual mode and press &lt;code&gt;//&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Replace text &lt;code&gt;:%s/old/new/g&lt;/code&gt;&lt;br /&gt;
Replace all &lt;code&gt;:%s/old/new/gc&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;word-completion&quot;&gt;Word Completion&lt;/h3&gt;

&lt;p&gt;You can autocomplete text with several method to get different result:&lt;/p&gt;

&lt;p&gt;Search text before cursor &lt;code&gt;ctrl + p&lt;/code&gt;&lt;br /&gt;
Search text after cursor &lt;code&gt;ctrl + n&lt;/code&gt;&lt;br /&gt;
Search for filename complete with its path &lt;code&gt;ctrl + x&lt;/code&gt;
&lt;code&gt;ctrl + f&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;multi-window-editing&quot;&gt;Multi Window Editing&lt;/h3&gt;

&lt;p&gt;Open new window &lt;code&gt;:new&lt;/code&gt;&lt;br /&gt;
Open new vertical window &lt;code&gt;:vnew&lt;/code&gt;&lt;br /&gt;
Move through window &lt;code&gt;ctrl + w&lt;/code&gt;&lt;code&gt;w&lt;/code&gt;&lt;br /&gt;
Swap window position &lt;code&gt;ctrl + w&lt;/code&gt;&lt;code&gt;r&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;compare-buffer&quot;&gt;Compare Buffer&lt;/h3&gt;

&lt;p&gt;If you have two split windows containing buffers that you want to compare, then
you can diff them by running &lt;code&gt;:windo diffthis&lt;/code&gt;&lt;br /&gt;
You can turn diff mode off just as easily, by running &lt;code&gt;:windo diffoff
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s how I use vim in daily life.
For my personal preference, I have modified my vimrc which you can find 
&lt;a href=&quot;/blog/2016/06/03/my-vim-configuration&quot;&gt;here&lt;/a&gt;.
Thanks for reading.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/02/vim-quick-reference/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/02/vim-quick-reference/</guid>
        
        
        <category>text_editor</category>
        
        <category>vim</category>
        
      </item>
    
      <item>
        <title>Octopress Setup and Deployment</title>
        <description>&lt;p&gt;I will explain how to setup a new blog using octopress, deploy it on github and
contribute from other place. Let’s check this out.&lt;/p&gt;

&lt;h3 id=&quot;first-time-setup&quot;&gt;First Time Setup&lt;/h3&gt;

&lt;p&gt;Prerequisite:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install Git and Node.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On debian system, use apt-get.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nodejs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Install Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We must use version 1.9.3 or higher. To ensure we fulfill this requirement, I
prefer to install ruby from source. Download from
&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby official site&lt;/a&gt;. The installation
process is quite common.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf ruby-2.3.1.tar.gz 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ruby-2.3.1/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./configure
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Install ExecJS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To run JavaScript code from Ruby.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;execjs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Configure bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another octopress dependency.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After all needed requirements fulfilled, then grab the octopress source code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/imathis/octopress.git octopress
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;octopress&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;One more dependency:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then install octopress default theme.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setup process is finished. We can now start to blog using rake newpost[“title”], 
customize _config.yml, add some pages, customize 404 not found page, using
custom domain name and so on.&lt;/p&gt;

&lt;h3 id=&quot;deploy-on-github&quot;&gt;Deploy on Github&lt;/h3&gt;

&lt;p&gt;There are some way to deploy octopress, either using rsync or git. In this
post, I will explain how to deploy octopress on Github.
Create a new Github repository and name the repository with the format
username.github.io, where username is your GitHub username or organization name.&lt;/p&gt;

&lt;p&gt;Github Pages for users and organizations uses the master branch like the public 
directory on a web server, serving up the files at your Pages url 
http://username.github.io. As a result, we will to work on the source for 
our blog in the source branch and commit the generated content to the master 
branch. Octopress has a configuration task that helps us set all this up.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake setup_github_pages&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The rake task will ask for a URL of the Github repo. Copy the SSH or HTTPS URL 
from our newly created repository
(e.g. git@github.com:username/username.github.io.git)
and paste it in as a response.&lt;/p&gt;

&lt;p&gt;This will:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ask for and store our Github Pages repository url&lt;/li&gt;
  &lt;li&gt;Rename the remote pointing to imathis/octopress from ‘origin’ to ‘octopress’&lt;/li&gt;
  &lt;li&gt;Add our Github Pages repository as the default origin remote&lt;/li&gt;
  &lt;li&gt;Switch the active branch from master to source&lt;/li&gt;
  &lt;li&gt;Configure our blog’s url according to your repository&lt;/li&gt;
  &lt;li&gt;Setup a master branch in the _deploy directory for deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake generate
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake deploy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will generate our blog, copy the generated files into _deploy/, add them 
to git, commit and push them up to the master branch.&lt;/p&gt;

&lt;p&gt;Don’t forget to commit the source of our blog.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'our message'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With new repositories, Github sets the default branch based on the branch we 
push first, and it looks there for the generated site content. If we’re having 
trouble getting Github to publish our site, go to the admin panel for our 
repository and make sure that the master branch is the default branch.&lt;/p&gt;

&lt;h3 id=&quot;contribute-from-other-place&quot;&gt;Contribute from Other Place&lt;/h3&gt;

&lt;p&gt;Sometimes we need to develop our octopress site in other place than we currently
in. To do that, we will use the benefit of git.&lt;br /&gt;
First, we need to get our site copy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git@github.com:username/username.github.io.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;username.github.io&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Switch to source branch&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then do all change on our source, after that run “rake generate” or “rake
preview” to compile our source onto public directory. Everything seems to be
okay until we need to upload to github.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake deploy
&lt;span class=&quot;c&quot;&gt;## Deploying branch to Github Pages &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## Pulling any updates from Github Pages &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_deploy
rake aborted!
Errno::ENOENT: No such file or directory @ dir_chdir - _deploy
/home/didik/octopress/Rakefile:255:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;block &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;top &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;required&lt;span class=&quot;o&quot;&gt;)&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
/home/didik/octopress/Rakefile:227:in `block in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;
Tasks: TOP &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; deploy
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;See full trace by running task with &lt;span class=&quot;nt&quot;&gt;--trace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Oops, it’s look like we miss something. We have to make a new _deploy directory 
and add git initialization to it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;_deploy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_deploy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin git@github.com:username/username.github.io.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull origin master
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s all. Now, we can upload using rake deploy as usual.&lt;br /&gt;
Until next time.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 15:06:57 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/02/octopress-setup-and-deployment/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/02/octopress-setup-and-deployment/</guid>
        
        
        <category>web</category>
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>My Blog</title>
        <description>&lt;p&gt;As a person who use internet in daily basis, I think something
personal like a domain name is essential to have. But, there is no good
personal domain name available for free. Fortunately, the price to “borrow” a
domain name from the registrar is fairly affordable. So, without even thinking
more about price to pay, I decided that what I invested in this thing will
someday get useful for everyone, in anyway.&lt;br /&gt;
After I “reserved” one domain name, I need to associate it with other service.
The two things that important to be setting up immediately are blog and email. &lt;br /&gt;
Blog is like my “broadcasting center”. I store my notes, my journals there.
Everyone is welcome to visit there, and I hope it can help someone to answer
their question someday. Email become my virtual identity. I use it to register
to many service on the internet. Especially with my own custom domain name,
I can make my blog and email look more personally.
Here I explain how I build my blog step by step.&lt;/p&gt;

&lt;h3 id=&quot;domain-name&quot;&gt;Domain Name&lt;/h3&gt;

&lt;p&gt;I register my domain from a web hosting provider. I just pay for the domain
name, not the hosting service.&lt;br /&gt;
About what provider I currently use, it can be found using a domain tool easily.&lt;/p&gt;

&lt;h3 id=&quot;blog&quot;&gt;Blog&lt;/h3&gt;

&lt;p&gt;In order to build my infrastructure, I need to have a server, dedicated internet
or static IP address to run the software up. But I don’t have any of them, so I
just use free service from external providers. There is a lot of providers who
can give us some space to host our web and email.&lt;br /&gt;
In early time I touch with internet, I did use some blogging framework to run my
blog. I ever use Blogger, Joomla, Drupal and Wordpress. I spend a long time with 
Wordpress. But, due to personal favor, finally I switch to Octopress.&lt;/p&gt;

&lt;p&gt;Why Octopress? Because that is simple. It has beautiful design, while easy to 
use. I can create post directly from Vim on my Linux console. 
It can be updated using git, so I can feel the sysadmin way to write a post. 
It use a simplify html-like syntax, markdown. 
I can host my blog together with my application repository in 
&lt;a href=&quot;https://www.github.com&quot;&gt;Github&lt;/a&gt;. You can check this
&lt;a href=&quot;/blog/2016/06/02/octopress-setup-and-deployment/&quot;&gt;article&lt;/a&gt; 
for more details. 
With this Octopress take control my way to blog,
I can focus on contents that I want to share rather than 
have to be confused to setup and design my blog.&lt;/p&gt;

&lt;h3 id=&quot;ssl&quot;&gt;SSL&lt;/h3&gt;

&lt;p&gt;For security purpose, I use free ssl service from 
&lt;a href=&quot;http://www.cloudflare.com&quot;&gt;CloudFlare&lt;/a&gt;. The setup process is fairly easy.
The requirements for its service is just a domain name with top level domain.
I just need to set my DNS configuration to point CloudFlare DNS. Additionally, 
there is a feature so I can force my blog visitor to use https in order to see
the ssl sign.&lt;/p&gt;

&lt;h3 id=&quot;email&quot;&gt;Email&lt;/h3&gt;

&lt;p&gt;Rather than using well-known free email service, I need to host my own email
because I want to use my own domain name. Fortunately, there is email provider 
that provide free email service using custom domain, thanks to
&lt;a href=&quot;http://www.zoho.com&quot;&gt;Zoho Mail&lt;/a&gt;.
Even with free service, I can use my own domain name.&lt;/p&gt;

&lt;p&gt;That’s all about my blog. I hope it all will be useful. Thanks for reading.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jun 2016 15:06:57 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/06/01/my-blog/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/06/01/my-blog/</guid>
        
        
        <category>web</category>
        
        <category>blog</category>
        
        <category>email</category>
        
      </item>
    
      <item>
        <title>Insert USB Module in Linux Kernel</title>
        <description>&lt;p&gt;After I re-compile my kernel using a vanilla one, I found that my usb flashdrive 
can not be detected by my operating system. I check on dmesg, there are entry
about my usb flashdrive on the log:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dmesg
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.616624] usb 1-1.2: new high-speed USB device number 3 using ehci-pci
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710606] usb 1-1.2: New USB device found, &lt;span class=&quot;nv&quot;&gt;idVendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0951, &lt;span class=&quot;nv&quot;&gt;idProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1666
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710617] usb 1-1.2: New USB device strings: &lt;span class=&quot;nv&quot;&gt;Mfr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, &lt;span class=&quot;nv&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;SerialNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710631] usb 1-1.2: Product: DataTraveler 3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710634] usb 1-1.2: Manufacturer: Kingston
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  123.710637] usb 1-1.2: SerialNumber: 60A44C3FACDBBDB1796E36C9
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But, after a moment I wait, there is no notification about new flashdrive
inserted. I check using blkid, still there is no sign of the thing.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;blkid
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;didik: 
/dev/sda1: &lt;span class=&quot;nv&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SYSTEM&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;70E80099E8005FA8&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ntfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-01&quot;&lt;/span&gt;
/dev/sda2: &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;92521783-0211-4b1d-8f66-b9a62c16fc89&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID_SUB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fdb1cb3e-1a44-4e53-864e-b29f6fdfb153&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btrfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-02&quot;&lt;/span&gt;
/dev/sda3: &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4723c4f7-9624-4b8d-9b41-3079442641b4&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;swap&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-03&quot;&lt;/span&gt;
/dev/sda5: &lt;span class=&quot;nv&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DATA&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;01CD0094E26EBB80&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ntfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba6ded71-05&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Apparently, I forget to insert usb-storage module in my kernel, after I
recompile it. So, I try to modprobe the needed module.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;modprobe usb-storage
modprobe: FATAL: Module usb-storage not found &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;directory /lib/modules/4.6.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Okay, it seems that the file I need is not available from the kernel tree. So, I
need to insert the module manually.&lt;br /&gt;
Time to go to kernel tree.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;linux-4.6.2/
didik@thinkpad:~/linux-4.6.2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make menuconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From this menu, I will include the module that I need for usb-storage. Press /
to search module name. It is called USB_STORAGE.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/usb-module0.png&quot; alt=&quot;usb-module0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After I found its location, I insert it with “M” become my choice between the
tri-state mode.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/usb-module1.png&quot; alt=&quot;usb-module1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I exit and save this configuration.&lt;br /&gt;
Then I make it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~/linux-4.6.2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make &lt;span class=&quot;nt&quot;&gt;-j4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that the “4” value is changeable depends on processor specs.&lt;br /&gt;
I use “4” because my processor 
Install old and new compiled module, as root of course.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~/linux-4.6.2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make modules_install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;My new module finally installed. Now I can plug the usb drive on my computer.&lt;br /&gt;
Just in case you are curious about system message of the inserted device, you 
can use dmesg.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dmesg
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3231.314581] usb 1-1.2: USB disconnect, device number 3
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.198257] usb 1-1.2: new high-speed USB device number 4 using ehci-pci
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292379] usb 1-1.2: New USB device found, &lt;span class=&quot;nv&quot;&gt;idVendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0951, &lt;span class=&quot;nv&quot;&gt;idProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1666
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292390] usb 1-1.2: New USB device strings: &lt;span class=&quot;nv&quot;&gt;Mfr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, &lt;span class=&quot;nv&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;SerialNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292395] usb 1-1.2: Product: DataTraveler 3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292399] usb 1-1.2: Manufacturer: Kingston
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.292403] usb 1-1.2: SerialNumber: 60A44C3FACDBBDB1796E36C9
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.990697] usb-storage 1-1.2:1.0: USB Mass Storage device detected
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.990994] scsi host6: usb-storage 1-1.2:1.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3233.991196] usbcore: registered new interface driver usb-storage
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.995392] scsi 6:0:0:0: Direct-Access     Kingston DataTraveler 3.0 PMAP PQ: 0 ANSI: 6
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.996242] sd 6:0:0:0: Attached scsi generic sg2 &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.996655] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] 31293440 512-byte logical blocks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16.0 GB/14.9 GiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.998693] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] Write Protect is off
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3234.998705] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] Mode Sense: 2b 80 00 08
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 3235.000537] sd 6:0:0:0: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sdb] Write cache: disabled, &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;cache: enabled, doesn&lt;span class=&quot;s1&quot;&gt;'t support DPO or FUA
[ 3236.101997]  sdb: sdb1
[ 3236.108153] sd 6:0:0:0: [sdb] Attached SCSI removable disk
--- output omitted ---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And modinfo to view module details.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;didik@thinkpad:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;modinfo usb-storage
filename:       /lib/modules/4.6.2/kernel/drivers/usb/storage/usb-storage.ko
license:        GPL
description:    USB Mass Storage driver &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Linux
author:         Matthew Dharm &amp;lt;mdharm-usb@one-eyed-alien.net&amp;gt;
srcversion:     D0235102D9160CC35A9A1C4
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;p&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;d&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic08isc06ip50in&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;p&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;d&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic08isc05ip50in&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; output omitted &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v03EEp6906d0003dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;isc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ip&lt;span class=&quot;k&quot;&gt;*in*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias&lt;/span&gt;:          usb:v03EBp2002d0100dc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dsc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;dp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ic&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;isc&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;ip&lt;span class=&quot;k&quot;&gt;*in*&lt;/span&gt;
depends:        
intree:         Y
vermagic:       4.6.2 SMP mod_unload modversions 
parm:           option_zero_cd:ZeroCD mode &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Force Modem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Allow CD-Rom &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uint&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
parm:           swi_tru_install:TRU-Install mode &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Full Logic &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;def&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Force CD-Rom, &lt;span class=&quot;nv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Force Modem&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uint&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
parm:           delay_use:seconds to delay before using a new device &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uint&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
parm:           quirks:supplemental list of device IDs and their quirks &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Until next time.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 May 2016 21:13:21 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/05/03/insert-usb-module-linux-kernel/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/05/03/insert-usb-module-linux-kernel/</guid>
        
        
        <category>linux</category>
        
        <category>kernel</category>
        
      </item>
    
      <item>
        <title>Build Custom Linux Kernel</title>
        <description>&lt;h2 id=&quot;install-custom-linux-kernel&quot;&gt;Install Custom Linux Kernel&lt;/h2&gt;

&lt;p&gt;To build this custom Linux Kernel, I use Ubuntu 14.04 64 bit operating system.
At first, ensure all the required utilities installed correctly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gcc make git libssl-dev libncurses5-dev&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Download source from Linux Kernel Archives, for example, I use version 4.4.&lt;br /&gt;
&lt;a href=&quot;https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.tar.xz&quot;&gt;https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.tar.xz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Extract the tarball file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xJf linux-4.4.tar.xz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;linux-4.4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need to change configuration parameters to determine which settings and modules we need to build.
Use make *config command as follow. 
Choose one that match to your favor.
I usually use number 2.&lt;/p&gt;

&lt;h4 id=&quot;1-use-default-kernel-configuration&quot;&gt;1. Use default kernel configuration.&lt;/h4&gt;
&lt;p&gt;This settings comes from the kernel maintainer.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make defconfig &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;2-use-our-existing-configuration&quot;&gt;2. Use our existing configuration.&lt;/h4&gt;
&lt;p&gt;Just press “Enter” when asked for configuration options.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make localmodconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;3-manual-selection-with-graphical-menu&quot;&gt;3. Manual selection with graphical menu.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make menuconfig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;4--duplicate-our-current-config&quot;&gt;4.  Duplicate our current config.&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /boot/config-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; .config&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, compile source, this process can take a while.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make &lt;span class=&quot;nt&quot;&gt;-j4&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The parameter “4” is based on processor specification.
Set this at your own favor.&lt;br /&gt;
Install modules.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make modules_install &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bootloader setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Double check bootloader setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-grub2 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reboot the system.
We can check our new installed kernel with this command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;uninstall-custom-linux-kernel&quot;&gt;Uninstall Custom Linux Kernel&lt;/h2&gt;

&lt;p&gt;Find out the version of custom kernel.&lt;br /&gt;
Update filesystem search index.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;updatedb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example, I want to remove kernel version 3.16.0-30-generic.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ CUSTOM_KERNEL_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.16.0-30-generic&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;locate &lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ensure our system has other kernel installed beside $CUSTOM_KERNEL_VERSION.&lt;br /&gt;
Then, delete all files &amp;amp; folders which contain $CUSTOM_KERNEL_VERSION name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/vmlinuz-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/initrd.img-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/System.map-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /boot/config-&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /lib/modules/&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /var/lib/initramfs-tools/&lt;span class=&quot;nv&quot;&gt;$CUSTOM_KERNEL_VERSION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Do some cleaning.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-initramfs &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; all &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-grub2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finish. Our custom kernel has been uninstalled from our system.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 10:35:18 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2016/02/02/build-custom-linux-kernel/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2016/02/02/build-custom-linux-kernel/</guid>
        
        
        <category>linux</category>
        
        <category>kernel</category>
        
      </item>
    
      <item>
        <title>Cacti Monitoring via Email Notification</title>
        <description>&lt;p&gt;Cacti can be configured so it can send email notification if something has occured in our system. This is can be useful, especially for system administrator to monitor their server condition. It can be done with help from one of cacti plugin that is thold. I do this procedure to monitor computer harddrive capacity on Windows.&lt;/p&gt;

&lt;p&gt;So, if there is a computer which harddrive capacity near the capacity limit, cacti will send notification via email. This is useful to avoid misinformation that can bring system stop working or failed periodic system backup.&lt;/p&gt;

&lt;p&gt;The installation procedure itself is easy enough. Before this plugin thold installation, we need to install settings plugin &lt;a href=&quot;http://docs.cacti.net/plugin:settings&quot;&gt;http://docs.cacti.net/plugin:settings&lt;/a&gt;. We can install those plugins concurently. Download files that are needed:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://docs.cacti.net/_media/plugin:settings-v0.71-1.tgz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://docs.cacti.net/_media/plugin:thold-v0.5.0.tgz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rename download files in order to avoid error at extract time.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;plugin:settings-v0.71-1.tgz settings-v0.71-1.tgz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;plugin:thold-v0.5.0.tgz thold-v0.5.0.tgz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Extract tarball files.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf settings-v0.71-1.tgz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf thold-v0.5.0.tgz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Move extrated files to folder cacti/plugins.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mv &lt;/span&gt;settings thold /var/www/html/cacti/plugins/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we configure cacti via web interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail1.png&quot; alt=&quot;cactiemail1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Install and activate plugin Setting and Thold. After success, we need to configure thos plugins. Set configuration for email. We will use gmail account for mail service configuration. Configure following parameters:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail2.png&quot; alt=&quot;cactiemail2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can test to send email to confirm email sending process running well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail3.png&quot; alt=&quot;cactiemail3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After test passed, we can save the configuration. In the notification lists menu, add our email address for thold plugin which need to be sent if some notification raised by system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail4.png&quot; alt=&quot;cactiemail4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Choose graph which need to monitor the threshold. In this example, I will monitor a Windows host, so I can use harddrive free space percentage to trigger the thold.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail5.png&quot; alt=&quot;cactiemail5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configure the following parameter:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Threshold Name: Desired treshold name&lt;/li&gt;
  &lt;li&gt;Re-Alert Cycle: Notification sending interval&lt;/li&gt;
  &lt;li&gt;Warning Low Threshold: Minimum limit value for threshold warning&lt;/li&gt;
  &lt;li&gt;Alert Low Threshold: Maximum limit valuefor threshold warning&lt;/li&gt;
  &lt;li&gt;Warning Notification List: List of email address notification for warning&lt;/li&gt;
  &lt;li&gt;Alert Notification List: List of email address notification for alert&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail6.png&quot; alt=&quot;cactiemail6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thold has been done configured. We just need to monitor the result. Cacti will send notification contain email and graph concerned about monitored device. In the example above, cacti will check harddrive capacity of server within a day.
If something has found that harddrive capacity meet the condition of below 25%, then cacti will send email notification warning. And if harddrive capacity below 10% then cacti will send email notification alert.&lt;br /&gt;
This is an example of email notification from cacti.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiemail7.png&quot; alt=&quot;cactiemail7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reference:&lt;br /&gt;
&lt;a href=&quot;http://docs.cacti.net/plugin:thold&quot;&gt;http://docs.cacti.net/plugin:thold&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2015 10:54:34 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2015/09/18/cacti-monitoring-via-email-notification/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2015/09/18/cacti-monitoring-via-email-notification/</guid>
        
        
        <category>cacti</category>
        
        <category>snmp</category>
        
        <category>ubuntu</category>
        
      </item>
    
      <item>
        <title>Cacti for Monitoring Windows Host</title>
        <description>&lt;p&gt;To monitor windows based host, we need to install custom cacti template. I use windows template to monitor computer with Windows 7, Windows Server 2008 R2 and Windows Server 2012 R2 operating system installed. Template can be download, here:&lt;/p&gt;

&lt;p&gt;https://github.com/didiksetiawan/cacti-templates&lt;/p&gt;

&lt;p&gt;Extract and copy files from resource/snmp_queries to cacti directory&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp &lt;/span&gt;snmp_informant_standard_&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xml /usr/share/cacti/site/resource/snmp_queries/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we need import that xml templates from folder “template” using cacti web interface.&lt;/p&gt;

&lt;p&gt;Log in to cacti web interface and point to Import Templates&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiwinhost1.png&quot; alt=&quot;cactiwinhost1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Browse template folder that have been downloaded and search for cacti_host_template_windows_host_-_snmp_informant.xml file then click import. This template is ready to use.&lt;/p&gt;

&lt;p&gt;Next, I need to activate SNMP service in Windows host as well as others add-on for SNMP. Login to Control Panel &amp;gt; Programs and Features &amp;gt; Windows Features. Check in Simple Network Management Protocol (SNMP).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiwinhost2.png&quot; alt=&quot;cactiwinhost2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After SNMP feature success, configure SNMP service. Log in to menu Service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiwinhost3.png&quot; alt=&quot;cactiwinhost3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Change configuration for service “SNMP Service”. Add appropriate parameter community, and allow SNMP so it can be accessed from anywhere host.
Additionally, we can add contact address in tab Agent (optional).
After SNMP installed and configured, install 3rd party software that is SNMP informant. This app can be download at &lt;a href=&quot;http://www.snmp-informant.com/downloads.htm#SNMP_Informant_-_Freeware_Products&quot;&gt;http://www.snmp-informant.com/downloads.htm#SNMP_Informant_-_Freeware_Products&lt;/a&gt;. To install, we just use standard wizard procedure, no need custom configuration.&lt;/p&gt;

&lt;p&gt;How to add device in cacti&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiwinhost4.png&quot; alt=&quot;cactiwinhost4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After the device creation success, next step is create graph for this device.
It can be done automatically with click “*Create Graph for this Host”.
Then select appropriate item. Then edit the Graph Trees.
Add to tree in order to it can be accessed from Tree View mode.
Finish, we can access graph that we created in tab graphs.
Happy cactying.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/cactiwinhost5.png&quot; alt=&quot;cactiwinhost5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reference:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://everythingshouldbevirtual.com/cacti-monitoring-for-windows-servers&quot;&gt;http://everythingshouldbevirtual.com/cacti-monitoring-for-windows-servers&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2015 10:54:34 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2015/09/18/cacti-for-monitoring-windows-host/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2015/09/18/cacti-for-monitoring-windows-host/</guid>
        
        
        <category>cacti</category>
        
        <category>snmp</category>
        
        <category>ubuntu</category>
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Setup Autoshutdown UPS on Windows</title>
        <description>&lt;p&gt;Thus principally, to run computer autoshutdown using UPS software, is with link a batch script to perform shutdown. So, if there is a condition where the power is off, then that UPS software trigger the shutdown script to perform execution.
In this example, I will use two kinds of UPS that are Prolink PRO 1200 SFCU and Eaton AVR 625.&lt;/p&gt;

&lt;h3 id=&quot;prolink-pro-1200-sfcu&quot;&gt;Prolink PRO 1200 SFCU&lt;/h3&gt;

&lt;p&gt;In this example I use UPS on the computer with Windows Server 2008 R2 Operating System. The steps is explained below:
Login into computer with UPS installed
Install driver and UPS software. The insttaler can be download at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.power-software-download.com/viewpower/installViewPower_Windows.zip&quot;&gt;http://www.power-software-download.com/viewpower/installViewPower_Windows.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To install the software, we just click next as well as almost installation process on Windows. After installed successfully, there will appear UPS icon on Windows system tray and there is a notification message about this system is starting.
After installed, open control panel from that UPS software on browser with this address:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:15178/ViewPower/#&quot;&gt;http://127.0.0.1:15178/ViewPower/#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Login as admin, the default password for Prolink PRO 1200 SFCU is “administrator”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups1.png&quot; alt=&quot;ups1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups2.png&quot; alt=&quot;ups2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Change this default password immediately on configuration menu ViewPower &amp;gt; Change Password&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups3.png&quot; alt=&quot;ups3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Check in to UPS Settings &amp;gt; Local Shutdown&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups4.png&quot; alt=&quot;ups4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Set the check box up on menu “When the UPS is running from the battery” and fill the section “Shut down the local system after” with value 6 (in minutes).&lt;br /&gt;
In the section “Time to wait before shutting down the local system” fill with value 5 (in minutes).&lt;br /&gt;
In the section “Maximum file execution time”, fill with value 1 (in minutes). &lt;br /&gt;
In the section “File to execute when shutting down” fill with value of path to shutdown script. &lt;br /&gt;
In the following example, I created script on C:\rshutdown.bat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups5.png&quot; alt=&quot;ups5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then make a new file with notepad, give it name rshutdown.bat, save on disk C. The contents:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-batch&quot; data-lang=&quot;batch&quot;&gt;C:\Windows\System32\shutdown.exe /s /t 20&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That command is being used to shutdown the computer.&lt;/p&gt;

&lt;h3 id=&quot;eaton-avr-625&quot;&gt;Eaton AVR 625&lt;/h3&gt;

&lt;p&gt;Same as previous UPS configuration, the following setup I do with OS Windows Server 2008. The steps to setup are:
Install UPS Eaton AVR software that delivered with the CD. The installation process once again is almost same as the Windows application installation, we just click next and next.
After installation successful, set the UPS to run the shutdown process if a failure power source has occured.
Click icon on Windows system tray, check in to menu Settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups6.png&quot; alt=&quot;ups6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fill with command line parameter where we save the batch file for shutdown. 
In the following example, I use file on “C:\User\edp11\Desktop\putty\shutdown.bat”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups7.png&quot; alt=&quot;ups7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The script contents is same as previous script we write:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-batch&quot; data-lang=&quot;batch&quot;&gt;C:\Windows\System32\shutdown.exe /s /t 20&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Testing&lt;/p&gt;

&lt;p&gt;This step is important. The purpose is to verify setup process we have done so far. The checking process can be done with, cut off the UPS power source so it can simulate a power shutdown condition.
After 5 minutes from the time the power source off, we can check if the autoshutdown process is success or not.
If the computer softly turned off (warm shutdown) the the UPS software setup is success.&lt;/p&gt;

&lt;p&gt;Shutdown another Host on the Network&lt;/p&gt;

&lt;p&gt;In the script above, the shutdown command is used to shutdown computer that connected directly to UPS via USB data cable.
In other way, for another computer with still on the same power source domain, the shutdown proccess can be applied via network with additional script and custom tools.
The detail is explained below.&lt;/p&gt;

&lt;p&gt;Windows Host Shutdown&lt;/p&gt;

&lt;p&gt;We will shutdown the computer with Windows OS use psshutdown tools. Download the tool on:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://download.sysinternals.com/files/PSTools.zip&quot;&gt;https://download.sysinternals.com/files/PSTools.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Extract the psshutdown file, we only need this file to run the shutdown process.
Save following file in anywhere, in this example in C:\psshutdown.exe.
Then add the following file as file shutdown.bat:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-batch&quot; data-lang=&quot;batch&quot;&gt;C:\psshutdown.exe -u foo -p bar \172.16.10.245&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In that example I use username foo and password bar and with IP 172.16.10.245. Set this with our need.
It is recommended to test the script with manually typing on the command prompt, to avoid notification from psshutdown application stop the shutdown process.
Because, on the first time, we will asked for confirmation about end user license agreement from this application.&lt;/p&gt;

&lt;p&gt;Linux Host Shutdown&lt;/p&gt;

&lt;p&gt;In order to shutdown Linux based host, we use another application from putty that is plink.exe. Download from:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://the.earth.li/~sgtatham/putty/latest/x86/putty.zip&quot;&gt;http://the.earth.li/~sgtatham/putty/latest/x86/putty.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confirm that we can automatic login to Linux. To do this, we need to generate public and private key for Windows host where the autoshutdown trigger is run.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups8.png&quot; alt=&quot;ups8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click button Generate. While wait the key making process, we could moving the mouse in order to accelerate the process.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups9.png&quot; alt=&quot;ups9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After generating process, save the public and private key.
Save with easy name to find, for example for the public key we could named it key-server.pub and for the private key key-server.ppl.
If the following notification appear, then click Yes, just ignore it, because weneed automatic login without passpharase which same as password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/ups10.png&quot; alt=&quot;ups10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the next step, we need add public key that we have been created into host which want we access without password.
Login in to that host with putty and user root. Then type this commands.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDOPrv4jtzSdRbaRY16miDNOnAYDnha0A+V92+ul88xCjLmLOYL78KyGKc1u47ZtCSpV590sLdSmXULvaSC6Fs8mVg+DdgumoBRZg1unwYGwUp9DKVjI+6DxAJIjwsarCS78TxtuGb+55ujnaJh4rSwLHnuqvDB3q6JtR/yET28Fq6RJ4Czjpv06X0EohfLVqwXdMKsZXbde/9vyFB9G1CrsnA6KXg1bsYDKW7xp4ayS4Q2yA1P7itX4zBNyRVQjdR5K/PTuNBzItbYiM7cyL6P6kfB3pnpZJQtK+IV0RhSPOQaaAJch+DwFcElamuENsDeE77PcYTLrqIxaIOYVPhh root@server&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; .ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Change the parameter in the quotation mark (“ “) above using contents from key-server.pub public key file that exist.
Then add this script in to file shutdown.bat.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-batch&quot; data-lang=&quot;batch&quot;&gt;C:\plink.exe -i C:\key-server.ppk root@172.16.10.250 /sbin/poweroff&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Extract plink.exe file from putty package we have been downloaded and save in C:, as well as the key-server.ppk private key.
Edit the IP Server above to your needs.&lt;/p&gt;

&lt;p&gt;As well as the script to shutdown the Windows host, it is recommended to test the script with manually typing on the command prompt, to avoid notification from psshutdown application stop the shutdown process.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Mar 2015 21:04:31 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2015/03/18/setup-autoshutdown-ups-on-windows/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2015/03/18/setup-autoshutdown-ups-on-windows/</guid>
        
        
        <category>batch</category>
        
        <category>cmd</category>
        
        <category>ups</category>
        
        <category>win_server_2008</category>
        
        <category>win_server_2008_r2</category>
        
      </item>
    
      <item>
        <title>Linux Passwordless Login</title>
        <description>&lt;p&gt;Generate key on the client side:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That command will generate key with rsa encryption. To choose dsa encryption,
add parameter “-t dsa”.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; dsa&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, just click “Enter” if you are asked for passphrase. It is like you use an
empty passphrase.&lt;/p&gt;

&lt;p&gt;Copy that generated public key to host side, computer which will be used for remote.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp user@10.10.10.10:/home/didik/.ssh/id_dsa.pub &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;id_dsa.pub &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; .ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s all. Now you can login to client computer without worrying to be asked 
for a password. It is useful for deploying automatic scripts or programs.&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Feb 2015 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2015/02/26/linux-passwordless-login/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2015/02/26/linux-passwordless-login/</guid>
        
        
        <category>linux</category>
        
        <category>ssh</category>
        
      </item>
    
      <item>
        <title>Check Hardware Specification in Ubuntu</title>
        <description>&lt;p&gt;The following are some commands in Ubuntu which can be use to get information
about the operating system and the hardware. It is a kind of “show” command in
Cisco IOS or “dxdiag” in Windows.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Show Ubuntu version/release information.&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lsb_release &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 16.04 LTS
Release:	16.04
Codename:	xenial&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show CPU information.&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;less /proc/cpuinfo
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 42
model name      : Intel&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;R&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Core&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; i5-2410M CPU @ 2.30GHz
stepping        : 7
microcode       : 0x29
cpu MHz         : 1586.163
cache size      : 3072 KB
physical &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;     : 0
siblings        : 4
core &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;         : 0
cpu cores       : 2
apicid          : 0
initial apicid  : 0
fpu             : &lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;fpu_exception   : &lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;cpuid level     : 13
wp              : &lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts
bugs            :
bogomips        : 4589.51
clflush size    : 64
cache_alignment : 64
address sizes   : 36 bits physical, 48 bits virtual
power management:

— output omitted —&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show memory information&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;free &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;
              total        used        free      shared  buff/cache   available
Mem:           3862        1104        1433         259        1324        2229
Swap:          1199          44        1155&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;*) in megabytes&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Show information about motherboard&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dmidecode | less
&lt;span class=&quot;c&quot;&gt;# dmidecode 3.0&lt;/span&gt;
Getting SMBIOS data from sysfs.
SMBIOS 2.6 present.
59 structures occupying 2229 bytes.
Table at 0xBAE89000.

Handle 0x0000, DMI &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;4, 42 bytes
Processor Information
        Socket Designation: CPU
        Type: Central Processor
        Family: Core i5
        Manufacturer: Intel&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;R&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Corporation
        ID: A7 06 02 00 FF FB EB BF
        Signature: Type 0, Family 6, Model 42, Stepping 7
        Flags:
                FPU &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Floating-point unit on-chip&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                VME &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Virtual mode extension&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                DE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Debugging extension&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                PSE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Page size extension&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                TSC &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Time stamp counter&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                MSR &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Model specific registers&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                PAE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Physical address extension&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                MCE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Machine check exception&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                CX8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CMPXCHG8 instruction supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                APIC &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;On-chip APIC hardware supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                SEP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Fast system call&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                MTRR &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Memory &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;range registers&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                PGE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Page global &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                MCA &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Machine check architecture&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                CMOV &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Conditional move instruction supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                PAT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Page attribute table&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                PSE-36 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;36-bit page size extension&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                CLFSH &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CLFLUSH instruction supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                DS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Debug store&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                ACPI &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ACPI supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                MMX &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MMX technology supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                FXSR &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FXSAVE and FXSTOR instructions supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                SSE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Streaming SIMD extensions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                SSE2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Streaming SIMD extensions 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                SS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Self-snoop&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                HTT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Multi-threading&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                TM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Thermal monitor supported&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                PBE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pending &lt;span class=&quot;nb&quot;&gt;break &lt;/span&gt;enabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        Version: Intel&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;R&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Core&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; i5-2410M CPU @ 2.30GHz
        Voltage: 1.2 V
        External Clock: 100 MHz
        Max Speed: 2300 MHz
        Current Speed: 2300 MHz
        Status: Populated, Enabled
        Upgrade: ZIF Socket
        L1 Cache Handle: 0x0001
        L2 Cache Handle: 0x0002
        L3 Cache Handle: 0x0003
        Serial Number: Not Supported by CPU
        Asset Tag: None
        Part Number: None
        Core Count: 2
        Core Enabled: 2
        Thread Count: 4
        Characteristics:
                64-bit capable

Handle 0x0001, DMI &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;7, 19 bytes
Cache Information
        Socket Designation: L1-Cache
        Configuration: Enabled, Not Socketed, Level 1
        Operational Mode: Write Through
        Location: Internal
        Installed Size: 64 kB
        Maximum Size: 64 kB
        Supported SRAM Types:
                Synchronous
        Installed SRAM Type: Synchronous
        Speed: Unknown
        Error Correction Type: Single-bit ECC
        System Type: Data
        Associativity: 8-way Set-associative

Handle 0x0002, DMI &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;7, 19 bytes
Cache Information
        Socket Designation: L2-Cache
        Configuration: Enabled, Not Socketed, Level 2
        Operational Mode: Write Through
        Location: Internal
        Installed Size: 256 kB
        Maximum Size: 256 kB
        Supported SRAM Types:
                Synchronous
        Installed SRAM Type: Synchronous
        Speed: Unknown
        Error Correction Type: Single-bit ECC
        System Type: Data
        Associativity: 8-way Set-associative

— output omitted —&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Show Harddisk Information&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lshw &lt;span class=&quot;nt&quot;&gt;-class&lt;/span&gt; disk
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-disk&lt;/span&gt;                  
       description: ATA Disk
       product: HITACHI HTS72323
       vendor: Hitachi
       physical &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;: 0.0.0
       bus info: scsi@0:0.0.0
       logical name: /dev/sda
       version: B70B
       serial: E3834263GB50GD
       size: 298GiB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;320GB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       capabilities: partitioned partitioned:dos
       configuration: &lt;span class=&quot;nv&quot;&gt;ansiversion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5 &lt;span class=&quot;nv&quot;&gt;logicalsectorsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512 &lt;span class=&quot;nv&quot;&gt;sectorsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512 &lt;span class=&quot;nv&quot;&gt;signature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ba6ded71
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-cdrom&lt;/span&gt;
       description: DVD-RAM writer
       product: DVDRAM GS30N
       vendor: HL-DT-ST
       physical &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;: 0.0.0
       bus info: scsi@2:0.0.0
       logical name: /dev/cdrom
       logical name: /dev/cdrw
       logical name: /dev/dvd
       logical name: /dev/dvdrw
       logical name: /dev/sr0
       version: VX20
       capabilities: removable audio cd-r cd-rw dvd dvd-r dvd-ram
       configuration: &lt;span class=&quot;nv&quot;&gt;ansiversion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5 &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;open&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;More information about particular harddisk:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fdisk &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; /dev/sda
Disk /dev/sda: 298.1 GiB, 320072933376 bytes, 625142448 sectors
Units: sectors of 1 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 512 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 512 bytes
Sector size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;logical/physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 512 bytes / 512 bytes
I/O size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;minimum/optimal&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 512 bytes / 512 bytes
Disklabel &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: dos
Disk identifier: 0xba6ded71

Device     Boot     Start       End   Sectors   Size Id Type
/dev/sda1        63662080 207192063 143529984  68.5G  7 HPFS/NTFS/exFAT
/dev/sda2  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;      2459648  63662079  61202432  29.2G 83 Linux
/dev/sda3            2048   2459647   2457600   1.2G 82 Linux swap / Solaris
/dev/sda4       207270691 625142447 417871757 199.3G  f W95 Ext&lt;span class=&quot;s1&quot;&gt;'d (LBA)
/dev/sda5       207270693 625141759 417871067 199.3G  7 HPFS/NTFS/exFAT

Partition table entries are not in disk order.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 04 Dec 2014 15:30:42 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2014/12/04/check-hardware-specification-in-ubuntu/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2014/12/04/check-hardware-specification-in-ubuntu/</guid>
        
        
        <category>linux</category>
        
        <category>ubuntu</category>
        
      </item>
    
      <item>
        <title>Install Squid Web Proxy on Slackware</title>
        <description>&lt;p&gt;These article will discuss about how to install proxy server using Squid
(2.7STABLE9) in Linux Slackware 12.2.&lt;/p&gt;

&lt;p&gt;First, check harddrive partition which will be used for Squid cache partition.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;

Filesystem      Size  Used Avail Use% Mounted on
udev            1.9G     0  1.9G   0% /dev
tmpfs           387M  6.2M  381M   2% /run
/dev/sda2        30G   19G  9.4G  67% /
tmpfs           1.9G   11M  1.9G   1% /dev/shm
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/sda2        30G   19G  9.4G  67% /home
tmpfs           387M   52K  387M   1% /run/user/1000
/dev/sdb1        38G   57M   38G   1% /squid&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create some partition on that harddrive. For assumption, you will use harddrive
which have been mounted on /dev/sdb. That harddrive then divided to 4 section.
You need to format those partitions. Before do that, you must ensure those
partitions not in active state.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /dev/sdb1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /dev/sdb2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /dev/sdb3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /dev/sdb4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, format those partitions with partition tool on Linux, such as fdisk and
cfdisk. In this example, I will use cfdisk.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cfdisk /dev/sdb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Change its partition filesystem to ReiserFS filesystem.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkreiserfs /dev/sdb1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Repeat that step for three other partition.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkreisfers /dev/sdb2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkreiserfs /dev/sdb3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkreiserfs /dev/sdb4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Make 4 directory in root called cache1, cache2, cache3 and cache4 respectively
which will be used for cache engine directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /cache1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /cache2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /cache3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /cache4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Edit filesystem table in /etc/fstab. This have purpose to save change which have
been done for cache partition so they can be used when computer boot. Add the
following lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/dev/sdb1       /cache1 reiserfs notail,noatime 1 2
/dev/sdb2       /cache2 reiserfs notail,noatime 1 2
/dev/sdb3       /cache3 reiserfs notail,noatime 1 2
/dev/sdb4       /cache4 reiserfs notail,noatime 1 2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mount all of those partition.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount /dev/sdb1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount /dev/sdb2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount /dev/sdb3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount /dev/sdb4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;then all of those partition will be mounted on /cache1, /cache2, /cache3 and
/cache4 directory.&lt;/p&gt;

&lt;p&gt;Create new user and group which will be used by Squid daemon.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;groupadd squid
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;useradd squid &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; squid &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /no/login&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This Squid user will be used for setting up permission on cache directories you
have been created before.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo  chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; squid.squid /cache&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Change settings for file descriptor on Linux Slackware. Variable which will need
to be changed is on FD_SETSIZE in file /usr/include/linux/posix_types.h
(Slackware 12.2). Edit this file and search for following lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Number of descriptors that can fit in an `fd_set’. */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define __FD_SETSIZE 1024[/sourcecode]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;change to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Number of descriptors that can fit in an `fd_set’. */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define __FD_SETSIZE 16384&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then use following commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo  chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; squid.squid /cache1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo ulimit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-HSn&lt;/span&gt; 16384&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After all prerequisites have been fullfiled, then it is time to download Squid
source code. You will compile and install from its source code.
It source code can be obtained from its official website in
http://www.squid-cache.org.
For assumption, I use version squid-2.7STABLE7.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo  chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; squid.squid /cache1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://www.squid-cache.org/Versions/v2/2.7/squid-2.7.STABLE9.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;zxf squid-2.7STABLE9.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;squid-2.7STABLE9.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before compile its source code, you need to find a variable (I called it xyz
variable) which will be used to compile it. These variable is obtained from
processor specification. You can check it with commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo  chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; squid.squid /cache1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cat&lt;/span&gt; /proc/cpuinfo

processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 42
model name	: Intel&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;R&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Core&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; i5-2410M CPU @ 2.30GHz
stepping	: 7
microcode	: 0x29
cpu MHz		: 2699.804
cache size	: 3072 KB
physical &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;	: 0
siblings	: 4
core &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;		: 0
cpu cores	: 2
apicid		: 0
initial apicid	: 0
fpu		: &lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;fpu_exception	: &lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;cpuid level	: 13
wp		: &lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts
bugs		:
bogomips	: 4589.51
clflush size	: 64
cache_alignment	: 64
address sizes	: 36 bits physical, 48 bits virtual
power management:

&lt;span class=&quot;nt&quot;&gt;--ommited--&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From that output, the number you need to use is on the cpu MHz section. In that
example, the number is 2699 and I will be rounded to 2700.
The formula I use:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;xyz = ([cpu MHz] / 500) x 30&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then from the previous number, variable xyz you can get:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;xyz = (2700/500) x 30 = 5.4 x 30 = 162. &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compile the Squid source code which following prefix and don’t forget to change
variable xyz with previous number:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./configure&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--exec-prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--libexecdir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/squid&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--localstatedir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--sysconfdir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/squid&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-delay-pools&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-http-violations&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-poll&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--disable-ident-lookups&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-truncate&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-removal-policies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;lru,heap&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-cachemgr-hostname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;www&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-linux-netfilter&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-stacktraces&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-unlinkd&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-storeio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;diskd,ufs,aufs,coss,null&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-snmp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--bindir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-arp-acl&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-async-io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xyz&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--disable-icmp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-gnuregex&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-large-cache-files&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--with-aufs-threads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xyz&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--with-maxfd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;16384&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-htcp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--enable-coss-aio-ops&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--with-pthreads&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--with-large-files&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--CFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-O6&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DNUMTHREADS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xyz&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After compiling process success, then install with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If there are not appear an error message, then Squid have been successfully
installed on your system.&lt;/p&gt;

&lt;p&gt;Do some tune up on Squid configuration. Edit file /etc/squid/squid.conf. Make
some adaptation for network in access list options (acl).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cache_mem ==&amp;gt; cache memori formula = (amount of ram / 4)
cache_dir ==&amp;gt; 80% from size of cache partition (for example: 16000 64 256)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For transparent proxy mode, you need to add the following line:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;http_port 3128 transparent&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Make Squid log file and set this permission:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /var/log/squid
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo touch&lt;/span&gt; /var/log/squid/access.log
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo touch&lt;/span&gt; /var/log/squid/cache.log
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; squid.squid /var/log/squid&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Afterall, run Squid commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;squid &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;squid &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check whether Squid have been running with nmap command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap localhost

Starting Nmap 7.01 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2016-11-28 01:27 WIB
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;localhost &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;127.0.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.000062s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 998 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
53/tcp   open  domain
80/tcp   open  http
3128/tcp open  squid-http

Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.10 seconds&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or you can look on the cache.log file you have been created before.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /var/log/squid/cache.log

2010/12/02 23:06:13| 0 Objects expired.
2010/12/02 23:06:13| 0 Objects cancelled.
2010/12/02 23:06:13| 0 Duplicate URLs purged.
2010/12/02 23:06:13| 0 Swapfile clashes avoided.
2010/12/02 23:06:13| Took 0.4 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;75149.7 objects/sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
2010/12/02 23:06:13| Beginning Validation Procedure
2010/12/02 23:06:13| Completed Validation Procedure
2010/12/02 23:06:13| Validated 26825 Entries
2010/12/02 23:06:13| store_swap_size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1327892k
2010/12/02 23:06:14| storeLateRelease: released 0 objects[/sourcecode]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If the results is same as the following example, the Squid Proxy ready to serve.&lt;/p&gt;

&lt;p&gt;Add the following commands in order to run Squid whenever the Linux machine
reboot. Edit file /etc/rc.d/rc.local.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# run squid cache daemon&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ulimit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-HSn&lt;/span&gt; 16384
squid &amp;amp;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 01 Sep 2011 18:16:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2011/09/01/install-squid-web-proxy-on-slackware/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2011/09/01/install-squid-web-proxy-on-slackware/</guid>
        
        
        <category>linux</category>
        
        <category>networking</category>
        
        <category>squid</category>
        
      </item>
    
      <item>
        <title>Linux Router Configuration as PPPoE Client</title>
        <description>&lt;p&gt;Prepare all information needed: username, password and server IP Address (public)
up to existing PPPoE configuration.&lt;/p&gt;

&lt;p&gt;Configuration sample:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;User : aaa@package.isp.net
Password : bbb
Service : packageservice
IP Address : yyy.yyy.yyy.yyy
Local IP Address:
eth1 -&amp;gt; local, for example: 192.168.0.254/24
eth0 -&amp;gt; wan, for example: yyy.yyy.yyy.yyy, not need to configure, because it
will update automatically using PPPoE&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Commands for PPPoE Setup:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pppoe-setup&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It will prompt you about configuration of PPPoE client that you want to use.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;USERNAME
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Enter your PPPoE user name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default username&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: aaa@package.isp.net&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fill with username and password that already prepared.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;INTERFACE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Enter the Ethernet interface connected to the DSL modem
For Solaris, this is likely to be something like /dev/hme0.
For Linux, it will be ethn, where ‘n’ is a number.
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default eth0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: eth0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fill with interface where PPPoE will dial to its server (toward WAN).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; enter the demand value &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default no&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tekan enter&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For dedicated connection, at option “demand value” choose “no”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Please enter the IP address of your ISP’s primary DNS server.
If your ISP claims that ‘the server will provide DNS addresses’,
enter ‘server’ &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;all lower-case&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; here.
If you just press enter, I will assume you know what you are
doing and not modify your DNS setup.
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Enter the DNS information here: XXX.XXX.XXX.XXX
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Enter the secondary DNS server address here: XXX.XXX.XXX.XXX&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fill with IP address of DNS 1 and DNS 2.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;PASSWORD
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Please enter your PPPoE password: yyyy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Enter password which will be used (twice with confirmation).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;FIREWALLING
Please choose the firewall rules to use. Note that these rules are very basic. 
You are strongly encouraged to use a more sophisticated firewall setup&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; however, 
these will provide basic security. If you are running any servers on your 
machine, you must choose ‘NONE’ and &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up firewalling yourself. Otherwise, the 
firewall rules will deny access to all standard servers like Web, e-mail, ftp, 
etc. If you are using SSH, the rules will block outgoing SSH connections which 
allocate a privileged &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;port. The firewall choices are: 

0 – NONE: This script will not &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;any firewall rules. You are responsible &lt;span class=&quot;k&quot;&gt;for 
&lt;/span&gt;ensuring the security of your machine. You are STRONGLY recommended to use some 
kind of firewall rules. 
1 – STANDALONE: Appropriate &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a basic stand-alone web-surfing workstation 
2 – MASQUERADE: Appropriate &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a machine acting as an Internet gateway &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a LAN

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Choose a &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;of firewall &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With assumption that this firewall configuration (iptables) will use default
configuration then choose 0.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Accept these settings and adjust configuration files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On last prompt, confirm that previous choices is right.&lt;/p&gt;

&lt;p&gt;Then, you need to set up service name on pppoe.conf&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# vim /etc/ppp/pppoe.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Search for line with “SERVICENAME”, then add it. Enter without quotes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;SERVICENAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;internetservice&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run PPPoE client.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# pppoe-start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If there is no problem found, then there will such information like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;.connected!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, your Linux PPPoE client setup is succeeded.&lt;/p&gt;

&lt;h1 id=&quot;restart-pppoe-client-on-linux&quot;&gt;Restart PPPoE Client on Linux&lt;/h1&gt;

&lt;p&gt;Below is a simple script which can be used to restart PPPoE client on Linux.
FYI, Linux not shipped with built-in command to restart its PPPoE client.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; /var/run/ppp0.pid &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
/usr/sbin/pppoe-stop &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; /usr/sbin/pppoe-start
&lt;span class=&quot;k&quot;&gt;else
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: No PPPoE connection appears to be running&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Trying to start PPPoE Connection&quot;&lt;/span&gt;
/usr/sbin/pppoe-start
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The purpose of code above is to help administrator to restart PPPoE client
without open new connection to remote host.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Nov 2010 10:33:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2010/11/17/linux-router-configuration-as-pppoe-client/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2010/11/17/linux-router-configuration-as-pppoe-client/</guid>
        
        
        <category>linux</category>
        
        <category>networking</category>
        
      </item>
    
      <item>
        <title>Linux Broadcast Message</title>
        <description>&lt;p&gt;Sometimes, as linux user (especially as command line user), we need to send
message to another user. The message will appear on user terminal. To do this,
all we need is root access and simple one liner.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello buddy!&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;wall &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And if we want to use a file text as message source, we just need to omit the
redirection pipe and point commands to file directly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;wall &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; message.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 05 Dec 2009 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2009/12/05/linux-broadcast-message/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2009/12/05/linux-broadcast-message/</guid>
        
        
        <category>linux</category>
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>How to Check Filesystem on Linux</title>
        <description>&lt;p&gt;Here I will explain about simple way to check filesystem type which installed on
our running linux system.&lt;/p&gt;

&lt;p&gt;The fastest way is via reading filesystem table in /etc/fstab:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/fstab
/dev/hda1        swap             swap        defaults         0   0
/dev/hda3        /                ext3        defaults         1   1
/dev/hda2        /home            ext3        defaults         1   2
/dev/hda4        /usr             ext3        defaults         1   2
&lt;span class=&quot;c&quot;&gt;#/dev/cdrom      /mnt/cdrom       auto        noauto,owner,ro  0   0&lt;/span&gt;
/dev/fd0         /mnt/floppy      auto        noauto,owner     0   0
devpts           /dev/pts         devpts      &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5,mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;620   0   0
proc             /proc            proc        defaults         0   0
tmpfs            /dev/shm         tmpfs       defaults         0   0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or using mount command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mount
/dev/root on / &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;ext3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,errors&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;,data&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ordered&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
proc on /proc &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;proc &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
sysfs on /sys &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;sysfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
usbfs on /proc/bus/usb &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;usbfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/dev/hda2 on /home &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;ext3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/dev/hda4 on /usr &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;ext3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
tmpfs on /dev/shm &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;tmpfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or with looking system directory in file /proc/mounts:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;less /proc/mounts&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That will show the following output:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rootfs / rootfs rw 0 0
/dev/root / ext3 rw,errors&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;,data&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ordered 0 0
proc /proc proc rw 0 0
sysfs /sys sysfs rw 0 0
tmpfs /dev tmpfs rw,mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;755 0 0
devpts /dev/pts devpts rw,gid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5,mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;620 0 0
usbfs /proc/bus/usb usbfs rw 0 0
/dev/hda2 /home ext3 rw,errors&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;,data&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ordered 0 0
/dev/hda4 /usr ext3 rw,errors&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;,data&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ordered 0 0
tmpfs /dev/shm tmpfs rw 0 0
/proc/mounts lines 1-10/10 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;END&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To make tidier, check with “df” command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T&lt;/span&gt;
Filesystem    Type   1K-blocks      Used Available Use% Mounted on
/dev/root     ext3     4806936    696400   3866348  16% /
/dev/hda2     ext3     3850320    226940   3427792   7% /home
/dev/hda4     ext3     9621880   3866924   5266180  43% /usr
tmpfs        tmpfs      254680         0    254680   0% /dev/shm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The “-T” option will show the filesystem type. In order to read the disk
capacity easier, you can use “-h” option.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Th&lt;/span&gt;
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/root     ext3    4.6G  681M  3.7G  16% /
/dev/hda2     ext3    3.7G  222M  3.3G   7% /home
/dev/hda4     ext3    9.2G  3.7G  5.1G  43% /usr
tmpfs        tmpfs    249M     0  249M   0% /dev/shm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 05 Dec 2009 18:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2009/12/05/how-to-check-filesystem-on-linux/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2009/12/05/how-to-check-filesystem-on-linux/</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Qemu Quick Reference</title>
        <description>&lt;p&gt;Qemu is a software to virtualize an operating system. With this software, we can 
try an operating system without have to do installation on that computer, just 
like VMWare. In this article, I will share my experience of running operating 
system linux Parted Magic on Debian linux. The version of Qemu which I use is 
version 0.8.2. If you use linux, most of distro has been provide Qemu package on 
the default installation. Qemu is not only provided for linux operating system, 
but also available for other operating system like MS Windows and Mac OS. You 
can obtain Qemu from its official site.&lt;/p&gt;

&lt;p&gt;To run Qemu, we must run command line from console:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu &lt;span class=&quot;nt&quot;&gt;-cdrom&lt;/span&gt; /dev/hdc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Explanations from those command line is the -cdrom option for boot from cdrom 
drive and the “/dev/hdc” parameter is path for image we use (“/dev/hdc” is path 
for cdrom). Because Parted Magic is a kind of live cd, then we don’t need to do 
harddisk configuration.&lt;br /&gt;
Error message which often appear for first running of Qemu like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You do not have enough space in ‘/dev/shm’ for the 128 MB of QEMU virtual RAM. 
To have more space available provided you have enough RAM and swap, do as root: 
umount /dev/shm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Those message indicates that the amount of virtual memory which will be used 
Qemu is less than generic size (default). To solve this problem, use this command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /dev/shm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; tmpfs &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;144m none /dev/shm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After repaired, run Qemu once again. Then there is an xwindow with title Qemu and 
the operating system we run. If you need a full screen output, you can press key 
Ctrl + Alt + F or with adding fullscreen option, so the command we need to type 
become:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu &lt;span class=&quot;nt&quot;&gt;-full-screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cdrom&lt;/span&gt; /dev/hdc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To get cursor exit from the virtual machine screen, we can press Ctrl + Alt key 
combination. You can find details about another options on manual page. With 
those options, Qemu can be running for more complex implementation.&lt;/p&gt;

&lt;h2 id=&quot;using-qemu-for-installation-operating-system-to-harddisk&quot;&gt;Using Qemu for Installation Operating System to Harddisk&lt;/h2&gt;

&lt;p&gt;First, install Qemu on your existing operating system and if you need more 
performance tweaking, you can add additional module “kqemu”. To install new 
operating system, we need to make virtual harddisk. Virtual harddisk that we 
will make is being used for save virtual files that needed for new operating 
system. The capacity is about 4 GB (or more value is better) based on computer 
specs we use. The commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu-img create debian.img 4G&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The purpose of that commands is to create an image file named debian.img with 4 
GB capacity which will used by qemu. This image file act as virtual harddisk so 
while we setup the new operating system we can create harddisk partition to be 
more efficient.&lt;/p&gt;

&lt;p&gt;The next step is, we setup the new operating system. For example, we will use 
Debian operating system. As requirement, we need the installation CD of Debian. 
Insert the Debian CD to CD bay, then run qemu with additional options in order 
to boot from CD drive.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu &lt;span class=&quot;nt&quot;&gt;-hda&lt;/span&gt; debian.img &lt;span class=&quot;nt&quot;&gt;-cdrom&lt;/span&gt; /dev/cdrom &lt;span class=&quot;nt&quot;&gt;-boot&lt;/span&gt; d&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The purpose of that commands is to use debian.img file as virtual harddisk for 
the guest operating system. Then options “-cdrom /dev/cdrom/ -boot d” added in 
order qemu can boot from CD drive first.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu &lt;span class=&quot;nt&quot;&gt;-hda&lt;/span&gt; image.img /path/to/image.iso&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The image.img is the name of virtual file and /path/to/image.iso is path to the 
guest operating system iso file. Then we can continue the installation process 
like as we do installation on real computer.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Feb 2009 20:37:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2009/02/12/qemu-quick-reference/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2009/02/12/qemu-quick-reference/</guid>
        
        
        <category>virtualization</category>
        
      </item>
    
      <item>
        <title>Built PC Router Using FreeBSD</title>
        <description>&lt;p&gt;To build a PC router with FreeBSD, first collect informations about networking
scheme. For example, we assume our network to have scheme as follow:&lt;/p&gt;

&lt;p&gt;Public IP = 210.100.12.130&lt;br /&gt;
Local IP = 192.168.12.65&lt;br /&gt;
Network address of Local = 192.168.12.64/26&lt;/p&gt;

&lt;p&gt;We build router along with firewall using pf on FreeBSD. If you want to use
iptables as on Linux, you might use iptables which could be installed from
source.&lt;/p&gt;

&lt;p&gt;Step by step of the making process:&lt;/p&gt;

&lt;p&gt;Prepare computer with 2 network card which have FreeBSD operating system
installed.
Next, because in the default kernel FreeBSD that we have installed is not
have additional option of router functionality, then we need to recompile
kernel. The purpose of recompile process is to include the options we need,
beside that it useful to slenderize kernel so we can accelerate the loading
time and decrease memory.&lt;/p&gt;

&lt;p&gt;Compilation steps:&lt;/p&gt;

&lt;p&gt;Copy file GENERIC on a file with new name (for example: ROUTER) and edit
using text editor.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# cd /usr/src/sys/i386/conf&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# cp GENERIC ROUTER&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ee ROUTER&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When edit file ROUTER, change “indent” row with the new kernel name (set
to the file name). Remove options that not needed, but be careful if you
still doubt about options that you remove. Then add option:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;options ALTQ
options ALTQ_CBQ
options ALTQ_RED
options ALTQ_RIO
options ALTQ_PRIQ
options ALTQ_HFSC
options ALTQ_NOPCC

device pf
device pflog
device pfsync&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then save that configuration.&lt;/p&gt;

&lt;p&gt;Do the compile process of new kernel.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# config ROUTER&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It will show directory to process of compilation. If there is a syntax
error, we could repair on the ROUTER file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# cd ../compile/ROUTER&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# make depend &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If the compilation fail, before we check ROUTER file, we should run command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# make cleandepend&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;if the compilation process success, we could use the new kernel after
rebooting computer, after the configuration process finished.&lt;/p&gt;

&lt;p&gt;Configure IP Forwarding. Edit file sysctl.conf&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ee /etc/sysctl.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;add row:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;net.inet.ip.forwarding&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;save the configuration.&lt;/p&gt;

&lt;p&gt;For networking configuration, NAT and pf options to system, edit file
/etc/rc.conf.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ee /etc/rc.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;edit and add row:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;router_enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;”YES”
&lt;span class=&quot;nv&quot;&gt;pf_enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;”YES” &lt;span class=&quot;c&quot;&gt;# Enable PF (load module if required)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;pf_rules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;”/etc/pf.conf” &lt;span class=&quot;c&quot;&gt;# rules definition file for pf&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;pf_flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;”-q” &lt;span class=&quot;c&quot;&gt;# additional flags for pfctl startup&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;NAT configuration and pf, on file /etc/pf.conf.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ee /etc/pf.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;enable interface and NAT:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;ext_if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rl0&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# public network&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;int_if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rl1&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# local network&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;internal_net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.12.64/26&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;external_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;210.100.12.130&quot;&lt;/span&gt;
nat on &lt;span class=&quot;nv&quot;&gt;$ext_if&lt;/span&gt; from &lt;span class=&quot;nv&quot;&gt;$internal_net&lt;/span&gt; to any -&amp;gt; &lt;span class=&quot;nv&quot;&gt;$external_addr&lt;/span&gt;
pass on &lt;span class=&quot;nv&quot;&gt;$int_if&lt;/span&gt; from any to any&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;after finish, save the configuration. Run command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /etc/netstart&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configuration for FreeBSD PC Router has finished, in order the computer can
recognized new configuration, reboot it first. Then to check the connection to
outside network, we can check with ping command. Then we can add DHCP server on
the router.&lt;/p&gt;

&lt;h1 id=&quot;dhcp-server-using-freebsd&quot;&gt;DHCP Server using FreeBSD&lt;/h1&gt;

&lt;p&gt;DHCP is a protocol which use by computers in the network to determine
parameters like default gateway, subnet mask, IP address and DNS from a DHCP
server. The general purpose of a DHCP server is to make IP address allocation
easier and IP setting more dynamic. It help computer user so not need to set IP
when there is an addition of new user or after reformat a computer.&lt;br /&gt;
More information about DHCP can be read on:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol#Introduction&quot;&gt;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol#Introduction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you understand the function and how to DHCP Server work, let we try to
install a DHCP Server.&lt;/p&gt;

&lt;p&gt;First, login as root on your server, then go to dhcp server ports directory. If
not connected to internet, we can solve with copy dhcp file to directory
/usr/ports/distfiles/.&lt;br /&gt;
Commands to install:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# cd /usr/ports/net/isc-dhcp3-server/&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# make install clean&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After installation finished, configure it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ee /usr/local/etc/dhcpd.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Below is example of dhcp.conf contents:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ddns-update-style none&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
log-facility local7&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

subnet 192.168.12.64 netmask 255.255.255.192 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
range 192.168.12.66 192.168.12.76&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option routers 192.168.12.65&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option subnet-mask 255.255.255.192&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
option domain-name-servers 210.100.12.129&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option domain-name example.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
default-lease-time 3600&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
max-lease-time 86400&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Don’t forget to save file.&lt;br /&gt;
Configure rc.conf to determine DHCP Server running process and which interface
to listening on this DHCP Server.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ee /etc/rc.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Add following lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;dhcpd_enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;YES&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-q&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/etc/dhcpd.conf&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_withumask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;022&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_withuser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dhcpd&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_withgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dhcpd&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_iface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rl1&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;then save changes.&lt;/p&gt;

&lt;p&gt;Run the DHCP Server.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /usr/local/etc/rc.d/isc-dhcpd.sh start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Starting dhcpd.&lt;/p&gt;

&lt;p&gt;Until this step, the installation process is finished and you could run the DHCP
Server. To use other features, you could try on your own.&lt;/p&gt;

&lt;p&gt;Then you could try the new DHCP server with configure on client computers to
obtain IP address automatically on Windows, Linux and FreeBSD PC.&lt;br /&gt;
Watch the DHCP Server leasing activity with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# tail -f /var/db/dhcpd.leases&lt;/span&gt;

lease 192.168.12.66 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
starts 2 2007/01/30 23:25:05&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ends 3 2007/01/31 00:25:05&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
tstp 3 2007/01/31 00:25:05&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
binding state active&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
next binding state free&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
hardware ethernet 00:01:6c:b0:d0:44&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
uid 010001l260320D&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
client-hostname underiez&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If we prefer to install without port (using source) below are the steps:&lt;/p&gt;

&lt;p&gt;First, download isc-dhcp3-server 3.0.5_2.tbz package.
Choose the right FreeBSD version that is for AMD or Intel, then upload it from
other PC using FTP or other methods. Because I use file isc-dhcp3-server
3.0.5_2.tbz and FreeBSD release 7.0, so the command I use.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# pkg_add isc-dhcp3-server 3.0.5_2.tbz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then add the following lines in /etc/rc.conf.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ee /etc/rc.conf&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;dhcpd_enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;YES&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-q&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/etc/dhcpd.conf&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_withumask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;022&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_withuser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dhcpd&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_withgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dhcpd&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;dhcpd_iface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rl1&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;then change configuration in /usr/local/etc/dhcpd.conf&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# cp /usr/local/etc/dhcpd.conf.sample /usr/local/etc/dhcpd.conf&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ee /usr/local/etc/dhcpd.conf&lt;/span&gt;

ddns-update-style none&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
log-facility local7&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

subnet 192.168.12.64 netmask 255.255.255.192 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
range 192.168.12.66 192.168.12.76&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option routers 192.168.12.65&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option subnet-mask 255.255.255.192&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option domain-name-servers 210.100.12.129&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
option domain-name example.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
default-lease-time 3600&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
max-lease-time 86400&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;save the file. Then run commands.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /usr/local/etc/rc.d/isc-dhcpd start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So those are my explanations about DHCP Server on FreeBSD.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Feb 2009 20:23:38 +0700</pubDate>
        <link>https://www.didiksetiawan.com/blog/2009/02/05/built-pc-router-using-freebsd/</link>
        <guid isPermaLink="true">https://www.didiksetiawan.com/blog/2009/02/05/built-pc-router-using-freebsd/</guid>
        
        
        <category>freebsd</category>
        
        <category>networking</category>
        
      </item>
    
    
      <item>
        <title>Cool project 1</title>
        <description>Cool project 1</description>
        <link>https://www.didiksetiawan.com#</link>
        <pubDate>Wed, 01 Jan 2014 00:00:00 +0700</pubDate>
        
        <category>Angular JS</category>
        
        <category>API</category>
        
      </item>
    
      <item>
        <title>Cool project 2</title>
        <description>Cool project 2</description>
        <link>https://www.didiksetiawan.com#</link>
        <pubDate>Thu, 01 May 2014 00:00:00 +0700</pubDate>
        
        <category>Android</category>
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>Cool project 3</title>
        <description>Cool project 3</description>
        <link>https://www.didiksetiawan.com#</link>
        <pubDate>Sun, 01 Jun 2014 00:00:00 +0700</pubDate>
        
        <category>HTML</category>
        
        <category>JQuery</category>
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>Cool project 4</title>
        <description>Cool project 4</description>
        <link>https://www.didiksetiawan.com</link>
        <pubDate>Sat, 01 Oct 2016 00:00:00 +0700</pubDate>
        
        <category>Android</category>
        
        <category>nodejs</category>
        
      </item>
    
  </channel>
</rss>
